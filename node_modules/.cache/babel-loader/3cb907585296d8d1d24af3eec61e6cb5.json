{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _rcDropdown = _interopRequireDefault(require(\"rc-dropdown\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _RightOutlined = _interopRequireDefault(require(\"@ant-design/icons/RightOutlined\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\n\nvar _type = require(\"../_util/type\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar Placements = (0, _type.tuple)('topLeft', 'topCenter', 'topRight', 'bottomLeft', 'bottomCenter', 'bottomRight');\n\nvar Dropdown = /*#__PURE__*/function (_React$Component) {\n  _inherits(Dropdown, _React$Component);\n\n  function Dropdown() {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dropdown).apply(this, arguments));\n\n    _this.renderOverlay = function (prefixCls) {\n      // rc-dropdown already can process the function of overlay, but we have check logic here.\n      // So we need render the element to check and pass back to rc-dropdown.\n      var overlay = _this.props.overlay;\n      var overlayNode;\n\n      if (typeof overlay === 'function') {\n        overlayNode = overlay();\n      } else {\n        overlayNode = overlay;\n      }\n\n      overlayNode = React.Children.only(overlayNode);\n      var overlayProps = overlayNode.props; // Warning if use other mode\n\n      (0, _warning[\"default\"])(!overlayProps.mode || overlayProps.mode === 'vertical', 'Dropdown', \"mode=\\\"\".concat(overlayProps.mode, \"\\\" is not supported for Dropdown's Menu.\")); // menu cannot be selectable in dropdown defaultly\n      // menu should be focusable in dropdown defaultly\n\n      var _overlayProps$selecta = overlayProps.selectable,\n          selectable = _overlayProps$selecta === void 0 ? false : _overlayProps$selecta,\n          _overlayProps$focusab = overlayProps.focusable,\n          focusable = _overlayProps$focusab === void 0 ? true : _overlayProps$focusab;\n      var expandIcon = React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-menu-submenu-arrow\")\n      }, React.createElement(_RightOutlined[\"default\"], {\n        className: \"\".concat(prefixCls, \"-menu-submenu-arrow-icon\")\n      }));\n      var fixedModeOverlay = typeof overlayNode.type === 'string' ? overlay : React.cloneElement(overlayNode, {\n        mode: 'vertical',\n        selectable: selectable,\n        focusable: focusable,\n        expandIcon: expandIcon\n      });\n      return fixedModeOverlay;\n    };\n\n    _this.renderDropDown = function (_ref) {\n      var getContextPopupContainer = _ref.getPopupContainer,\n          getPrefixCls = _ref.getPrefixCls,\n          direction = _ref.direction;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          children = _this$props.children,\n          trigger = _this$props.trigger,\n          disabled = _this$props.disabled,\n          getPopupContainer = _this$props.getPopupContainer,\n          overlayClassName = _this$props.overlayClassName;\n      var prefixCls = getPrefixCls('dropdown', customizePrefixCls);\n      var child = React.Children.only(children);\n      var dropdownTrigger = React.cloneElement(child, {\n        className: (0, _classnames[\"default\"])(child.props.className, \"\".concat(prefixCls, \"-trigger\"), _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl')),\n        disabled: disabled\n      });\n      var overlayClassNameCustomized = (0, _classnames[\"default\"])(overlayClassName, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'));\n      var triggerActions = disabled ? [] : trigger;\n      var alignPoint;\n\n      if (triggerActions && triggerActions.indexOf('contextMenu') !== -1) {\n        alignPoint = true;\n      }\n\n      return React.createElement(_rcDropdown[\"default\"], _extends({\n        alignPoint: alignPoint\n      }, _this.props, {\n        overlayClassName: overlayClassNameCustomized,\n        prefixCls: prefixCls,\n        getPopupContainer: getPopupContainer || getContextPopupContainer,\n        transitionName: _this.getTransitionName(),\n        trigger: triggerActions,\n        overlay: function overlay() {\n          return _this.renderOverlay(prefixCls);\n        },\n        placement: _this.getPlacement(direction)\n      }), dropdownTrigger);\n    };\n\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"getTransitionName\",\n    value: function getTransitionName() {\n      var _this$props2 = this.props,\n          _this$props2$placemen = _this$props2.placement,\n          placement = _this$props2$placemen === void 0 ? '' : _this$props2$placemen,\n          transitionName = _this$props2.transitionName;\n\n      if (transitionName !== undefined) {\n        return transitionName;\n      }\n\n      if (placement.indexOf('top') >= 0) {\n        return 'slide-down';\n      }\n\n      return 'slide-up';\n    }\n  }, {\n    key: \"getPlacement\",\n    value: function getPlacement() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'ltr';\n      var placement = this.props.placement;\n\n      if (placement !== undefined) {\n        return placement;\n      }\n\n      return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_configProvider.ConfigConsumer, null, this.renderDropDown);\n    }\n  }]);\n\n  return Dropdown;\n}(React.Component);\n\nexports[\"default\"] = Dropdown;\nDropdown.defaultProps = {\n  mouseEnterDelay: 0.15,\n  mouseLeaveDelay: 0.1\n};","map":{"version":3,"sources":["dropdown/dropdown.jsx"],"names":["Placements","Dropdown","React","Component","overlay","overlayNode","overlayProps","selectable","focusable","expandIcon","fixedModeOverlay","mode","getPopupContainer","getContextPopupContainer","getPrefixCls","direction","customizePrefixCls","children","trigger","disabled","overlayClassName","prefixCls","child","dropdownTrigger","className","overlayClassNameCustomized","triggerActions","alignPoint","placement","transitionName","mouseEnterDelay","mouseLeaveDelay"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport RcDropdown from 'rc-dropdown';\nimport classNames from 'classnames';\nimport RightOutlined from '@ant-design/icons/RightOutlined';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport { tuple } from '../_util/type';\nconst Placements = tuple('topLeft', 'topCenter', 'topRight', 'bottomLeft', 'bottomCenter', 'bottomRight');\nexport default class Dropdown extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderOverlay = (prefixCls) => {\n            // rc-dropdown already can process the function of overlay, but we have check logic here.\n            // So we need render the element to check and pass back to rc-dropdown.\n            const { overlay } = this.props;\n            let overlayNode;\n            if (typeof overlay === 'function') {\n                overlayNode = overlay();\n            }\n            else {\n                overlayNode = overlay;\n            }\n            overlayNode = React.Children.only(overlayNode);\n            const overlayProps = overlayNode.props;\n            // Warning if use other mode\n            warning(!overlayProps.mode || overlayProps.mode === 'vertical', 'Dropdown', `mode=\"${overlayProps.mode}\" is not supported for Dropdown's Menu.`);\n            // menu cannot be selectable in dropdown defaultly\n            // menu should be focusable in dropdown defaultly\n            const { selectable = false, focusable = true } = overlayProps;\n            const expandIcon = (<span className={`${prefixCls}-menu-submenu-arrow`}>\n        <RightOutlined className={`${prefixCls}-menu-submenu-arrow-icon`}/>\n      </span>);\n            const fixedModeOverlay = typeof overlayNode.type === 'string'\n                ? overlay\n                : React.cloneElement(overlayNode, {\n                    mode: 'vertical',\n                    selectable,\n                    focusable,\n                    expandIcon,\n                });\n            return fixedModeOverlay;\n        };\n        this.renderDropDown = ({ getPopupContainer: getContextPopupContainer, getPrefixCls, direction, }) => {\n            const { prefixCls: customizePrefixCls, children, trigger, disabled, getPopupContainer, overlayClassName, } = this.props;\n            const prefixCls = getPrefixCls('dropdown', customizePrefixCls);\n            const child = React.Children.only(children);\n            const dropdownTrigger = React.cloneElement(child, {\n                className: classNames(child.props.className, `${prefixCls}-trigger`, {\n                    [`${prefixCls}-rtl`]: direction === 'rtl',\n                }),\n                disabled,\n            });\n            const overlayClassNameCustomized = classNames(overlayClassName, {\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            });\n            const triggerActions = disabled ? [] : trigger;\n            let alignPoint;\n            if (triggerActions && triggerActions.indexOf('contextMenu') !== -1) {\n                alignPoint = true;\n            }\n            return (<RcDropdown alignPoint={alignPoint} {...this.props} overlayClassName={overlayClassNameCustomized} prefixCls={prefixCls} getPopupContainer={getPopupContainer || getContextPopupContainer} transitionName={this.getTransitionName()} trigger={triggerActions} overlay={() => this.renderOverlay(prefixCls)} placement={this.getPlacement(direction)}>\n        {dropdownTrigger}\n      </RcDropdown>);\n        };\n    }\n    getTransitionName() {\n        const { placement = '', transitionName } = this.props;\n        if (transitionName !== undefined) {\n            return transitionName;\n        }\n        if (placement.indexOf('top') >= 0) {\n            return 'slide-down';\n        }\n        return 'slide-up';\n    }\n    getPlacement(direction = 'ltr') {\n        const { placement } = this.props;\n        if (placement !== undefined) {\n            return placement;\n        }\n        return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n    }\n    render() {\n        return <ConfigConsumer>{this.renderDropDown}</ConfigConsumer>;\n    }\n}\nDropdown.defaultProps = {\n    mouseEnterDelay: 0.15,\n    mouseLeaveDelay: 0.1,\n};\n"]},"metadata":{},"sourceType":"script"}