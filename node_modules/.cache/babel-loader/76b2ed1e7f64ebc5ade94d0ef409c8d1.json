{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _rcUpload = _interopRequireDefault(require(\"rc-upload\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _uniqBy = _interopRequireDefault(require(\"lodash/uniqBy\"));\n\nvar _findIndex = _interopRequireDefault(require(\"lodash/findIndex\"));\n\nvar _UploadList = _interopRequireDefault(require(\"./UploadList\"));\n\nvar _utils = require(\"./utils\");\n\nvar _LocaleReceiver = _interopRequireDefault(require(\"../locale-provider/LocaleReceiver\"));\n\nvar _default2 = _interopRequireDefault(require(\"../locale/default\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar Upload = /*#__PURE__*/function (_React$Component) {\n  _inherits(Upload, _React$Component);\n\n  function Upload(props) {\n    var _this;\n\n    _classCallCheck(this, Upload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Upload).call(this, props));\n\n    _this.saveUpload = function (node) {\n      _this.upload = node;\n    };\n\n    _this.onStart = function (file) {\n      var fileList = _this.state.fileList;\n      var targetItem = (0, _utils.fileToObject)(file);\n      targetItem.status = 'uploading';\n      var nextFileList = fileList.concat();\n      var fileIndex = (0, _findIndex[\"default\"])(nextFileList, function (_ref) {\n        var uid = _ref.uid;\n        return uid === targetItem.uid;\n      });\n\n      if (fileIndex === -1) {\n        nextFileList.push(targetItem);\n      } else {\n        nextFileList[fileIndex] = targetItem;\n      }\n\n      _this.onChange({\n        file: targetItem,\n        fileList: nextFileList\n      });\n    };\n\n    _this.onSuccess = function (response, file, xhr) {\n      _this.clearProgressTimer();\n\n      try {\n        if (typeof response === 'string') {\n          response = JSON.parse(response);\n        }\n      } catch (e) {\n        /* do nothing */\n      }\n\n      var fileList = _this.state.fileList;\n      var targetItem = (0, _utils.getFileItem)(file, fileList); // removed\n\n      if (!targetItem) {\n        return;\n      }\n\n      targetItem.status = 'done';\n      targetItem.response = response;\n      targetItem.xhr = xhr;\n\n      _this.onChange({\n        file: _extends({}, targetItem),\n        fileList: fileList\n      });\n    };\n\n    _this.onProgress = function (e, file) {\n      var fileList = _this.state.fileList;\n      var targetItem = (0, _utils.getFileItem)(file, fileList); // removed\n\n      if (!targetItem) {\n        return;\n      }\n\n      targetItem.percent = e.percent;\n\n      _this.onChange({\n        event: e,\n        file: _extends({}, targetItem),\n        fileList: fileList\n      });\n    };\n\n    _this.onError = function (error, response, file) {\n      _this.clearProgressTimer();\n\n      var fileList = _this.state.fileList;\n      var targetItem = (0, _utils.getFileItem)(file, fileList); // removed\n\n      if (!targetItem) {\n        return;\n      }\n\n      targetItem.error = error;\n      targetItem.response = response;\n      targetItem.status = 'error';\n\n      _this.onChange({\n        file: _extends({}, targetItem),\n        fileList: fileList\n      });\n    };\n\n    _this.handleRemove = function (file) {\n      var onRemove = _this.props.onRemove;\n      var fileList = _this.state.fileList;\n      Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(function (ret) {\n        // Prevent removing file\n        if (ret === false) {\n          return;\n        }\n\n        var removedFileList = (0, _utils.removeFileItem)(file, fileList);\n\n        if (removedFileList) {\n          file.status = 'removed'; // eslint-disable-line\n\n          if (_this.upload) {\n            _this.upload.abort(file);\n          }\n\n          _this.onChange({\n            file: file,\n            fileList: removedFileList\n          });\n        }\n      });\n    };\n\n    _this.onChange = function (info) {\n      if (!('fileList' in _this.props)) {\n        _this.setState({\n          fileList: info.fileList\n        });\n      }\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange(info);\n      }\n    };\n\n    _this.onFileDrop = function (e) {\n      _this.setState({\n        dragState: e.type\n      });\n    };\n\n    _this.beforeUpload = function (file, fileList) {\n      var beforeUpload = _this.props.beforeUpload;\n      var stateFileList = _this.state.fileList;\n\n      if (!beforeUpload) {\n        return true;\n      }\n\n      var result = beforeUpload(file, fileList);\n\n      if (result === false) {\n        _this.onChange({\n          file: file,\n          fileList: (0, _uniqBy[\"default\"])(stateFileList.concat(fileList.map(_utils.fileToObject)), function (item) {\n            return item.uid;\n          })\n        });\n\n        return false;\n      }\n\n      if (result && result.then) {\n        return result;\n      }\n\n      return true;\n    };\n\n    _this.renderUploadList = function (locale) {\n      var _this$props = _this.props,\n          showUploadList = _this$props.showUploadList,\n          listType = _this$props.listType,\n          onPreview = _this$props.onPreview,\n          onDownload = _this$props.onDownload,\n          previewFile = _this$props.previewFile,\n          disabled = _this$props.disabled,\n          propLocale = _this$props.locale,\n          iconRender = _this$props.iconRender;\n      var showRemoveIcon = showUploadList.showRemoveIcon,\n          showPreviewIcon = showUploadList.showPreviewIcon,\n          showDownloadIcon = showUploadList.showDownloadIcon,\n          removeIcon = showUploadList.removeIcon,\n          downloadIcon = showUploadList.downloadIcon;\n      var fileList = _this.state.fileList;\n      return React.createElement(_UploadList[\"default\"], {\n        listType: listType,\n        items: fileList,\n        previewFile: previewFile,\n        onPreview: onPreview,\n        onDownload: onDownload,\n        onRemove: _this.handleRemove,\n        showRemoveIcon: !disabled && showRemoveIcon,\n        showPreviewIcon: showPreviewIcon,\n        showDownloadIcon: showDownloadIcon,\n        removeIcon: removeIcon,\n        downloadIcon: downloadIcon,\n        iconRender: iconRender,\n        locale: _extends(_extends({}, locale), propLocale)\n      });\n    };\n\n    _this.renderUpload = function (_ref2) {\n      var _classNames2;\n\n      var getPrefixCls = _ref2.getPrefixCls,\n          direction = _ref2.direction;\n      var _this$props2 = _this.props,\n          customizePrefixCls = _this$props2.prefixCls,\n          className = _this$props2.className,\n          showUploadList = _this$props2.showUploadList,\n          listType = _this$props2.listType,\n          type = _this$props2.type,\n          disabled = _this$props2.disabled,\n          children = _this$props2.children,\n          style = _this$props2.style;\n      var _this$state = _this.state,\n          fileList = _this$state.fileList,\n          dragState = _this$state.dragState;\n      var prefixCls = getPrefixCls('upload', customizePrefixCls);\n\n      var rcUploadProps = _extends(_extends({\n        onStart: _this.onStart,\n        onError: _this.onError,\n        onProgress: _this.onProgress,\n        onSuccess: _this.onSuccess\n      }, _this.props), {\n        prefixCls: prefixCls,\n        beforeUpload: _this.beforeUpload\n      });\n\n      delete rcUploadProps.className;\n      delete rcUploadProps.style;\n      var uploadList = showUploadList ? React.createElement(_LocaleReceiver[\"default\"], {\n        componentName: \"Upload\",\n        defaultLocale: _default2[\"default\"].Upload\n      }, _this.renderUploadList) : null;\n\n      if (type === 'drag') {\n        var _classNames;\n\n        var dragCls = (0, _classnames[\"default\"])(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-uploading\"), fileList.some(function (file) {\n          return file.status === 'uploading';\n        })), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-hover\"), dragState === 'dragover'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames), className);\n        return React.createElement(\"span\", null, React.createElement(\"div\", {\n          className: dragCls,\n          onDrop: _this.onFileDrop,\n          onDragOver: _this.onFileDrop,\n          onDragLeave: _this.onFileDrop,\n          style: style\n        }, React.createElement(_rcUpload[\"default\"], _extends({}, rcUploadProps, {\n          ref: _this.saveUpload,\n          className: \"\".concat(prefixCls, \"-btn\")\n        }), React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-drag-container\")\n        }, children))), uploadList);\n      }\n\n      var uploadButtonCls = (0, _classnames[\"default\"])(prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-select\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-select-\").concat(listType), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames2)); // Remove id to avoid open by label when trigger is hidden\n      // https://github.com/ant-design/ant-design/issues/14298\n      // https://github.com/ant-design/ant-design/issues/16478\n\n      if (!children || disabled) {\n        delete rcUploadProps.id;\n      }\n\n      var uploadButton = React.createElement(\"div\", {\n        className: uploadButtonCls,\n        style: children ? undefined : {\n          display: 'none'\n        }\n      }, React.createElement(_rcUpload[\"default\"], _extends({}, rcUploadProps, {\n        ref: _this.saveUpload\n      })));\n\n      if (listType === 'picture-card') {\n        return React.createElement(\"span\", {\n          className: (0, _classnames[\"default\"])(className, \"\".concat(prefixCls, \"-picture-card-wrapper\"))\n        }, uploadList, uploadButton);\n      }\n\n      return React.createElement(\"span\", {\n        className: className\n      }, uploadButton, uploadList);\n    };\n\n    _this.state = {\n      fileList: props.fileList || props.defaultFileList || [],\n      dragState: 'drop'\n    };\n    (0, _warning[\"default\"])('fileList' in props || !('value' in props), 'Upload', '`value` is not validate prop, do you mean `fileList`?');\n    return _this;\n  }\n\n  _createClass(Upload, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearProgressTimer();\n    }\n  }, {\n    key: \"clearProgressTimer\",\n    value: function clearProgressTimer() {\n      clearInterval(this.progressTimer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_configProvider.ConfigConsumer, null, this.renderUpload);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('fileList' in nextProps) {\n        return {\n          fileList: nextProps.fileList || []\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Upload;\n}(React.Component);\n\nUpload.defaultProps = {\n  type: 'select',\n  multiple: false,\n  action: '',\n  data: {},\n  accept: '',\n  beforeUpload: _utils.T,\n  showUploadList: true,\n  listType: 'text',\n  className: '',\n  disabled: false,\n  supportServerRender: true\n};\nvar _default = Upload;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["upload/Upload.jsx"],"names":["Upload","React","Component","fileList","targetItem","nextFileList","fileIndex","uid","file","response","JSON","e","event","onRemove","Promise","ret","removedFileList","info","onChange","dragState","type","beforeUpload","stateFileList","result","fileToObject","item","showUploadList","listType","onPreview","onDownload","previewFile","disabled","propLocale","iconRender","showRemoveIcon","showPreviewIcon","showDownloadIcon","removeIcon","downloadIcon","getPrefixCls","direction","customizePrefixCls","className","children","style","prefixCls","rcUploadProps","onStart","onError","onProgress","onSuccess","uploadList","defaultLocale","dragCls","uploadButtonCls","uploadButton","display","saveUpload","props","nextProps","clearInterval","multiple","action","data","accept","T","supportServerRender"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport RcUpload from 'rc-upload';\nimport classNames from 'classnames';\nimport uniqBy from 'lodash/uniqBy';\nimport findIndex from 'lodash/findIndex';\nimport UploadList from './UploadList';\nimport { T, fileToObject, getFileItem, removeFileItem } from './utils';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nclass Upload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveUpload = (node) => {\n            this.upload = node;\n        };\n        this.onStart = (file) => {\n            const { fileList } = this.state;\n            const targetItem = fileToObject(file);\n            targetItem.status = 'uploading';\n            const nextFileList = fileList.concat();\n            const fileIndex = findIndex(nextFileList, ({ uid }) => uid === targetItem.uid);\n            if (fileIndex === -1) {\n                nextFileList.push(targetItem);\n            }\n            else {\n                nextFileList[fileIndex] = targetItem;\n            }\n            this.onChange({\n                file: targetItem,\n                fileList: nextFileList,\n            });\n        };\n        this.onSuccess = (response, file, xhr) => {\n            this.clearProgressTimer();\n            try {\n                if (typeof response === 'string') {\n                    response = JSON.parse(response);\n                }\n            }\n            catch (e) {\n                /* do nothing */\n            }\n            const { fileList } = this.state;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.status = 'done';\n            targetItem.response = response;\n            targetItem.xhr = xhr;\n            this.onChange({\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.onProgress = (e, file) => {\n            const { fileList } = this.state;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.percent = e.percent;\n            this.onChange({\n                event: e,\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.onError = (error, response, file) => {\n            this.clearProgressTimer();\n            const { fileList } = this.state;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.error = error;\n            targetItem.response = response;\n            targetItem.status = 'error';\n            this.onChange({\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.handleRemove = (file) => {\n            const { onRemove } = this.props;\n            const { fileList } = this.state;\n            Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(ret => {\n                // Prevent removing file\n                if (ret === false) {\n                    return;\n                }\n                const removedFileList = removeFileItem(file, fileList);\n                if (removedFileList) {\n                    file.status = 'removed'; // eslint-disable-line\n                    if (this.upload) {\n                        this.upload.abort(file);\n                    }\n                    this.onChange({\n                        file,\n                        fileList: removedFileList,\n                    });\n                }\n            });\n        };\n        this.onChange = (info) => {\n            if (!('fileList' in this.props)) {\n                this.setState({ fileList: info.fileList });\n            }\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange(info);\n            }\n        };\n        this.onFileDrop = (e) => {\n            this.setState({\n                dragState: e.type,\n            });\n        };\n        this.beforeUpload = (file, fileList) => {\n            const { beforeUpload } = this.props;\n            const { fileList: stateFileList } = this.state;\n            if (!beforeUpload) {\n                return true;\n            }\n            const result = beforeUpload(file, fileList);\n            if (result === false) {\n                this.onChange({\n                    file,\n                    fileList: uniqBy(stateFileList.concat(fileList.map(fileToObject)), (item) => item.uid),\n                });\n                return false;\n            }\n            if (result && result.then) {\n                return result;\n            }\n            return true;\n        };\n        this.renderUploadList = (locale) => {\n            const { showUploadList, listType, onPreview, onDownload, previewFile, disabled, locale: propLocale, iconRender, } = this.props;\n            const { showRemoveIcon, showPreviewIcon, showDownloadIcon, removeIcon, downloadIcon, } = showUploadList;\n            const { fileList } = this.state;\n            return (<UploadList listType={listType} items={fileList} previewFile={previewFile} onPreview={onPreview} onDownload={onDownload} onRemove={this.handleRemove} showRemoveIcon={!disabled && showRemoveIcon} showPreviewIcon={showPreviewIcon} showDownloadIcon={showDownloadIcon} removeIcon={removeIcon} downloadIcon={downloadIcon} iconRender={iconRender} locale={Object.assign(Object.assign({}, locale), propLocale)}/>);\n        };\n        this.renderUpload = ({ getPrefixCls, direction }) => {\n            const { prefixCls: customizePrefixCls, className, showUploadList, listType, type, disabled, children, style, } = this.props;\n            const { fileList, dragState } = this.state;\n            const prefixCls = getPrefixCls('upload', customizePrefixCls);\n            const rcUploadProps = Object.assign(Object.assign({ onStart: this.onStart, onError: this.onError, onProgress: this.onProgress, onSuccess: this.onSuccess }, this.props), { prefixCls, beforeUpload: this.beforeUpload });\n            delete rcUploadProps.className;\n            delete rcUploadProps.style;\n            const uploadList = showUploadList ? (<LocaleReceiver componentName=\"Upload\" defaultLocale={defaultLocale.Upload}>\n        {this.renderUploadList}\n      </LocaleReceiver>) : null;\n            if (type === 'drag') {\n                const dragCls = classNames(prefixCls, {\n                    [`${prefixCls}-drag`]: true,\n                    [`${prefixCls}-drag-uploading`]: fileList.some(file => file.status === 'uploading'),\n                    [`${prefixCls}-drag-hover`]: dragState === 'dragover',\n                    [`${prefixCls}-disabled`]: disabled,\n                }, className);\n                return (<span>\n          <div className={dragCls} onDrop={this.onFileDrop} onDragOver={this.onFileDrop} onDragLeave={this.onFileDrop} style={style}>\n            <RcUpload {...rcUploadProps} ref={this.saveUpload} className={`${prefixCls}-btn`}>\n              <div className={`${prefixCls}-drag-container`}>{children}</div>\n            </RcUpload>\n          </div>\n          {uploadList}\n        </span>);\n            }\n            const uploadButtonCls = classNames(prefixCls, {\n                [`${prefixCls}-select`]: true,\n                [`${prefixCls}-select-${listType}`]: true,\n                [`${prefixCls}-disabled`]: disabled,\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            });\n            // Remove id to avoid open by label when trigger is hidden\n            // https://github.com/ant-design/ant-design/issues/14298\n            // https://github.com/ant-design/ant-design/issues/16478\n            if (!children || disabled) {\n                delete rcUploadProps.id;\n            }\n            const uploadButton = (<div className={uploadButtonCls} style={children ? undefined : { display: 'none' }}>\n        <RcUpload {...rcUploadProps} ref={this.saveUpload}/>\n      </div>);\n            if (listType === 'picture-card') {\n                return (<span className={classNames(className, `${prefixCls}-picture-card-wrapper`)}>\n          {uploadList}\n          {uploadButton}\n        </span>);\n            }\n            return (<span className={className}>\n        {uploadButton}\n        {uploadList}\n      </span>);\n        };\n        this.state = {\n            fileList: props.fileList || props.defaultFileList || [],\n            dragState: 'drop',\n        };\n        warning('fileList' in props || !('value' in props), 'Upload', '`value` is not validate prop, do you mean `fileList`?');\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('fileList' in nextProps) {\n            return {\n                fileList: nextProps.fileList || [],\n            };\n        }\n        return null;\n    }\n    componentWillUnmount() {\n        this.clearProgressTimer();\n    }\n    clearProgressTimer() {\n        clearInterval(this.progressTimer);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderUpload}</ConfigConsumer>;\n    }\n}\nUpload.defaultProps = {\n    type: 'select',\n    multiple: false,\n    action: '',\n    data: {},\n    accept: '',\n    beforeUpload: T,\n    showUploadList: true,\n    listType: 'text',\n    className: '',\n    disabled: false,\n    supportServerRender: true,\n};\nexport default Upload;\n"]},"metadata":{},"sourceType":"script"}