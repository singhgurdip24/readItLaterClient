{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _omit = _interopRequireDefault(require(\"omit.js\"));\n\nvar _rcTable = _interopRequireDefault(require(\"rc-table\"));\n\nvar _Table = require(\"rc-table/lib/Table\");\n\nvar _spin = _interopRequireDefault(require(\"../spin\"));\n\nvar _pagination = _interopRequireDefault(require(\"../pagination\"));\n\nvar _context = require(\"../config-provider/context\");\n\nvar _usePagination3 = _interopRequireWildcard(require(\"./hooks/usePagination\"));\n\nvar _useLazyKVMap3 = _interopRequireDefault(require(\"./hooks/useLazyKVMap\"));\n\nvar _useSelection3 = _interopRequireWildcard(require(\"./hooks/useSelection\"));\n\nvar _useSorter3 = _interopRequireWildcard(require(\"./hooks/useSorter\"));\n\nvar _useFilter3 = _interopRequireWildcard(require(\"./hooks/useFilter\"));\n\nvar _useTitleColumns3 = _interopRequireDefault(require(\"./hooks/useTitleColumns\"));\n\nvar _ExpandIcon = _interopRequireDefault(require(\"./ExpandIcon\"));\n\nvar _scrollTo = _interopRequireDefault(require(\"../_util/scrollTo\"));\n\nvar _en_US = _interopRequireDefault(require(\"../locale/en_US\"));\n\nvar _SizeContext = _interopRequireDefault(require(\"../config-provider/SizeContext\"));\n\nvar _Column = _interopRequireDefault(require(\"./Column\"));\n\nvar _ColumnGroup = _interopRequireDefault(require(\"./ColumnGroup\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar EMPTY_LIST = [];\n\nfunction Table(props) {\n  var _classNames3;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      customizeSize = props.size,\n      bordered = props.bordered,\n      dropdownPrefixCls = props.dropdownPrefixCls,\n      dataSource = props.dataSource,\n      pagination = props.pagination,\n      rowSelection = props.rowSelection,\n      rowKey = props.rowKey,\n      rowClassName = props.rowClassName,\n      columns = props.columns,\n      children = props.children,\n      onChange = props.onChange,\n      getPopupContainer = props.getPopupContainer,\n      loading = props.loading,\n      expandIcon = props.expandIcon,\n      expandable = props.expandable,\n      expandedRowRender = props.expandedRowRender,\n      expandIconColumnIndex = props.expandIconColumnIndex,\n      indentSize = props.indentSize,\n      _props$childrenColumn = props.childrenColumnName,\n      childrenColumnName = _props$childrenColumn === void 0 ? 'children' : _props$childrenColumn,\n      scroll = props.scroll,\n      sortDirections = props.sortDirections,\n      locale = props.locale;\n  var tableProps = (0, _omit[\"default\"])(props, ['className', 'style']);\n  var size = React.useContext(_SizeContext[\"default\"]);\n\n  var _React$useContext = React.useContext(_context.ConfigContext),\n      _React$useContext$loc = _React$useContext.locale,\n      contextLocale = _React$useContext$loc === void 0 ? _en_US[\"default\"] : _React$useContext$loc,\n      renderEmpty = _React$useContext.renderEmpty,\n      direction = _React$useContext.direction;\n\n  var mergedSize = customizeSize || size;\n\n  var tableLocale = _extends(_extends({}, contextLocale.Table), locale);\n\n  var rawData = dataSource || EMPTY_LIST;\n\n  var _React$useContext2 = React.useContext(_context.ConfigContext),\n      getPrefixCls = _React$useContext2.getPrefixCls;\n\n  var prefixCls = getPrefixCls('table', customizePrefixCls);\n\n  var mergedExpandable = _extends({\n    expandIconColumnIndex: expandIconColumnIndex\n  }, expandable);\n\n  var expandType = React.useMemo(function () {\n    if (rawData.some(function (item) {\n      return item[childrenColumnName];\n    })) {\n      return 'nest';\n    }\n\n    if (expandedRowRender || expandable && expandable.expandedRowRender) {\n      return 'row';\n    }\n\n    return null;\n  }, [rawData]);\n  var internalRefs = {\n    body: React.useRef()\n  }; // ============================ RowKey ============================\n\n  var getRowKey = React.useMemo(function () {\n    if (typeof rowKey === 'function') {\n      return rowKey;\n    }\n\n    return function (record) {\n      return record[rowKey];\n    };\n  }, [rowKey]);\n\n  var _useLazyKVMap = (0, _useLazyKVMap3[\"default\"])(rawData, childrenColumnName, getRowKey),\n      _useLazyKVMap2 = _slicedToArray(_useLazyKVMap, 1),\n      getRecordByKey = _useLazyKVMap2[0]; // ============================ Events =============================\n\n\n  var changeEventInfo = {};\n\n  var triggerOnChange = function triggerOnChange(info) {\n    var reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var changeInfo = _extends(_extends({}, changeEventInfo), info);\n\n    if (reset) {\n      changeEventInfo.resetPagination(); // Reset event param\n\n      if (changeInfo.pagination.current) {\n        changeInfo.pagination.current = 1;\n      } // Trigger pagination events\n\n\n      if (pagination && pagination.onChange) {\n        pagination.onChange(1, changeInfo.pagination.pageSize);\n      }\n    }\n\n    if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n      (0, _scrollTo[\"default\"])(0, {\n        getContainer: function getContainer() {\n          return internalRefs.body.current;\n        }\n      });\n    }\n\n    if (onChange) {\n      onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n        currentDataSource: (0, _useFilter3.getFilterData)((0, _useSorter3.getSortData)(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates)\n      });\n    }\n  };\n  /**\n   * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?)\n   * to read state out and then put it back to title render.\n   * Move these code into `hooks` but still too complex.\n   * We should provides Table props like `sorter` & `filter` to handle control in next big version.\n   */\n  // ============================ Sorter =============================\n\n\n  var onSorterChange = function onSorterChange(sorter, sorterStates) {\n    triggerOnChange({\n      sorter: sorter,\n      sorterStates: sorterStates\n    }, false);\n  };\n\n  var _useSorter = (0, _useSorter3[\"default\"])({\n    prefixCls: prefixCls,\n    columns: columns,\n    children: children,\n    onSorterChange: onSorterChange,\n    sortDirections: sortDirections || ['ascend', 'descend']\n  }),\n      _useSorter2 = _slicedToArray(_useSorter, 4),\n      transformSorterColumns = _useSorter2[0],\n      sortStates = _useSorter2[1],\n      sorterTitleProps = _useSorter2[2],\n      getSorters = _useSorter2[3];\n\n  var sortedData = React.useMemo(function () {\n    return (0, _useSorter3.getSortData)(rawData, sortStates, childrenColumnName);\n  }, [rawData, sortStates]);\n  changeEventInfo.sorter = getSorters();\n  changeEventInfo.sorterStates = sortStates; // ============================ Filter ============================\n\n  var onFilterChange = function onFilterChange(filters, filterStates) {\n    triggerOnChange({\n      filters: filters,\n      filterStates: filterStates\n    }, true);\n  };\n\n  var _useFilter = (0, _useFilter3[\"default\"])({\n    prefixCls: prefixCls,\n    locale: tableLocale,\n    dropdownPrefixCls: dropdownPrefixCls,\n    columns: columns || [],\n    onFilterChange: onFilterChange,\n    getPopupContainer: getPopupContainer\n  }),\n      _useFilter2 = _slicedToArray(_useFilter, 3),\n      transformFilterColumns = _useFilter2[0],\n      filterStates = _useFilter2[1],\n      getFilters = _useFilter2[2];\n\n  var mergedData = (0, _useFilter3.getFilterData)(sortedData, filterStates);\n  changeEventInfo.filters = getFilters();\n  changeEventInfo.filterStates = filterStates; // ============================ Column ============================\n\n  var columnTitleProps = React.useMemo(function () {\n    return _extends({}, sorterTitleProps);\n  }, [sorterTitleProps]);\n\n  var _useTitleColumns = (0, _useTitleColumns3[\"default\"])(columnTitleProps),\n      _useTitleColumns2 = _slicedToArray(_useTitleColumns, 1),\n      transformTitleColumns = _useTitleColumns2[0]; // ========================== Pagination ==========================\n\n\n  var onPaginationChange = function onPaginationChange(current, pageSize) {\n    triggerOnChange({\n      pagination: _extends(_extends({}, changeEventInfo.pagination), {\n        current: current,\n        pageSize: pageSize\n      })\n    });\n  };\n\n  var _usePagination = (0, _usePagination3[\"default\"])(mergedData.length, pagination, onPaginationChange),\n      _usePagination2 = _slicedToArray(_usePagination, 2),\n      mergedPagination = _usePagination2[0],\n      resetPagination = _usePagination2[1];\n\n  changeEventInfo.pagination = pagination === false ? {} : (0, _usePagination3.getPaginationParam)(pagination, mergedPagination);\n  changeEventInfo.resetPagination = resetPagination; // ============================= Data =============================\n\n  var pageData = React.useMemo(function () {\n    if (pagination === false || !mergedPagination.pageSize || mergedData.length < mergedPagination.total) {\n      return mergedData;\n    }\n\n    var _mergedPagination$cur = mergedPagination.current,\n        current = _mergedPagination$cur === void 0 ? 1 : _mergedPagination$cur,\n        _mergedPagination$pag = mergedPagination.pageSize,\n        pageSize = _mergedPagination$pag === void 0 ? _usePagination3.DEFAULT_PAGE_SIZE : _mergedPagination$pag;\n    var currentPageData = mergedData.slice((current - 1) * pageSize, current * pageSize);\n    return currentPageData;\n  }, [!!pagination, mergedData, mergedPagination && mergedPagination.current, mergedPagination && mergedPagination.pageSize, mergedPagination && mergedPagination.total]); // ========================== Selections ==========================\n\n  var _useSelection = (0, _useSelection3[\"default\"])(rowSelection, {\n    prefixCls: prefixCls,\n    data: mergedData,\n    pageData: pageData,\n    getRowKey: getRowKey,\n    getRecordByKey: getRecordByKey,\n    expandType: expandType,\n    childrenColumnName: childrenColumnName,\n    locale: tableLocale,\n    expandIconColumnIndex: mergedExpandable.expandIconColumnIndex\n  }),\n      _useSelection2 = _slicedToArray(_useSelection, 2),\n      transformSelectionColumns = _useSelection2[0],\n      selectedKeySet = _useSelection2[1];\n\n  var internalRowClassName = function internalRowClassName(record, index, indent) {\n    var mergedRowClassName;\n\n    if (typeof rowClassName === 'function') {\n      mergedRowClassName = (0, _classnames[\"default\"])(rowClassName(record, index, indent));\n    } else {\n      mergedRowClassName = (0, _classnames[\"default\"])(rowClassName);\n    }\n\n    return (0, _classnames[\"default\"])(_defineProperty({}, \"\".concat(prefixCls, \"-row-selected\"), selectedKeySet.has(getRowKey(record, index))), mergedRowClassName);\n  }; // ========================== Expandable ==========================\n  // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n\n\n  mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon; // Customize expandable icon\n\n  mergedExpandable.expandIcon = mergedExpandable.expandIcon || expandIcon || (0, _ExpandIcon[\"default\"])(tableLocale); // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n\n  if (expandType === 'nest' && mergedExpandable.expandIconColumnIndex === undefined) {\n    mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n  } else if (mergedExpandable.expandIconColumnIndex > 0 && rowSelection) {\n    mergedExpandable.expandIconColumnIndex -= 1;\n  } // Indent size\n\n\n  mergedExpandable.indentSize = mergedExpandable.indentSize || indentSize || 15; // ============================ Render ============================\n\n  var transformColumns = React.useCallback(function (innerColumns) {\n    return transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns))));\n  }, [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n  var topPaginationNode;\n  var bottomPaginationNode;\n\n  if (pagination !== false) {\n    var paginationSize;\n\n    if (mergedPagination.size) {\n      paginationSize = mergedPagination.size;\n    } else {\n      paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n    }\n\n    var renderPagination = function renderPagination() {\n      return React.createElement(_pagination[\"default\"], _extends({\n        className: \"\".concat(prefixCls, \"-pagination\")\n      }, mergedPagination, {\n        size: paginationSize\n      }));\n    };\n\n    switch (mergedPagination.position) {\n      case 'top':\n        topPaginationNode = renderPagination();\n        break;\n\n      case 'both':\n        topPaginationNode = renderPagination();\n        bottomPaginationNode = renderPagination();\n        break;\n\n      default:\n        bottomPaginationNode = renderPagination();\n    }\n  } // >>>>>>>>> Spinning\n\n\n  var spinProps;\n\n  if (typeof loading === 'boolean') {\n    spinProps = {\n      spinning: loading\n    };\n  } else {\n    spinProps = loading;\n  }\n\n  var wrapperClassNames = (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-wrapper\"), className, _defineProperty({}, \"\".concat(prefixCls, \"-wrapper-rtl\"), direction === 'rtl'));\n  return React.createElement(\"div\", {\n    className: wrapperClassNames,\n    style: style,\n    onTouchMove: function onTouchMove(e) {\n      e.preventDefault();\n    }\n  }, React.createElement(_spin[\"default\"], _extends({\n    spinning: false\n  }, spinProps), topPaginationNode, React.createElement(_rcTable[\"default\"], _extends({}, tableProps, {\n    expandable: mergedExpandable,\n    prefixCls: prefixCls,\n    className: (0, _classnames[\"default\"])((_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefixCls, \"-middle\"), mergedSize === 'middle'), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-small\"), mergedSize === 'small'), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-bordered\"), bordered), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames3)),\n    data: pageData,\n    rowKey: getRowKey,\n    rowClassName: internalRowClassName,\n    emptyText: locale && locale.emptyText || renderEmpty('Table') // Internal\n    ,\n    internalHooks: _Table.INTERNAL_HOOKS,\n    internalRefs: internalRefs,\n    transformColumns: transformColumns\n  })), bottomPaginationNode));\n}\n\nTable.defaultProps = {\n  rowKey: 'key'\n};\nTable.SELECTION_ALL = _useSelection3.SELECTION_ALL;\nTable.SELECTION_INVERT = _useSelection3.SELECTION_INVERT;\nTable.Column = _Column[\"default\"];\nTable.ColumnGroup = _ColumnGroup[\"default\"];\nvar _default = Table;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["table/Table.jsx"],"names":["EMPTY_LIST","customizePrefixCls","className","style","customizeSize","bordered","dropdownPrefixCls","dataSource","pagination","rowSelection","rowKey","rowClassName","columns","children","onChange","getPopupContainer","loading","expandIcon","expandable","expandedRowRender","expandIconColumnIndex","indentSize","childrenColumnName","scroll","sortDirections","locale","props","tableProps","size","React","SizeContext","contextLocale","defaultLocale","renderEmpty","direction","ConfigContext","mergedSize","tableLocale","rawData","getPrefixCls","prefixCls","mergedExpandable","expandType","item","internalRefs","body","getRowKey","record","getRecordByKey","changeEventInfo","triggerOnChange","reset","changeInfo","getContainer","currentDataSource","onSorterChange","sorter","sorterStates","transformSorterColumns","sortStates","sorterTitleProps","getSorters","sortedData","onFilterChange","filters","filterStates","transformFilterColumns","getFilters","mergedData","columnTitleProps","transformTitleColumns","onPaginationChange","current","pageSize","mergedPagination","resetPagination","pageData","DEFAULT_PAGE_SIZE","currentPageData","transformSelectionColumns","selectedKeySet","data","internalRowClassName","mergedRowClassName","transformColumns","paginationSize","renderPagination","topPaginationNode","bottomPaginationNode","spinProps","spinning","wrapperClassNames","e","INTERNAL_HOOKS","Table","SELECTION_ALL","SELECTION_INVERT","Column","ColumnGroup"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport RcTable from 'rc-table';\nimport { INTERNAL_HOOKS } from 'rc-table/lib/Table';\nimport Spin from '../spin';\nimport Pagination from '../pagination';\nimport { ConfigContext } from '../config-provider/context';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport useSelection, { SELECTION_ALL, SELECTION_INVERT } from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport renderExpandIcon from './ExpandIcon';\nimport scrollTo from '../_util/scrollTo';\nimport defaultLocale from '../locale/en_US';\nimport SizeContext from '../config-provider/SizeContext';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nconst EMPTY_LIST = [];\nfunction Table(props) {\n    const { prefixCls: customizePrefixCls, className, style, size: customizeSize, bordered, dropdownPrefixCls, dataSource, pagination, rowSelection, rowKey, rowClassName, columns, children, onChange, getPopupContainer, loading, expandIcon, expandable, expandedRowRender, expandIconColumnIndex, indentSize, childrenColumnName = 'children', scroll, sortDirections, locale, } = props;\n    const tableProps = omit(props, ['className', 'style']);\n    const size = React.useContext(SizeContext);\n    const { locale: contextLocale = defaultLocale, renderEmpty, direction } = React.useContext(ConfigContext);\n    const mergedSize = customizeSize || size;\n    const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\n    const rawData = dataSource || EMPTY_LIST;\n    const { getPrefixCls } = React.useContext(ConfigContext);\n    const prefixCls = getPrefixCls('table', customizePrefixCls);\n    const mergedExpandable = Object.assign({ expandIconColumnIndex }, expandable);\n    const expandType = React.useMemo(() => {\n        if (rawData.some(item => item[childrenColumnName])) {\n            return 'nest';\n        }\n        if (expandedRowRender || (expandable && expandable.expandedRowRender)) {\n            return 'row';\n        }\n        return null;\n    }, [rawData]);\n    const internalRefs = {\n        body: React.useRef(),\n    };\n    // ============================ RowKey ============================\n    const getRowKey = React.useMemo(() => {\n        if (typeof rowKey === 'function') {\n            return rowKey;\n        }\n        return (record) => record[rowKey];\n    }, [rowKey]);\n    const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey);\n    // ============================ Events =============================\n    const changeEventInfo = {};\n    const triggerOnChange = (info, reset = false) => {\n        const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n        if (reset) {\n            changeEventInfo.resetPagination();\n            // Reset event param\n            if (changeInfo.pagination.current) {\n                changeInfo.pagination.current = 1;\n            }\n            // Trigger pagination events\n            if (pagination && pagination.onChange) {\n                pagination.onChange(1, changeInfo.pagination.pageSize);\n            }\n        }\n        if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n            scrollTo(0, {\n                getContainer: () => internalRefs.body.current,\n            });\n        }\n        if (onChange) {\n            onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n                currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates),\n            });\n        }\n    };\n    /**\n     * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?)\n     * to read state out and then put it back to title render.\n     * Move these code into `hooks` but still too complex.\n     * We should provides Table props like `sorter` & `filter` to handle control in next big version.\n     */\n    // ============================ Sorter =============================\n    const onSorterChange = (sorter, sorterStates) => {\n        triggerOnChange({\n            sorter,\n            sorterStates,\n        }, false);\n    };\n    const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\n        prefixCls,\n        columns,\n        children,\n        onSorterChange,\n        sortDirections: sortDirections || ['ascend', 'descend'],\n    });\n    const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [\n        rawData,\n        sortStates,\n    ]);\n    changeEventInfo.sorter = getSorters();\n    changeEventInfo.sorterStates = sortStates;\n    // ============================ Filter ============================\n    const onFilterChange = (filters, filterStates) => {\n        triggerOnChange({\n            filters,\n            filterStates,\n        }, true);\n    };\n    const [transformFilterColumns, filterStates, getFilters] = useFilter({\n        prefixCls,\n        locale: tableLocale,\n        dropdownPrefixCls,\n        columns: columns || [],\n        onFilterChange,\n        getPopupContainer,\n    });\n    const mergedData = getFilterData(sortedData, filterStates);\n    changeEventInfo.filters = getFilters();\n    changeEventInfo.filterStates = filterStates;\n    // ============================ Column ============================\n    const columnTitleProps = React.useMemo(() => (Object.assign({}, sorterTitleProps)), [sorterTitleProps]);\n    const [transformTitleColumns] = useTitleColumns(columnTitleProps);\n    // ========================== Pagination ==========================\n    const onPaginationChange = (current, pageSize) => {\n        triggerOnChange({\n            pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), { current, pageSize }),\n        });\n    };\n    const [mergedPagination, resetPagination] = usePagination(mergedData.length, pagination, onPaginationChange);\n    changeEventInfo.pagination =\n        pagination === false ? {} : getPaginationParam(pagination, mergedPagination);\n    changeEventInfo.resetPagination = resetPagination;\n    // ============================= Data =============================\n    const pageData = React.useMemo(() => {\n        if (pagination === false ||\n            !mergedPagination.pageSize ||\n            mergedData.length < mergedPagination.total) {\n            return mergedData;\n        }\n        const { current = 1, pageSize = DEFAULT_PAGE_SIZE } = mergedPagination;\n        const currentPageData = mergedData.slice((current - 1) * pageSize, current * pageSize);\n        return currentPageData;\n    }, [\n        !!pagination,\n        mergedData,\n        mergedPagination && mergedPagination.current,\n        mergedPagination && mergedPagination.pageSize,\n        mergedPagination && mergedPagination.total,\n    ]);\n    // ========================== Selections ==========================\n    const [transformSelectionColumns, selectedKeySet] = useSelection(rowSelection, {\n        prefixCls,\n        data: mergedData,\n        pageData,\n        getRowKey,\n        getRecordByKey,\n        expandType,\n        childrenColumnName,\n        locale: tableLocale,\n        expandIconColumnIndex: mergedExpandable.expandIconColumnIndex,\n    });\n    const internalRowClassName = (record, index, indent) => {\n        let mergedRowClassName;\n        if (typeof rowClassName === 'function') {\n            mergedRowClassName = classNames(rowClassName(record, index, indent));\n        }\n        else {\n            mergedRowClassName = classNames(rowClassName);\n        }\n        return classNames({\n            [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index)),\n        }, mergedRowClassName);\n    };\n    // ========================== Expandable ==========================\n    // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n    mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon;\n    // Customize expandable icon\n    mergedExpandable.expandIcon =\n        mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale);\n    // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n    if (expandType === 'nest' && mergedExpandable.expandIconColumnIndex === undefined) {\n        mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n    }\n    else if (mergedExpandable.expandIconColumnIndex > 0 && rowSelection) {\n        mergedExpandable.expandIconColumnIndex -= 1;\n    }\n    // Indent size\n    mergedExpandable.indentSize = mergedExpandable.indentSize || indentSize || 15;\n    // ============================ Render ============================\n    const transformColumns = React.useCallback((innerColumns) => {\n        return transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns))));\n    }, [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n    let topPaginationNode;\n    let bottomPaginationNode;\n    if (pagination !== false) {\n        let paginationSize;\n        if (mergedPagination.size) {\n            paginationSize = mergedPagination.size;\n        }\n        else {\n            paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n        }\n        const renderPagination = () => (<Pagination className={`${prefixCls}-pagination`} {...mergedPagination} size={paginationSize}/>);\n        switch (mergedPagination.position) {\n            case 'top':\n                topPaginationNode = renderPagination();\n                break;\n            case 'both':\n                topPaginationNode = renderPagination();\n                bottomPaginationNode = renderPagination();\n                break;\n            default:\n                bottomPaginationNode = renderPagination();\n        }\n    }\n    // >>>>>>>>> Spinning\n    let spinProps;\n    if (typeof loading === 'boolean') {\n        spinProps = {\n            spinning: loading,\n        };\n    }\n    else {\n        spinProps = loading;\n    }\n    const wrapperClassNames = classNames(`${prefixCls}-wrapper`, className, {\n        [`${prefixCls}-wrapper-rtl`]: direction === 'rtl',\n    });\n    return (<div className={wrapperClassNames} style={style} onTouchMove={e => {\n        e.preventDefault();\n    }}>\n      <Spin spinning={false} {...spinProps}>\n        {topPaginationNode}\n        <RcTable {...tableProps} expandable={mergedExpandable} prefixCls={prefixCls} className={classNames({\n        [`${prefixCls}-middle`]: mergedSize === 'middle',\n        [`${prefixCls}-small`]: mergedSize === 'small',\n        [`${prefixCls}-bordered`]: bordered,\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n    })} data={pageData} rowKey={getRowKey} rowClassName={internalRowClassName} emptyText={(locale && locale.emptyText) || renderEmpty('Table')} \n    // Internal\n    internalHooks={INTERNAL_HOOKS} internalRefs={internalRefs} transformColumns={transformColumns}/>\n        {bottomPaginationNode}\n      </Spin>\n    </div>);\n}\nTable.defaultProps = {\n    rowKey: 'key',\n};\nTable.SELECTION_ALL = SELECTION_ALL;\nTable.SELECTION_INVERT = SELECTION_INVERT;\nTable.Column = Column;\nTable.ColumnGroup = ColumnGroup;\nexport default Table;\n"]},"metadata":{},"sourceType":"script"}