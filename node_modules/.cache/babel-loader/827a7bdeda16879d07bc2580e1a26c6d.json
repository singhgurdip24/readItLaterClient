{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _rcNotification = _interopRequireDefault(require(\"rc-notification\"));\n\nvar _LoadingOutlined = _interopRequireDefault(require(\"@ant-design/icons/LoadingOutlined\"));\n\nvar _ExclamationCircleFilled = _interopRequireDefault(require(\"@ant-design/icons/ExclamationCircleFilled\"));\n\nvar _CloseCircleFilled = _interopRequireDefault(require(\"@ant-design/icons/CloseCircleFilled\"));\n\nvar _CheckCircleFilled = _interopRequireDefault(require(\"@ant-design/icons/CheckCircleFilled\"));\n\nvar _InfoCircleFilled = _interopRequireDefault(require(\"@ant-design/icons/InfoCircleFilled\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar defaultDuration = 3;\nvar defaultTop;\nvar messageInstance;\nvar key = 1;\nvar prefixCls = 'ant-message';\nvar transitionName = 'move-up';\nvar getContainer;\nvar maxCount;\n\nfunction getMessageInstance(callback) {\n  if (messageInstance) {\n    callback(messageInstance);\n    return;\n  }\n\n  _rcNotification[\"default\"].newInstance({\n    prefixCls: prefixCls,\n    transitionName: transitionName,\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer,\n    maxCount: maxCount\n  }, function (instance) {\n    if (messageInstance) {\n      callback(messageInstance);\n      return;\n    }\n\n    messageInstance = instance;\n    callback(instance);\n  });\n}\n\nvar iconMap = {\n  info: _InfoCircleFilled[\"default\"],\n  success: _CheckCircleFilled[\"default\"],\n  error: _CloseCircleFilled[\"default\"],\n  warning: _ExclamationCircleFilled[\"default\"],\n  loading: _LoadingOutlined[\"default\"]\n};\n\nfunction notice(args) {\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var IconComponent = iconMap[args.type];\n  var target = args.key || key++;\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n\n      return resolve(true);\n    };\n\n    getMessageInstance(function (instance) {\n      instance.notice({\n        key: target,\n        duration: duration,\n        style: {},\n        content: React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-custom-content\").concat(args.type ? \" \".concat(prefixCls, \"-\").concat(args.type) : '')\n        }, args.icon || IconComponent && React.createElement(IconComponent, null), React.createElement(\"span\", null, args.content)),\n        onClose: callback\n      });\n    });\n  });\n\n  var result = function result() {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n\n  result.promise = closePromise;\n  return result;\n}\n\nfunction isArgsProps(content) {\n  return Object.prototype.toString.call(content) === '[object Object]' && !!content.content;\n}\n\nvar api = {\n  open: notice,\n  config: function config(options) {\n    if (options.top !== undefined) {\n      defaultTop = options.top;\n      messageInstance = null; // delete messageInstance for new defaultTop\n    }\n\n    if (options.duration !== undefined) {\n      defaultDuration = options.duration;\n    }\n\n    if (options.prefixCls !== undefined) {\n      prefixCls = options.prefixCls;\n    }\n\n    if (options.getContainer !== undefined) {\n      getContainer = options.getContainer;\n    }\n\n    if (options.transitionName !== undefined) {\n      transitionName = options.transitionName;\n      messageInstance = null; // delete messageInstance for new transitionName\n    }\n\n    if (options.maxCount !== undefined) {\n      maxCount = options.maxCount;\n      messageInstance = null;\n    }\n  },\n  destroy: function destroy() {\n    if (messageInstance) {\n      messageInstance.destroy();\n      messageInstance = null;\n    }\n  }\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {\n  api[type] = function (content, duration, onClose) {\n    if (isArgsProps(content)) {\n      return api.open(_extends(_extends({}, content), {\n        type: type\n      }));\n    }\n\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n\n    return api.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n});\napi.warn = api.warning;\nvar _default = api;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["message/index.jsx"],"names":["defaultDuration","key","prefixCls","transitionName","callback","Notification","style","top","defaultTop","getContainer","maxCount","messageInstance","iconMap","info","InfoCircleFilled","success","CheckCircleFilled","error","CloseCircleFilled","warning","ExclamationCircleFilled","loading","LoadingOutlined","duration","args","IconComponent","target","closePromise","resolve","getMessageInstance","instance","content","onClose","result","Object","api","open","config","options","destroy","isArgsProps","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mCAAA,CAAA,CAAA;;AACA,IAAA,wBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,2CAAA,CAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qCAAA,CAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qCAAA,CAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,oCAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAIA,eAAe,GAAnB,CAAA;AACA,IAAA,UAAA;AACA,IAAA,eAAA;AACA,IAAIC,GAAG,GAAP,CAAA;AACA,IAAIC,SAAS,GAAb,aAAA;AACA,IAAIC,cAAc,GAAlB,SAAA;AACA,IAAA,YAAA;AACA,IAAA,QAAA;;AACA,SAAA,kBAAA,CAAA,QAAA,EAAsC;AAClC,MAAA,eAAA,EAAqB;AACjBC,IAAAA,QAAQ,CAARA,eAAQ,CAARA;AACA;AACH;;AACDC,EAAAA,eAAAA,CAAAA,SAAAA,CAAAA,CAAAA,WAAAA,CAAyB;AACrBH,IAAAA,SAAS,EADY,SAAA;AAErBC,IAAAA,cAAc,EAFO,cAAA;AAGrBG,IAAAA,KAAK,EAAE;AAAEC,MAAAA,GAAG,EAAEC;AAAP,KAHc;AAIrBC,IAAAA,YAAY,EAJS,YAAA;AAKrBC,IAAAA,QAAQ,EAARA;AALqB,GAAzBL,EAMG,UAAA,QAAA,EAAc;AACb,QAAA,eAAA,EAAqB;AACjBD,MAAAA,QAAQ,CAARA,eAAQ,CAARA;AACA;AACH;;AACDO,IAAAA,eAAe,GAAfA,QAAAA;AACAP,IAAAA,QAAQ,CAARA,QAAQ,CAARA;AAZJC,GAAAA;AAcH;;AACD,IAAMO,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAEC,iBAAAA,CADM,SACNA,CADM;AAEZC,EAAAA,OAAO,EAAEC,kBAAAA,CAFG,SAEHA,CAFG;AAGZC,EAAAA,KAAK,EAAEC,kBAAAA,CAHK,SAGLA,CAHK;AAIZC,EAAAA,OAAO,EAAEC,wBAAAA,CAJG,SAIHA,CAJG;AAKZC,EAAAA,OAAO,EAAEC,gBAAAA,CAAAA,SAAAA;AALG,CAAhB;;AAOA,SAAA,MAAA,CAAA,IAAA,EAAsB;AAClB,MAAMC,QAAQ,GAAGC,IAAI,CAAJA,QAAAA,KAAAA,SAAAA,GAA8BA,IAAI,CAAlCA,QAAAA,GAAjB,eAAA;AACA,MAAMC,aAAa,GAAGb,OAAO,CAACY,IAAI,CAAlC,IAA6B,CAA7B;AACA,MAAME,MAAM,GAAGF,IAAI,CAAJA,GAAAA,IAAYvB,GAA3B,EAAA;AACA,MAAM0B,YAAY,GAAG,IAAA,OAAA,CAAY,UAAA,OAAA,EAAW;AACxC,QAAMvB,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,UAAI,OAAOoB,IAAI,CAAX,OAAA,KAAJ,UAAA,EAAwC;AACpCA,QAAAA,IAAI,CAAJA,OAAAA;AACH;;AACD,aAAOI,OAAO,CAAd,IAAc,CAAd;AAJJ,KAAA;;AAMAC,IAAAA,kBAAkB,CAAC,UAAA,QAAA,EAAY;AAC3BC,MAAAA,QAAQ,CAARA,MAAAA,CAAgB;AACZ7B,QAAAA,GAAG,EADS,MAAA;AAEZsB,QAAAA,QAAQ,EAFI,QAAA;AAGZjB,QAAAA,KAAK,EAHO,EAAA;AAIZyB,QAAAA,OAAO,EAAG,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,UAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,iBAAA,EAAA,MAAA,CAAgCP,IAAI,CAAJA,IAAAA,GAAAA,IAAAA,MAAAA,CAAAA,SAAAA,EAAAA,GAAAA,EAAAA,MAAAA,CAA6BA,IAAI,CAAjCA,IAAAA,CAAAA,GAAhC,EAAA;AAAd,SAAA,EACbA,IAAI,CAAJA,IAAAA,IAAcC,aAAa,IAAI,KAAA,CAAA,aAAA,CAAA,aAAA,EADlB,IACkB,CADlB,EAEd,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAOD,IAAI,CANK,OAMhB,CAFc,CAJE;AAQZQ,QAAAA,OAAO,EAAE5B;AARG,OAAhB0B;AADJD,KAAkB,CAAlBA;AAPJ,GAAqB,CAArB;;AAoBA,MAAMI,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,QAAA,eAAA,EAAqB;AACjBtB,MAAAA,eAAe,CAAfA,YAAAA,CAAAA,MAAAA;AACH;AAHL,GAAA;;AAKAsB,EAAAA,MAAM,CAANA,IAAAA,GAAc,UAAA,MAAA,EAAA,QAAA,EAAA;AAAA,WAAsBN,YAAY,CAAZA,IAAAA,CAAAA,MAAAA,EAAtB,QAAsBA,CAAtB;AAAdM,GAAAA;;AACAA,EAAAA,MAAM,CAANA,OAAAA,GAAAA,YAAAA;AACA,SAAA,MAAA;AACH;;AACD,SAAA,WAAA,CAAA,OAAA,EAA8B;AAC1B,SAAQC,MAAM,CAANA,SAAAA,CAAAA,QAAAA,CAAAA,IAAAA,CAAAA,OAAAA,MAAAA,iBAAAA,IACJ,CAAC,CAACH,OAAO,CADb,OAAA;AAEH;;AACD,IAAMI,GAAG,GAAG;AACRC,EAAAA,IAAI,EADI,MAAA;AAERC,EAAAA,MAFQ,EAAA,SAAA,MAAA,CAAA,OAAA,EAEQ;AACZ,QAAIC,OAAO,CAAPA,GAAAA,KAAJ,SAAA,EAA+B;AAC3B9B,MAAAA,UAAU,GAAG8B,OAAO,CAApB9B,GAAAA;AACAG,MAAAA,eAAe,GAFY,IAE3BA,CAF2B,CAEH;AAC3B;;AACD,QAAI2B,OAAO,CAAPA,QAAAA,KAAJ,SAAA,EAAoC;AAChCtC,MAAAA,eAAe,GAAGsC,OAAO,CAAzBtC,QAAAA;AACH;;AACD,QAAIsC,OAAO,CAAPA,SAAAA,KAAJ,SAAA,EAAqC;AACjCpC,MAAAA,SAAS,GAAGoC,OAAO,CAAnBpC,SAAAA;AACH;;AACD,QAAIoC,OAAO,CAAPA,YAAAA,KAAJ,SAAA,EAAwC;AACpC7B,MAAAA,YAAY,GAAG6B,OAAO,CAAtB7B,YAAAA;AACH;;AACD,QAAI6B,OAAO,CAAPA,cAAAA,KAAJ,SAAA,EAA0C;AACtCnC,MAAAA,cAAc,GAAGmC,OAAO,CAAxBnC,cAAAA;AACAQ,MAAAA,eAAe,GAFuB,IAEtCA,CAFsC,CAEd;AAC3B;;AACD,QAAI2B,OAAO,CAAPA,QAAAA,KAAJ,SAAA,EAAoC;AAChC5B,MAAAA,QAAQ,GAAG4B,OAAO,CAAlB5B,QAAAA;AACAC,MAAAA,eAAe,GAAfA,IAAAA;AACH;AAvBG,GAAA;AAyBR4B,EAAAA,OAzBQ,EAAA,SAAA,OAAA,GAyBE;AACN,QAAA,eAAA,EAAqB;AACjB5B,MAAAA,eAAe,CAAfA,OAAAA;AACAA,MAAAA,eAAe,GAAfA,IAAAA;AACH;AACJ;AA9BO,CAAZ;AAgCA,CAAA,SAAA,EAAA,MAAA,EAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,OAAA,CAA2D,UAAA,IAAA,EAAQ;AAC/DwB,EAAAA,GAAG,CAAHA,IAAG,CAAHA,GAAY,UAAA,OAAA,EAAA,QAAA,EAAA,OAAA,EAAgC;AACxC,QAAIK,WAAW,CAAf,OAAe,CAAf,EAA0B;AACtB,aAAO,GAAG,CAAH,IAAA,CAAS,QAAA,CAAc,QAAA,CAAA,EAAA,EAAd,OAAc,CAAd,EAA0C;AAAEC,QAAAA,IAAI,EAAJA;AAAF,OAA1C,CAAT,CAAP;AACH;;AACD,QAAI,OAAA,QAAA,KAAJ,UAAA,EAAoC;AAChCT,MAAAA,OAAO,GAAPA,QAAAA;AACAT,MAAAA,QAAQ,GAARA,SAAAA;AACH;;AACD,WAAO,GAAG,CAAH,IAAA,CAAS;AAAEQ,MAAAA,OAAO,EAAT,OAAA;AAAWR,MAAAA,QAAQ,EAAnB,QAAA;AAAqBkB,MAAAA,IAAI,EAAzB,IAAA;AAA2BT,MAAAA,OAAO,EAAPA;AAA3B,KAAT,CAAP;AARJG,GAAAA;AADJ,CAAA;AAYAA,GAAG,CAAHA,IAAAA,GAAWA,GAAG,CAAdA,OAAAA;eACeA,G","sourcesContent":["import * as React from 'react';\nimport Notification from 'rc-notification';\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport InfoCircleFilled from '@ant-design/icons/InfoCircleFilled';\nlet defaultDuration = 3;\nlet defaultTop;\nlet messageInstance;\nlet key = 1;\nlet prefixCls = 'ant-message';\nlet transitionName = 'move-up';\nlet getContainer;\nlet maxCount;\nfunction getMessageInstance(callback) {\n    if (messageInstance) {\n        callback(messageInstance);\n        return;\n    }\n    Notification.newInstance({\n        prefixCls,\n        transitionName,\n        style: { top: defaultTop },\n        getContainer,\n        maxCount,\n    }, (instance) => {\n        if (messageInstance) {\n            callback(messageInstance);\n            return;\n        }\n        messageInstance = instance;\n        callback(instance);\n    });\n}\nconst iconMap = {\n    info: InfoCircleFilled,\n    success: CheckCircleFilled,\n    error: CloseCircleFilled,\n    warning: ExclamationCircleFilled,\n    loading: LoadingOutlined,\n};\nfunction notice(args) {\n    const duration = args.duration !== undefined ? args.duration : defaultDuration;\n    const IconComponent = iconMap[args.type];\n    const target = args.key || key++;\n    const closePromise = new Promise(resolve => {\n        const callback = () => {\n            if (typeof args.onClose === 'function') {\n                args.onClose();\n            }\n            return resolve(true);\n        };\n        getMessageInstance(instance => {\n            instance.notice({\n                key: target,\n                duration,\n                style: {},\n                content: (<div className={`${prefixCls}-custom-content${args.type ? ` ${prefixCls}-${args.type}` : ''}`}>\n            {args.icon || (IconComponent && <IconComponent />)}\n            <span>{args.content}</span>\n          </div>),\n                onClose: callback,\n            });\n        });\n    });\n    const result = () => {\n        if (messageInstance) {\n            messageInstance.removeNotice(target);\n        }\n    };\n    result.then = (filled, rejected) => closePromise.then(filled, rejected);\n    result.promise = closePromise;\n    return result;\n}\nfunction isArgsProps(content) {\n    return (Object.prototype.toString.call(content) === '[object Object]' &&\n        !!content.content);\n}\nconst api = {\n    open: notice,\n    config(options) {\n        if (options.top !== undefined) {\n            defaultTop = options.top;\n            messageInstance = null; // delete messageInstance for new defaultTop\n        }\n        if (options.duration !== undefined) {\n            defaultDuration = options.duration;\n        }\n        if (options.prefixCls !== undefined) {\n            prefixCls = options.prefixCls;\n        }\n        if (options.getContainer !== undefined) {\n            getContainer = options.getContainer;\n        }\n        if (options.transitionName !== undefined) {\n            transitionName = options.transitionName;\n            messageInstance = null; // delete messageInstance for new transitionName\n        }\n        if (options.maxCount !== undefined) {\n            maxCount = options.maxCount;\n            messageInstance = null;\n        }\n    },\n    destroy() {\n        if (messageInstance) {\n            messageInstance.destroy();\n            messageInstance = null;\n        }\n    },\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(type => {\n    api[type] = (content, duration, onClose) => {\n        if (isArgsProps(content)) {\n            return api.open(Object.assign(Object.assign({}, content), { type }));\n        }\n        if (typeof duration === 'function') {\n            onClose = duration;\n            duration = undefined;\n        }\n        return api.open({ content, duration, type, onClose });\n    };\n});\napi.warn = api.warning;\nexport default api;\n"]},"metadata":{},"sourceType":"script"}