{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useLazyKVMap;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction useLazyKVMap(data, childrenColumnName, getRowKey) {\n  var mapCacheRef = React.useRef({});\n\n  function getRecordByKey(key) {\n    if (!mapCacheRef.current || mapCacheRef.current.data !== data || mapCacheRef.current.childrenColumnName !== childrenColumnName || mapCacheRef.current.getRowKey !== getRowKey) {\n      /* eslint-disable no-inner-declarations */\n      var dig = function dig(records) {\n        records.forEach(function (record, index) {\n          var rowKey = getRowKey(record, index);\n          kvMap.set(rowKey, record);\n\n          if (childrenColumnName in record) {\n            dig(record[childrenColumnName] || []);\n          }\n        });\n      };\n      /* eslint-enable */\n\n\n      var kvMap = new Map();\n      dig(data);\n      mapCacheRef.current = {\n        data: data,\n        childrenColumnName: childrenColumnName,\n        kvMap: kvMap,\n        getRowKey: getRowKey\n      };\n    }\n\n    return mapCacheRef.current.kvMap.get(key);\n  }\n\n  return [getRecordByKey];\n}","map":{"version":3,"sources":["table/hooks/useLazyKVMap.js"],"names":["mapCacheRef","React","kvMap","dig","records","rowKey","getRowKey","childrenColumnName","record","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACe,SAAA,YAAA,CAAA,IAAA,EAAA,kBAAA,EAAA,SAAA,EAA2D;AACtE,MAAMA,WAAW,GAAGC,KAAK,CAALA,MAAAA,CAApB,EAAoBA,CAApB;;AACA,WAAA,cAAA,CAAA,GAAA,EAA6B;AACzB,QAAI,CAACD,WAAW,CAAZ,OAAA,IACAA,WAAW,CAAXA,OAAAA,CAAAA,IAAAA,KADA,IAAA,IAEAA,WAAW,CAAXA,OAAAA,CAAAA,kBAAAA,KAFA,kBAAA,IAGAA,WAAW,CAAXA,OAAAA,CAAAA,SAAAA,KAHJ,SAAA,EAGiD;AAE7C;AAF6C,UAGpCG,GAHoC,GAG7C,SAAA,GAAA,CAAA,OAAA,EAAsB;AAClBC,QAAAA,OAAO,CAAPA,OAAAA,CAAgB,UAAA,MAAA,EAAA,KAAA,EAAmB;AAC/B,cAAMC,MAAM,GAAGC,SAAS,CAAA,MAAA,EAAxB,KAAwB,CAAxB;AACAJ,UAAAA,KAAK,CAALA,GAAAA,CAAAA,MAAAA,EAAAA,MAAAA;;AACA,cAAIK,kBAAkB,IAAtB,MAAA,EAAkC;AAC9BJ,YAAAA,GAAG,CAACK,MAAM,CAANA,kBAAM,CAANA,IAAJL,EAAG,CAAHA;AACH;AALLC,SAAAA;AAJyC,OAAA;AAY7C;;;AAXA,UAAMF,KAAK,GAAG,IAAd,GAAc,EAAd;AAYAC,MAAAA,GAAG,CAAHA,IAAG,CAAHA;AACAH,MAAAA,WAAW,CAAXA,OAAAA,GAAsB;AAClBS,QAAAA,IAAI,EADc,IAAA;AAElBF,QAAAA,kBAAkB,EAFA,kBAAA;AAGlBL,QAAAA,KAAK,EAHa,KAAA;AAIlBI,QAAAA,SAAS,EAATA;AAJkB,OAAtBN;AAMH;;AACD,WAAOA,WAAW,CAAXA,OAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAAP,GAAOA,CAAP;AACH;;AACD,SAAO,CAAP,cAAO,CAAP;AACH","sourcesContent":["import * as React from 'react';\nexport default function useLazyKVMap(data, childrenColumnName, getRowKey) {\n    const mapCacheRef = React.useRef({});\n    function getRecordByKey(key) {\n        if (!mapCacheRef.current ||\n            mapCacheRef.current.data !== data ||\n            mapCacheRef.current.childrenColumnName !== childrenColumnName ||\n            mapCacheRef.current.getRowKey !== getRowKey) {\n            const kvMap = new Map();\n            /* eslint-disable no-inner-declarations */\n            function dig(records) {\n                records.forEach((record, index) => {\n                    const rowKey = getRowKey(record, index);\n                    kvMap.set(rowKey, record);\n                    if (childrenColumnName in record) {\n                        dig(record[childrenColumnName] || []);\n                    }\n                });\n            }\n            /* eslint-enable */\n            dig(data);\n            mapCacheRef.current = {\n                data,\n                childrenColumnName,\n                kvMap,\n                getRowKey,\n            };\n        }\n        return mapCacheRef.current.kvMap.get(key);\n    }\n    return [getRecordByKey];\n}\n"]},"metadata":{},"sourceType":"script"}