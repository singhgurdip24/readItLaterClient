{"ast":null,"code":"import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import\"antd/es/notification/style\";import _notification from\"antd/es/notification\";import _defineProperty from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import\"antd/es/form/style\";import _Form from\"antd/es/form\";import React,{Component}from'react';import{signup,checkUsernameAvailability,checkEmailAvailability}from'../../util/APIUtils';import'./Signup.css';import{Link}from'react-router-dom';import{NAME_MIN_LENGTH,NAME_MAX_LENGTH,USERNAME_MIN_LENGTH,USERNAME_MAX_LENGTH,EMAIL_MAX_LENGTH,PASSWORD_MIN_LENGTH,PASSWORD_MAX_LENGTH}from'../../constants';var FormItem=_Form.Item;var Signup=/*#__PURE__*/function(_Component){_inherits(Signup,_Component);function Signup(props){var _this;_classCallCheck(this,Signup);_this=_possibleConstructorReturn(this,_getPrototypeOf(Signup).call(this,props));_this.validateName=function(name){if(name.length<NAME_MIN_LENGTH){return{validateStatus:'error',errorMsg:\"Name is too short (Minimum \".concat(NAME_MIN_LENGTH,\" characters needed.)\")};}else if(name.length>NAME_MAX_LENGTH){return{validationStatus:'error',errorMsg:\"Name is too long (Maximum \".concat(NAME_MAX_LENGTH,\" characters allowed.)\")};}else{return{validateStatus:'success',errorMsg:null};}};_this.validateEmail=function(email){if(!email){return{validateStatus:'error',errorMsg:'Email may not be empty'};}var EMAIL_REGEX=RegExp('[^@ ]+@[^@ ]+\\\\.[^@ ]+');if(!EMAIL_REGEX.test(email)){return{validateStatus:'error',errorMsg:'Email not valid'};}if(email.length>EMAIL_MAX_LENGTH){return{validateStatus:'error',errorMsg:\"Email is too long (Maximum \".concat(EMAIL_MAX_LENGTH,\" characters allowed)\")};}return{validateStatus:null,errorMsg:null};};_this.validateUsername=function(username){if(username.length<USERNAME_MIN_LENGTH){return{validateStatus:'error',errorMsg:\"Username is too short (Minimum \".concat(USERNAME_MIN_LENGTH,\" characters needed.)\")};}else if(username.length>USERNAME_MAX_LENGTH){return{validationStatus:'error',errorMsg:\"Username is too long (Maximum \".concat(USERNAME_MAX_LENGTH,\" characters allowed.)\")};}else{return{validateStatus:null,errorMsg:null};}};_this.validatePassword=function(password){if(password.length<PASSWORD_MIN_LENGTH){return{validateStatus:'error',errorMsg:\"Password is too short (Minimum \".concat(PASSWORD_MIN_LENGTH,\" characters needed.)\")};}else if(password.length>PASSWORD_MAX_LENGTH){return{validationStatus:'error',errorMsg:\"Password is too long (Maximum \".concat(PASSWORD_MAX_LENGTH,\" characters allowed.)\")};}else{return{validateStatus:'success',errorMsg:null};}};_this.state={name:{value:''},username:{value:''},email:{value:''},password:{value:''}};_this.handleInputChange=_this.handleInputChange.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.validateUsernameAvailability=_this.validateUsernameAvailability.bind(_assertThisInitialized(_this));_this.validateEmailAvailability=_this.validateEmailAvailability.bind(_assertThisInitialized(_this));_this.isFormInvalid=_this.isFormInvalid.bind(_assertThisInitialized(_this));return _this;}_createClass(Signup,[{key:\"handleInputChange\",value:function handleInputChange(event,validationFun){var target=event.target;var inputName=target.name;var inputValue=target.value;this.setState(_defineProperty({},inputName,_objectSpread({value:inputValue},validationFun(inputValue))));}},{key:\"handleSubmit\",value:function handleSubmit(event){var _this2=this;event.preventDefault();var signupRequest={name:this.state.name.value,email:this.state.email.value,username:this.state.username.value,password:this.state.password.value};signup(signupRequest).then(function(response){_notification.success({message:'Polling App',description:\"Thank you! You're successfully registered. Please Login to continue!\"});_this2.props.history.push(\"/login\");}).catch(function(error){_notification.error({message:'Polling App',description:error.message||'Sorry! Something went wrong. Please try again!'});});}},{key:\"isFormInvalid\",value:function isFormInvalid(){return!(this.state.name.validateStatus==='success'&&this.state.username.validateStatus==='success'&&this.state.email.validateStatus==='success'&&this.state.password.validateStatus==='success');}},{key:\"render\",value:function render(){var _this3=this;return React.createElement(\"div\",{className:\"signup-container\"},React.createElement(\"h1\",{className:\"page-title\"},\"Sign Up\"),React.createElement(\"div\",{className:\"signup-content\"},React.createElement(_Form,{onSubmit:this.handleSubmit,className:\"signup-form\"},React.createElement(FormItem,{label:\"Full Name\",validateStatus:this.state.name.validateStatus,help:this.state.name.errorMsg},React.createElement(_Input,{size:\"large\",name:\"name\",autoComplete:\"off\",placeholder:\"Your full name\",value:this.state.name.value,onChange:function onChange(event){return _this3.handleInputChange(event,_this3.validateName);}})),React.createElement(FormItem,{label:\"Username\",hasFeedback:true,validateStatus:this.state.username.validateStatus,help:this.state.username.errorMsg},React.createElement(_Input,{size:\"large\",name:\"username\",autoComplete:\"off\",placeholder:\"A unique username\",value:this.state.username.value,onBlur:this.validateUsernameAvailability,onChange:function onChange(event){return _this3.handleInputChange(event,_this3.validateUsername);}})),React.createElement(FormItem,{label:\"Email\",hasFeedback:true,validateStatus:this.state.email.validateStatus,help:this.state.email.errorMsg},React.createElement(_Input,{size:\"large\",name:\"email\",type:\"email\",autoComplete:\"off\",placeholder:\"Your email\",value:this.state.email.value,onBlur:this.validateEmailAvailability,onChange:function onChange(event){return _this3.handleInputChange(event,_this3.validateEmail);}})),React.createElement(FormItem,{label:\"Password\",validateStatus:this.state.password.validateStatus,help:this.state.password.errorMsg},React.createElement(_Input,{size:\"large\",name:\"password\",type:\"password\",autoComplete:\"off\",placeholder:\"A password between 6 to 20 characters\",value:this.state.password.value,onChange:function onChange(event){return _this3.handleInputChange(event,_this3.validatePassword);}})),React.createElement(FormItem,null,React.createElement(_Button,{type:\"primary\",htmlType:\"submit\",size:\"large\",className:\"signup-form-button\",disabled:this.isFormInvalid()},\"Sign up\"),\"Already registed? \",React.createElement(Link,{to:\"/login\"},\"Login now!\")))));}// Validation Functions\n},{key:\"validateUsernameAvailability\",value:function validateUsernameAvailability(){var _this4=this;// First check for client side errors in username\nvar usernameValue=this.state.username.value;var usernameValidation=this.validateUsername(usernameValue);if(usernameValidation.validateStatus==='error'){this.setState({username:_objectSpread({value:usernameValue},usernameValidation)});return;}this.setState({username:{value:usernameValue,validateStatus:'validating',errorMsg:null}});checkUsernameAvailability(usernameValue).then(function(response){if(response.available){_this4.setState({username:{value:usernameValue,validateStatus:'success',errorMsg:null}});}else{_this4.setState({username:{value:usernameValue,validateStatus:'error',errorMsg:'This username is already taken'}});}}).catch(function(error){// Marking validateStatus as success, Form will be recchecked at server\n_this4.setState({username:{value:usernameValue,validateStatus:'success',errorMsg:null}});});}},{key:\"validateEmailAvailability\",value:function validateEmailAvailability(){var _this5=this;// First check for client side errors in email\nvar emailValue=this.state.email.value;var emailValidation=this.validateEmail(emailValue);if(emailValidation.validateStatus==='error'){this.setState({email:_objectSpread({value:emailValue},emailValidation)});return;}this.setState({email:{value:emailValue,validateStatus:'validating',errorMsg:null}});checkEmailAvailability(emailValue).then(function(response){if(response.available){_this5.setState({email:{value:emailValue,validateStatus:'success',errorMsg:null}});}else{_this5.setState({email:{value:emailValue,validateStatus:'error',errorMsg:'This Email is already registered'}});}}).catch(function(error){// Marking validateStatus as success, Form will be recchecked at server\n_this5.setState({email:{value:emailValue,validateStatus:'success',errorMsg:null}});});}}]);return Signup;}(Component);export default Signup;","map":{"version":3,"sources":["/Users/gurdipsingh/git/polling-app-client/src/user/signup/Signup.js"],"names":["React","Component","signup","checkUsernameAvailability","checkEmailAvailability","Link","NAME_MIN_LENGTH","NAME_MAX_LENGTH","USERNAME_MIN_LENGTH","USERNAME_MAX_LENGTH","EMAIL_MAX_LENGTH","PASSWORD_MIN_LENGTH","PASSWORD_MAX_LENGTH","FormItem","Item","Signup","props","validateName","name","length","validateStatus","errorMsg","validationStatus","validateEmail","email","EMAIL_REGEX","RegExp","test","validateUsername","username","validatePassword","password","state","value","handleInputChange","bind","handleSubmit","validateUsernameAvailability","validateEmailAvailability","isFormInvalid","event","validationFun","target","inputName","inputValue","setState","preventDefault","signupRequest","then","response","success","message","description","history","push","catch","error","usernameValue","usernameValidation","available","emailValue","emailValidation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { signup, checkUsernameAvailability, checkEmailAvailability } from '../../util/APIUtils';\nimport './Signup.css';\nimport { Link } from 'react-router-dom';\nimport { \n    NAME_MIN_LENGTH, NAME_MAX_LENGTH, \n    USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH,\n    EMAIL_MAX_LENGTH,\n    PASSWORD_MIN_LENGTH, PASSWORD_MAX_LENGTH\n} from '../../constants';\n\nimport { Form, Input, Button, notification } from 'antd';\nconst FormItem = Form.Item;\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: {\n                value: ''\n            },\n            username: {\n                value: ''\n            },\n            email: {\n                value: ''\n            },\n            password: {\n                value: ''\n            }\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.validateUsernameAvailability = this.validateUsernameAvailability.bind(this);\n        this.validateEmailAvailability = this.validateEmailAvailability.bind(this);\n        this.isFormInvalid = this.isFormInvalid.bind(this);\n    }\n\n    handleInputChange(event, validationFun) {\n        const target = event.target;\n        const inputName = target.name;        \n        const inputValue = target.value;\n\n        this.setState({\n            [inputName] : {\n                value: inputValue,\n                ...validationFun(inputValue)\n            }\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    \n        const signupRequest = {\n            name: this.state.name.value,\n            email: this.state.email.value,\n            username: this.state.username.value,\n            password: this.state.password.value\n        };\n        signup(signupRequest)\n        .then(response => {\n            notification.success({\n                message: 'Polling App',\n                description: \"Thank you! You're successfully registered. Please Login to continue!\",\n            });          \n            this.props.history.push(\"/login\");\n        }).catch(error => {\n            notification.error({\n                message: 'Polling App',\n                description: error.message || 'Sorry! Something went wrong. Please try again!'\n            });\n        });\n    }\n\n    isFormInvalid() {\n        return !(this.state.name.validateStatus === 'success' &&\n            this.state.username.validateStatus === 'success' &&\n            this.state.email.validateStatus === 'success' &&\n            this.state.password.validateStatus === 'success'\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"signup-container\">\n                <h1 className=\"page-title\">Sign Up</h1>\n                <div className=\"signup-content\">\n                    <Form onSubmit={this.handleSubmit} className=\"signup-form\">\n                        <FormItem \n                            label=\"Full Name\"\n                            validateStatus={this.state.name.validateStatus}\n                            help={this.state.name.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"name\"\n                                autoComplete=\"off\"\n                                placeholder=\"Your full name\"\n                                value={this.state.name.value} \n                                onChange={(event) => this.handleInputChange(event, this.validateName)} />    \n                        </FormItem>\n                        <FormItem label=\"Username\"\n                            hasFeedback\n                            validateStatus={this.state.username.validateStatus}\n                            help={this.state.username.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"username\" \n                                autoComplete=\"off\"\n                                placeholder=\"A unique username\"\n                                value={this.state.username.value} \n                                onBlur={this.validateUsernameAvailability}\n                                onChange={(event) => this.handleInputChange(event, this.validateUsername)} />    \n                        </FormItem>\n                        <FormItem \n                            label=\"Email\"\n                            hasFeedback\n                            validateStatus={this.state.email.validateStatus}\n                            help={this.state.email.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"email\" \n                                type=\"email\" \n                                autoComplete=\"off\"\n                                placeholder=\"Your email\"\n                                value={this.state.email.value} \n                                onBlur={this.validateEmailAvailability}\n                                onChange={(event) => this.handleInputChange(event, this.validateEmail)} />    \n                        </FormItem>\n                        <FormItem \n                            label=\"Password\"\n                            validateStatus={this.state.password.validateStatus}\n                            help={this.state.password.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"password\" \n                                type=\"password\"\n                                autoComplete=\"off\"\n                                placeholder=\"A password between 6 to 20 characters\" \n                                value={this.state.password.value} \n                                onChange={(event) => this.handleInputChange(event, this.validatePassword)} />    \n                        </FormItem>\n                        <FormItem>\n                            <Button type=\"primary\" \n                                htmlType=\"submit\" \n                                size=\"large\" \n                                className=\"signup-form-button\"\n                                disabled={this.isFormInvalid()}>Sign up</Button>\n                            Already registed? <Link to=\"/login\">Login now!</Link>\n                        </FormItem>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n\n    // Validation Functions\n\n    validateName = (name) => {\n        if(name.length < NAME_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\n            }\n        } else if (name.length > NAME_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null,\n              };            \n        }\n    }\n\n    validateEmail = (email) => {\n        if(!email) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Email may not be empty'                \n            }\n        }\n\n        const EMAIL_REGEX = RegExp('[^@ ]+@[^@ ]+\\\\.[^@ ]+');\n        if(!EMAIL_REGEX.test(email)) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Email not valid'\n            }\n        }\n\n        if(email.length > EMAIL_MAX_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Email is too long (Maximum ${EMAIL_MAX_LENGTH} characters allowed)`\n            }\n        }\n\n        return {\n            validateStatus: null,\n            errorMsg: null\n        }\n    }\n\n    validateUsername = (username) => {\n        if(username.length < USERNAME_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Username is too short (Minimum ${USERNAME_MIN_LENGTH} characters needed.)`\n            }\n        } else if (username.length > USERNAME_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Username is too long (Maximum ${USERNAME_MAX_LENGTH} characters allowed.)`\n            }\n        } else {\n            return {\n                validateStatus: null,\n                errorMsg: null\n            }\n        }\n    }\n\n    validateUsernameAvailability() {\n        // First check for client side errors in username\n        const usernameValue = this.state.username.value;\n        const usernameValidation = this.validateUsername(usernameValue);\n\n        if(usernameValidation.validateStatus === 'error') {\n            this.setState({\n                username: {\n                    value: usernameValue,\n                    ...usernameValidation\n                }\n            });\n            return;\n        }\n\n        this.setState({\n            username: {\n                value: usernameValue,\n                validateStatus: 'validating',\n                errorMsg: null\n            }\n        });\n\n        checkUsernameAvailability(usernameValue)\n        .then(response => {\n            if(response.available) {\n                this.setState({\n                    username: {\n                        value: usernameValue,\n                        validateStatus: 'success',\n                        errorMsg: null\n                    }\n                });\n            } else {\n                this.setState({\n                    username: {\n                        value: usernameValue,\n                        validateStatus: 'error',\n                        errorMsg: 'This username is already taken'\n                    }\n                });\n            }\n        }).catch(error => {\n            // Marking validateStatus as success, Form will be recchecked at server\n            this.setState({\n                username: {\n                    value: usernameValue,\n                    validateStatus: 'success',\n                    errorMsg: null\n                }\n            });\n        });\n    }\n\n    validateEmailAvailability() {\n        // First check for client side errors in email\n        const emailValue = this.state.email.value;\n        const emailValidation = this.validateEmail(emailValue);\n\n        if(emailValidation.validateStatus === 'error') {\n            this.setState({\n                email: {\n                    value: emailValue,\n                    ...emailValidation\n                }\n            });    \n            return;\n        }\n\n        this.setState({\n            email: {\n                value: emailValue,\n                validateStatus: 'validating',\n                errorMsg: null\n            }\n        });\n\n        checkEmailAvailability(emailValue)\n        .then(response => {\n            if(response.available) {\n                this.setState({\n                    email: {\n                        value: emailValue,\n                        validateStatus: 'success',\n                        errorMsg: null\n                    }\n                });\n            } else {\n                this.setState({\n                    email: {\n                        value: emailValue,\n                        validateStatus: 'error',\n                        errorMsg: 'This Email is already registered'\n                    }\n                });\n            }\n        }).catch(error => {\n            // Marking validateStatus as success, Form will be recchecked at server\n            this.setState({\n                email: {\n                    value: emailValue,\n                    validateStatus: 'success',\n                    errorMsg: null\n                }\n            });\n        });\n    }\n\n    validatePassword = (password) => {\n        if(password.length < PASSWORD_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Password is too short (Minimum ${PASSWORD_MIN_LENGTH} characters needed.)`\n            }\n        } else if (password.length > PASSWORD_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Password is too long (Maximum ${PASSWORD_MAX_LENGTH} characters allowed.)`\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null,\n            };            \n        }\n    }\n\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}