{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _rcProgress = require(\"rc-progress\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction getPercentage(_ref) {\n  var percent = _ref.percent,\n      successPercent = _ref.successPercent;\n  var ptg = (0, _utils.validProgress)(percent);\n\n  if (!successPercent) {\n    return ptg;\n  }\n\n  var successPtg = (0, _utils.validProgress)(successPercent);\n  return [successPercent, (0, _utils.validProgress)(ptg - successPtg)];\n}\n\nfunction getStrokeColor(_ref2) {\n  var successPercent = _ref2.successPercent,\n      strokeColor = _ref2.strokeColor;\n  var color = strokeColor || null;\n\n  if (!successPercent) {\n    return color;\n  }\n\n  return [null, color];\n}\n\nvar Circle = function Circle(props) {\n  var prefixCls = props.prefixCls,\n      width = props.width,\n      strokeWidth = props.strokeWidth,\n      trailColor = props.trailColor,\n      strokeLinecap = props.strokeLinecap,\n      gapPosition = props.gapPosition,\n      gapDegree = props.gapDegree,\n      type = props.type,\n      children = props.children;\n  var circleSize = width || 120;\n  var circleStyle = {\n    width: circleSize,\n    height: circleSize,\n    fontSize: circleSize * 0.15 + 6\n  };\n  var circleWidth = strokeWidth || 6;\n  var gapPos = gapPosition || type === 'dashboard' && 'bottom' || 'top';\n  var gapDeg = gapDegree || (type === 'dashboard' ? 75 : undefined); // using className to style stroke color\n\n  var strokeColor = getStrokeColor(props);\n  var isGradient = Object.prototype.toString.call(strokeColor) === '[object Object]';\n  var wrapperClassName = (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-inner\"), _defineProperty({}, \"\".concat(prefixCls, \"-circle-gradient\"), isGradient));\n  return React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, React.createElement(_rcProgress.Circle, {\n    percent: getPercentage(props),\n    strokeWidth: circleWidth,\n    trailWidth: circleWidth,\n    strokeColor: strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: gapDeg,\n    gapPosition: gapPos\n  }), children);\n};\n\nvar _default = Circle;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["progress/Circle.jsx"],"names":["percent","successPercent","ptg","successPtg","strokeColor","color","Circle","prefixCls","width","strokeWidth","trailColor","strokeLinecap","gapPosition","gapDegree","type","children","props","circleSize","circleStyle","height","fontSize","circleWidth","gapPos","gapDeg","getStrokeColor","isGradient","Object","wrapperClassName","getPercentage"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Circle as RCCircle } from 'rc-progress';\nimport classNames from 'classnames';\nimport { validProgress } from './utils';\nfunction getPercentage({ percent, successPercent }) {\n    const ptg = validProgress(percent);\n    if (!successPercent) {\n        return ptg;\n    }\n    const successPtg = validProgress(successPercent);\n    return [successPercent, validProgress(ptg - successPtg)];\n}\nfunction getStrokeColor({ successPercent, strokeColor }) {\n    const color = strokeColor || null;\n    if (!successPercent) {\n        return color;\n    }\n    return [null, color];\n}\nconst Circle = props => {\n    const { prefixCls, width, strokeWidth, trailColor, strokeLinecap, gapPosition, gapDegree, type, children, } = props;\n    const circleSize = width || 120;\n    const circleStyle = {\n        width: circleSize,\n        height: circleSize,\n        fontSize: circleSize * 0.15 + 6,\n    };\n    const circleWidth = strokeWidth || 6;\n    const gapPos = gapPosition || (type === 'dashboard' && 'bottom') || 'top';\n    const gapDeg = gapDegree || (type === 'dashboard' ? 75 : undefined);\n    // using className to style stroke color\n    const strokeColor = getStrokeColor(props);\n    const isGradient = Object.prototype.toString.call(strokeColor) === '[object Object]';\n    const wrapperClassName = classNames(`${prefixCls}-inner`, {\n        [`${prefixCls}-circle-gradient`]: isGradient,\n    });\n    return (<div className={wrapperClassName} style={circleStyle}>\n      <RCCircle percent={getPercentage(props)} strokeWidth={circleWidth} trailWidth={circleWidth} strokeColor={strokeColor} strokeLinecap={strokeLinecap} trailColor={trailColor} prefixCls={prefixCls} gapDegree={gapDeg} gapPosition={gapPos}/>\n      {children}\n    </div>);\n};\nexport default Circle;\n"]},"metadata":{},"sourceType":"script"}