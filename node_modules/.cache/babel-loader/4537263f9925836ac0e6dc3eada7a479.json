{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _omit = _interopRequireDefault(require(\"omit.js\"));\n\nvar _debounce = _interopRequireDefault(require(\"lodash/debounce\"));\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _FileOutlined = _interopRequireDefault(require(\"@ant-design/icons/FileOutlined\"));\n\nvar _FolderOpenOutlined = _interopRequireDefault(require(\"@ant-design/icons/FolderOpenOutlined\"));\n\nvar _FolderOutlined = _interopRequireDefault(require(\"@ant-design/icons/FolderOutlined\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar _Tree = _interopRequireDefault(require(\"./Tree\"));\n\nvar _dictUtil = require(\"./utils/dictUtil\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nfunction getIcon(props) {\n  var isLeaf = props.isLeaf,\n      expanded = props.expanded;\n\n  if (isLeaf) {\n    return React.createElement(_FileOutlined[\"default\"], null);\n  }\n\n  return expanded ? React.createElement(_FolderOpenOutlined[\"default\"], null) : React.createElement(_FolderOutlined[\"default\"], null);\n}\n\nfunction getTreeData(_ref) {\n  var treeData = _ref.treeData,\n      children = _ref.children;\n  return treeData || (0, _treeUtil.convertTreeToData)(children);\n}\n\nvar DirectoryTree = /*#__PURE__*/function (_React$Component) {\n  _inherits(DirectoryTree, _React$Component);\n\n  function DirectoryTree(props) {\n    var _this;\n\n    _classCallCheck(this, DirectoryTree);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DirectoryTree).call(this, props));\n\n    _this.onExpand = function (expandedKeys, info) {\n      var onExpand = _this.props.onExpand;\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys\n      }); // Call origin function\n\n\n      if (onExpand) {\n        return onExpand(expandedKeys, info);\n      }\n\n      return undefined;\n    };\n\n    _this.onClick = function (event, node) {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          expandAction = _this$props.expandAction; // Expand the tree\n\n      if (expandAction === 'click') {\n        _this.onDebounceExpand(event, node);\n      }\n\n      if (onClick) {\n        onClick(event, node);\n      }\n    };\n\n    _this.onDoubleClick = function (event, node) {\n      var _this$props2 = _this.props,\n          onDoubleClick = _this$props2.onDoubleClick,\n          expandAction = _this$props2.expandAction; // Expand the tree\n\n      if (expandAction === 'doubleClick') {\n        _this.onDebounceExpand(event, node);\n      }\n\n      if (onDoubleClick) {\n        onDoubleClick(event, node);\n      }\n    };\n\n    _this.onSelect = function (keys, event) {\n      var _this$props3 = _this.props,\n          onSelect = _this$props3.onSelect,\n          multiple = _this$props3.multiple;\n      var _this$state$expandedK = _this.state.expandedKeys,\n          expandedKeys = _this$state$expandedK === void 0 ? [] : _this$state$expandedK;\n      var node = event.node,\n          nativeEvent = event.nativeEvent;\n      var _node$props$eventKey = node.props.eventKey,\n          eventKey = _node$props$eventKey === void 0 ? '' : _node$props$eventKey;\n      var treeData = getTreeData(_this.props);\n      var newState = {}; // We need wrap this event since some value is not same\n\n      var newEvent = _extends(_extends({}, event), {\n        selected: true\n      }); // Windows / Mac single pick\n\n\n      var ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;\n      var shiftPick = nativeEvent.shiftKey; // Generate new selected keys\n\n      var newSelectedKeys;\n\n      if (multiple && ctrlPick) {\n        // Control click\n        newSelectedKeys = keys;\n        _this.lastSelectedKey = eventKey;\n        _this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = (0, _dictUtil.convertDirectoryKeysToNodes)(treeData, newSelectedKeys);\n      } else if (multiple && shiftPick) {\n        // Shift click\n        newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(_this.cachedSelectedKeys || []), _toConsumableArray((0, _dictUtil.calcRangeKeys)(treeData, expandedKeys, eventKey, _this.lastSelectedKey)))));\n        newEvent.selectedNodes = (0, _dictUtil.convertDirectoryKeysToNodes)(treeData, newSelectedKeys);\n      } else {\n        // Single click\n        newSelectedKeys = [eventKey];\n        _this.lastSelectedKey = eventKey;\n        _this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = [event.node.props.data];\n      }\n\n      newState.selectedKeys = newSelectedKeys;\n\n      if (onSelect) {\n        onSelect(newSelectedKeys, newEvent);\n      }\n\n      _this.setUncontrolledState(newState);\n    };\n\n    _this.setTreeRef = function (node) {\n      _this.tree = node;\n    };\n\n    _this.expandFolderNode = function (event, node) {\n      var isLeaf = node.isLeaf;\n\n      if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n        return;\n      } // Get internal rc-tree\n\n\n      var internalTree = _this.tree.tree; // Call internal rc-tree expand function\n      // https://github.com/ant-design/ant-design/issues/12567\n\n      internalTree.onNodeExpand(event, node);\n    };\n\n    _this.setUncontrolledState = function (state) {\n      var newState = (0, _omit[\"default\"])(state, Object.keys(_this.props));\n\n      if (Object.keys(newState).length) {\n        _this.setState(newState);\n      }\n    };\n\n    _this.renderDirectoryTree = function (_ref2) {\n      var getPrefixCls = _ref2.getPrefixCls,\n          direction = _ref2.direction;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          className = _a.className,\n          props = __rest(_a, [\"prefixCls\", \"className\"]);\n\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          selectedKeys = _this$state.selectedKeys;\n      var prefixCls = getPrefixCls('tree', customizePrefixCls);\n      var connectClassName = (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-directory\"), className, _defineProperty({}, \"\".concat(prefixCls, \"-directory-rtl\"), direction === 'rtl'));\n      return React.createElement(_Tree[\"default\"], _extends({\n        icon: getIcon,\n        ref: _this.setTreeRef,\n        blockNode: true\n      }, props, {\n        prefixCls: prefixCls,\n        className: connectClassName,\n        expandedKeys: expandedKeys,\n        selectedKeys: selectedKeys,\n        onSelect: _this.onSelect,\n        onClick: _this.onClick,\n        onDoubleClick: _this.onDoubleClick,\n        onExpand: _this.onExpand\n      }));\n    };\n\n    var defaultExpandAll = props.defaultExpandAll,\n        defaultExpandParent = props.defaultExpandParent,\n        expandedKeys = props.expandedKeys,\n        defaultExpandedKeys = props.defaultExpandedKeys;\n\n    var _convertDataToEntitie = (0, _treeUtil.convertDataToEntities)(getTreeData(props)),\n        keyEntities = _convertDataToEntitie.keyEntities; // Selected keys\n\n\n    _this.state = {\n      selectedKeys: props.selectedKeys || props.defaultSelectedKeys || []\n    }; // Expanded keys\n\n    if (defaultExpandAll) {\n      _this.state.expandedKeys = Object.keys(keyEntities);\n    } else if (defaultExpandParent) {\n      _this.state.expandedKeys = (0, _util.conductExpandParent)(expandedKeys || defaultExpandedKeys, keyEntities);\n    } else {\n      _this.state.expandedKeys = expandedKeys || defaultExpandedKeys;\n    }\n\n    _this.onDebounceExpand = (0, _debounce[\"default\"])(_this.expandFolderNode, 200, {\n      leading: true\n    });\n    return _this;\n  }\n\n  _createClass(DirectoryTree, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_configProvider.ConfigConsumer, null, this.renderDirectoryTree);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var newState = {};\n\n      if ('expandedKeys' in nextProps) {\n        newState.expandedKeys = nextProps.expandedKeys;\n      }\n\n      if ('selectedKeys' in nextProps) {\n        newState.selectedKeys = nextProps.selectedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return DirectoryTree;\n}(React.Component);\n\nDirectoryTree.defaultProps = {\n  showIcon: true,\n  expandAction: 'click'\n};\nvar _default = DirectoryTree;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["tree/DirectoryTree.jsx"],"names":["__rest","t","Object","e","s","i","p","isLeaf","expanded","props","treeData","children","DirectoryTree","React","Component","onExpand","expandedKeys","onClick","expandAction","onDoubleClick","onSelect","multiple","node","nativeEvent","event","eventKey","getTreeData","newState","newEvent","selected","ctrlPick","shiftPick","newSelectedKeys","Array","internalTree","getPrefixCls","direction","customizePrefixCls","className","_a","selectedKeys","prefixCls","connectClassName","defaultExpandAll","defaultExpandParent","defaultExpandedKeys","keyEntities","leading","nextProps","showIcon"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { conductExpandParent } from 'rc-tree/lib/util';\nimport { convertDataToEntities, convertTreeToData } from 'rc-tree/lib/utils/treeUtil';\nimport FileOutlined from '@ant-design/icons/FileOutlined';\nimport FolderOpenOutlined from '@ant-design/icons/FolderOpenOutlined';\nimport FolderOutlined from '@ant-design/icons/FolderOutlined';\nimport { ConfigConsumer } from '../config-provider';\nimport Tree from './Tree';\nimport { calcRangeKeys, convertDirectoryKeysToNodes } from './utils/dictUtil';\nfunction getIcon(props) {\n    const { isLeaf, expanded } = props;\n    if (isLeaf) {\n        return <FileOutlined />;\n    }\n    return expanded ? <FolderOpenOutlined /> : <FolderOutlined />;\n}\nfunction getTreeData({ treeData, children }) {\n    return treeData || convertTreeToData(children);\n}\nclass DirectoryTree extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onExpand = (expandedKeys, info) => {\n            const { onExpand } = this.props;\n            this.setUncontrolledState({ expandedKeys });\n            // Call origin function\n            if (onExpand) {\n                return onExpand(expandedKeys, info);\n            }\n            return undefined;\n        };\n        this.onClick = (event, node) => {\n            const { onClick, expandAction } = this.props;\n            // Expand the tree\n            if (expandAction === 'click') {\n                this.onDebounceExpand(event, node);\n            }\n            if (onClick) {\n                onClick(event, node);\n            }\n        };\n        this.onDoubleClick = (event, node) => {\n            const { onDoubleClick, expandAction } = this.props;\n            // Expand the tree\n            if (expandAction === 'doubleClick') {\n                this.onDebounceExpand(event, node);\n            }\n            if (onDoubleClick) {\n                onDoubleClick(event, node);\n            }\n        };\n        this.onSelect = (keys, event) => {\n            const { onSelect, multiple } = this.props;\n            const { expandedKeys = [] } = this.state;\n            const { node, nativeEvent } = event;\n            const { eventKey = '' } = node.props;\n            const treeData = getTreeData(this.props);\n            const newState = {};\n            // We need wrap this event since some value is not same\n            const newEvent = Object.assign(Object.assign({}, event), { selected: true });\n            // Windows / Mac single pick\n            const ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;\n            const shiftPick = nativeEvent.shiftKey;\n            // Generate new selected keys\n            let newSelectedKeys;\n            if (multiple && ctrlPick) {\n                // Control click\n                newSelectedKeys = keys;\n                this.lastSelectedKey = eventKey;\n                this.cachedSelectedKeys = newSelectedKeys;\n                newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n            }\n            else if (multiple && shiftPick) {\n                // Shift click\n                newSelectedKeys = Array.from(new Set([\n                    ...(this.cachedSelectedKeys || []),\n                    ...calcRangeKeys(treeData, expandedKeys, eventKey, this.lastSelectedKey),\n                ]));\n                newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n            }\n            else {\n                // Single click\n                newSelectedKeys = [eventKey];\n                this.lastSelectedKey = eventKey;\n                this.cachedSelectedKeys = newSelectedKeys;\n                newEvent.selectedNodes = [event.node.props.data];\n            }\n            newState.selectedKeys = newSelectedKeys;\n            if (onSelect) {\n                onSelect(newSelectedKeys, newEvent);\n            }\n            this.setUncontrolledState(newState);\n        };\n        this.setTreeRef = (node) => {\n            this.tree = node;\n        };\n        this.expandFolderNode = (event, node) => {\n            const { isLeaf } = node;\n            if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n                return;\n            }\n            // Get internal rc-tree\n            const internalTree = this.tree.tree;\n            // Call internal rc-tree expand function\n            // https://github.com/ant-design/ant-design/issues/12567\n            internalTree.onNodeExpand(event, node);\n        };\n        this.setUncontrolledState = (state) => {\n            const newState = omit(state, Object.keys(this.props));\n            if (Object.keys(newState).length) {\n                this.setState(newState);\n            }\n        };\n        this.renderDirectoryTree = ({ getPrefixCls, direction }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, className } = _a, props = __rest(_a, [\"prefixCls\", \"className\"]);\n            const { expandedKeys, selectedKeys } = this.state;\n            const prefixCls = getPrefixCls('tree', customizePrefixCls);\n            const connectClassName = classNames(`${prefixCls}-directory`, className, {\n                [`${prefixCls}-directory-rtl`]: direction === 'rtl',\n            });\n            return (<Tree icon={getIcon} ref={this.setTreeRef} blockNode {...props} prefixCls={prefixCls} className={connectClassName} expandedKeys={expandedKeys} selectedKeys={selectedKeys} onSelect={this.onSelect} onClick={this.onClick} onDoubleClick={this.onDoubleClick} onExpand={this.onExpand}/>);\n        };\n        const { defaultExpandAll, defaultExpandParent, expandedKeys, defaultExpandedKeys } = props;\n        const { keyEntities } = convertDataToEntities(getTreeData(props));\n        // Selected keys\n        this.state = {\n            selectedKeys: props.selectedKeys || props.defaultSelectedKeys || [],\n        };\n        // Expanded keys\n        if (defaultExpandAll) {\n            this.state.expandedKeys = Object.keys(keyEntities);\n        }\n        else if (defaultExpandParent) {\n            this.state.expandedKeys = conductExpandParent(expandedKeys || defaultExpandedKeys, keyEntities);\n        }\n        else {\n            this.state.expandedKeys = expandedKeys || defaultExpandedKeys;\n        }\n        this.onDebounceExpand = debounce(this.expandFolderNode, 200, {\n            leading: true,\n        });\n    }\n    static getDerivedStateFromProps(nextProps) {\n        const newState = {};\n        if ('expandedKeys' in nextProps) {\n            newState.expandedKeys = nextProps.expandedKeys;\n        }\n        if ('selectedKeys' in nextProps) {\n            newState.selectedKeys = nextProps.selectedKeys;\n        }\n        return newState;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderDirectoryTree}</ConfigConsumer>;\n    }\n}\nDirectoryTree.defaultProps = {\n    showIcon: true,\n    expandAction: 'click',\n};\nexport default DirectoryTree;\n"]},"metadata":{},"sourceType":"script"}