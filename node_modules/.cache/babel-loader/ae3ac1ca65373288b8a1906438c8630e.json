{"ast":null,"code":"var _jsxFileName = \"/Users/gurdipsingh/git/polling-app-client/src/poll/PollList.js\";\nimport React, { Component } from 'react';\nimport { getAllPolls, getUserCreatedPolls, getUserVotedPolls } from '../util/APIUtils';\nimport Poll from './Poll';\nimport { castVote } from '../util/APIUtils';\nimport LoadingIndicator from '../common/LoadingIndicator';\nimport { Button, Icon, notification } from '@ant-design';\nimport { POLL_LIST_SIZE } from '../constants';\nimport { withRouter } from 'react-router-dom';\nimport './PollList.css';\n\nclass PollList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      polls: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      currentVotes: [],\n      isLoading: false\n    };\n    this.loadPollList = this.loadPollList.bind(this);\n    this.handleLoadMore = this.handleLoadMore.bind(this);\n  }\n\n  loadPollList(page = 0, size = POLL_LIST_SIZE) {\n    let promise;\n\n    if (this.props.username) {\n      if (this.props.type === 'USER_CREATED_POLLS') {\n        promise = getUserCreatedPolls(this.props.username, page, size);\n      } else if (this.props.type === 'USER_VOTED_POLLS') {\n        promise = getUserVotedPolls(this.props.username, page, size);\n      }\n    } else {\n      promise = getAllPolls(page, size);\n    }\n\n    if (!promise) {\n      return;\n    }\n\n    this.setState({\n      isLoading: true\n    });\n    promise.then(response => {\n      const polls = this.state.polls.slice();\n      const currentVotes = this.state.currentVotes.slice();\n      this.setState({\n        polls: polls.concat(response.content),\n        page: response.page,\n        size: response.size,\n        totalElements: response.totalElements,\n        totalPages: response.totalPages,\n        last: response.last,\n        currentVotes: currentVotes.concat(Array(response.content.length).fill(null)),\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadPollList();\n  }\n\n  componentDidUpdate(nextProps) {\n    if (this.props.isAuthenticated !== nextProps.isAuthenticated) {\n      // Reset State\n      this.setState({\n        polls: [],\n        page: 0,\n        size: 10,\n        totalElements: 0,\n        totalPages: 0,\n        last: true,\n        currentVotes: [],\n        isLoading: false\n      });\n      this.loadPollList();\n    }\n  }\n\n  handleLoadMore() {\n    this.loadPollList(this.state.page + 1);\n  }\n\n  handleVoteChange(event, pollIndex) {\n    const currentVotes = this.state.currentVotes.slice();\n    currentVotes[pollIndex] = event.target.value;\n    this.setState({\n      currentVotes: currentVotes\n    });\n  }\n\n  handleVoteSubmit(event, pollIndex) {\n    event.preventDefault();\n\n    if (!this.props.isAuthenticated) {\n      this.props.history.push(\"/login\");\n      notification.info({\n        message: 'Polling App',\n        description: \"Please login to vote.\"\n      });\n      return;\n    }\n\n    const poll = this.state.polls[pollIndex];\n    const selectedChoice = this.state.currentVotes[pollIndex];\n    const voteData = {\n      pollId: poll.id,\n      choiceId: selectedChoice\n    };\n    castVote(voteData).then(response => {\n      const polls = this.state.polls.slice();\n      polls[pollIndex] = response;\n      this.setState({\n        polls: polls\n      });\n    }).catch(error => {\n      if (error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\n      } else {\n        notification.error({\n          message: 'Polling App',\n          description: error.message || 'Sorry! Something went wrong. Please try again!'\n        });\n      }\n    });\n  }\n\n  render() {\n    const pollViews = [];\n    this.state.polls.forEach((poll, pollIndex) => {\n      pollViews.push(React.createElement(Poll, {\n        key: poll.id,\n        poll: poll,\n        currentVote: this.state.currentVotes[pollIndex],\n        handleVoteChange: event => this.handleVoteChange(event, pollIndex),\n        handleVoteSubmit: event => this.handleVoteSubmit(event, pollIndex),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"polls-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, pollViews, !this.state.isLoading && this.state.polls.length === 0 ? React.createElement(\"div\", {\n      className: \"no-polls-found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"No Polls Found.\")) : null, !this.state.isLoading && !this.state.last ? React.createElement(\"div\", {\n      className: \"load-more-polls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"dashed\",\n      onClick: this.handleLoadMore,\n      disabled: this.state.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), \" Load more\")) : null, this.state.isLoading ? React.createElement(LoadingIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default withRouter(PollList);","map":{"version":3,"sources":["/Users/gurdipsingh/git/polling-app-client/src/poll/PollList.js"],"names":["React","Component","getAllPolls","getUserCreatedPolls","getUserVotedPolls","Poll","castVote","LoadingIndicator","Button","Icon","notification","POLL_LIST_SIZE","withRouter","PollList","constructor","props","state","polls","page","size","totalElements","totalPages","last","currentVotes","isLoading","loadPollList","bind","handleLoadMore","promise","username","type","setState","then","response","slice","concat","content","Array","length","fill","catch","error","componentDidMount","componentDidUpdate","nextProps","isAuthenticated","handleVoteChange","event","pollIndex","target","value","handleVoteSubmit","preventDefault","history","push","info","message","description","poll","selectedChoice","voteData","pollId","id","choiceId","status","handleLogout","render","pollViews","forEach"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { getAllPolls, getUserCreatedPolls, getUserVotedPolls } from '../util/APIUtils';\nimport Poll from './Poll';\nimport { castVote } from '../util/APIUtils';\nimport LoadingIndicator  from '../common/LoadingIndicator';\nimport { Button, Icon, notification } from '@ant-design';\nimport { POLL_LIST_SIZE } from '../constants';\nimport { withRouter } from 'react-router-dom';\nimport './PollList.css';\n\nclass PollList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            polls: [],\n            page: 0,\n            size: 10,\n            totalElements: 0,\n            totalPages: 0,\n            last: true,\n            currentVotes: [],\n            isLoading: false\n        };\n        this.loadPollList = this.loadPollList.bind(this);\n        this.handleLoadMore = this.handleLoadMore.bind(this);\n    }\n\n    loadPollList(page = 0, size = POLL_LIST_SIZE) {\n        let promise;\n        if(this.props.username) {\n            if(this.props.type === 'USER_CREATED_POLLS') {\n                promise = getUserCreatedPolls(this.props.username, page, size);\n            } else if (this.props.type === 'USER_VOTED_POLLS') {\n                promise = getUserVotedPolls(this.props.username, page, size);                               \n            }\n        } else {\n            promise = getAllPolls(page, size);\n        }\n\n        if(!promise) {\n            return;\n        }\n\n        this.setState({\n            isLoading: true\n        });\n\n        promise            \n        .then(response => {\n            const polls = this.state.polls.slice();\n            const currentVotes = this.state.currentVotes.slice();\n\n            this.setState({\n                polls: polls.concat(response.content),\n                page: response.page,\n                size: response.size,\n                totalElements: response.totalElements,\n                totalPages: response.totalPages,\n                last: response.last,\n                currentVotes: currentVotes.concat(Array(response.content.length).fill(null)),\n                isLoading: false\n            })\n        }).catch(error => {\n            this.setState({\n                isLoading: false\n            })\n        });  \n        \n    }\n\n    componentDidMount() {\n        this.loadPollList();\n    }\n\n    componentDidUpdate(nextProps) {\n        if(this.props.isAuthenticated !== nextProps.isAuthenticated) {\n            // Reset State\n            this.setState({\n                polls: [],\n                page: 0,\n                size: 10,\n                totalElements: 0,\n                totalPages: 0,\n                last: true,\n                currentVotes: [],\n                isLoading: false\n            });    \n            this.loadPollList();\n        }\n    }\n\n    handleLoadMore() {\n        this.loadPollList(this.state.page + 1);\n    }\n\n    handleVoteChange(event, pollIndex) {\n        const currentVotes = this.state.currentVotes.slice();\n        currentVotes[pollIndex] = event.target.value;\n\n        this.setState({\n            currentVotes: currentVotes\n        });\n    }\n\n\n    handleVoteSubmit(event, pollIndex) {\n        event.preventDefault();\n        if(!this.props.isAuthenticated) {\n            this.props.history.push(\"/login\");\n            notification.info({\n                message: 'Polling App',\n                description: \"Please login to vote.\",          \n            });\n            return;\n        }\n\n        const poll = this.state.polls[pollIndex];\n        const selectedChoice = this.state.currentVotes[pollIndex];\n\n        const voteData = {\n            pollId: poll.id,\n            choiceId: selectedChoice\n        };\n\n        castVote(voteData)\n        .then(response => {\n            const polls = this.state.polls.slice();\n            polls[pollIndex] = response;\n            this.setState({\n                polls: polls\n            });        \n        }).catch(error => {\n            if(error.status === 401) {\n                this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');    \n            } else {\n                notification.error({\n                    message: 'Polling App',\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\n                });                \n            }\n        });\n    }\n\n    render() {\n        const pollViews = [];\n        this.state.polls.forEach((poll, pollIndex) => {\n            pollViews.push(<Poll \n                key={poll.id} \n                poll={poll}\n                currentVote={this.state.currentVotes[pollIndex]} \n                handleVoteChange={(event) => this.handleVoteChange(event, pollIndex)}\n                handleVoteSubmit={(event) => this.handleVoteSubmit(event, pollIndex)} />)            \n        });\n\n        return (\n            <div className=\"polls-container\">\n                {pollViews}\n                {\n                    !this.state.isLoading && this.state.polls.length === 0 ? (\n                        <div className=\"no-polls-found\">\n                            <span>No Polls Found.</span>\n                        </div>    \n                    ): null\n                }  \n                {\n                    !this.state.isLoading && !this.state.last ? (\n                        <div className=\"load-more-polls\"> \n                            <Button type=\"dashed\" onClick={this.handleLoadMore} disabled={this.state.isLoading}>\n                                <Icon type=\"plus\" /> Load more\n                            </Button>\n                        </div>): null\n                }              \n                {\n                    this.state.isLoading ? \n                    <LoadingIndicator />: null                     \n                }\n            </div>\n        );\n    }\n}\n\nexport default withRouter(PollList);"]},"metadata":{},"sourceType":"module"}