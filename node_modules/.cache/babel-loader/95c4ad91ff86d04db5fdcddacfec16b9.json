{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _Cell = _interopRequireDefault(require(\"../Cell\"));\n\nvar _TableContext = _interopRequireDefault(require(\"../context/TableContext\"));\n\nvar _BodyContext = _interopRequireDefault(require(\"../context/BodyContext\"));\n\nvar _valueUtil = require(\"../utils/valueUtil\");\n\nvar _fixUtil = require(\"../utils/fixUtil\");\n\nvar _ExpandedRow = _interopRequireDefault(require(\"./ExpandedRow\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction BodyRow(props) {\n  var className = props.className,\n      style = props.style,\n      stickyOffsets = props.stickyOffsets,\n      record = props.record,\n      index = props.index,\n      rowKey = props.rowKey,\n      getRowKey = props.getRowKey,\n      rowExpandable = props.rowExpandable,\n      onRow = props.onRow,\n      _props$indent = props.indent,\n      indent = _props$indent === void 0 ? 0 : _props$indent,\n      RowComponent = props.rowComponent,\n      cellComponent = props.cellComponent,\n      childrenColumnName = props.childrenColumnName;\n\n  var _React$useContext = React.useContext(_TableContext.default),\n      prefixCls = _React$useContext.prefixCls;\n\n  var _React$useContext2 = React.useContext(_BodyContext.default),\n      fixHeader = _React$useContext2.fixHeader,\n      fixColumn = _React$useContext2.fixColumn,\n      componentWidth = _React$useContext2.componentWidth,\n      flattenColumns = _React$useContext2.flattenColumns,\n      expandableType = _React$useContext2.expandableType,\n      expandRowByClick = _React$useContext2.expandRowByClick,\n      onTriggerExpand = _React$useContext2.onTriggerExpand,\n      rowClassName = _React$useContext2.rowClassName,\n      expandedRowClassName = _React$useContext2.expandedRowClassName,\n      indentSize = _React$useContext2.indentSize,\n      expandIcon = _React$useContext2.expandIcon,\n      expandedRowRender = _React$useContext2.expandedRowRender,\n      expandIconColumnIndex = _React$useContext2.expandIconColumnIndex;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expandRended = _React$useState2[0],\n      setExpandRended = _React$useState2[1];\n\n  var expanded = props.expandedKeys.has(props.recordKey);\n  React.useEffect(function () {\n    if (expanded) {\n      setExpandRended(true);\n    }\n  }, [expanded]); // Move to Body to enhance performance\n\n  var fixedInfoList = flattenColumns.map(function (column, colIndex) {\n    return (0, _fixUtil.getCellFixedInfo)(colIndex, colIndex, flattenColumns, stickyOffsets);\n  });\n  var rowSupportExpand = expandableType === 'row' && (!rowExpandable || rowExpandable(record)); // Only when row is not expandable and `children` exist in record\n\n  var nestExpandable = expandableType === 'nest';\n  var hasNestChildren = childrenColumnName in record && record[childrenColumnName];\n  var mergedExpandable = rowSupportExpand || nestExpandable; // =========================== onRow ===========================\n\n  var additionalProps;\n\n  if (onRow) {\n    additionalProps = onRow(record, index);\n  }\n\n  var onClick = function onClick(event) {\n    if (expandRowByClick && mergedExpandable) {\n      onTriggerExpand(record, event);\n    }\n\n    if (additionalProps && additionalProps.onClick) {\n      var _additionalProps;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      (_additionalProps = additionalProps).onClick.apply(_additionalProps, [event].concat(args));\n    }\n  }; // ======================== Base tr row ========================\n\n\n  var computeRowClassName;\n\n  if (typeof rowClassName === 'string') {\n    computeRowClassName = rowClassName;\n  } else if (typeof rowClassName === 'function') {\n    computeRowClassName = rowClassName(record, index, indent);\n  }\n\n  var columnsKey = (0, _valueUtil.getColumnsKey)(flattenColumns);\n  var baseRowNode = React.createElement(RowComponent, Object.assign({}, additionalProps, {\n    \"data-row-key\": rowKey,\n    className: (0, _classnames.default)(className, \"\".concat(prefixCls, \"-row\"), \"\".concat(prefixCls, \"-row-level-\").concat(indent), computeRowClassName, additionalProps && additionalProps.className),\n    style: _objectSpread({}, style, {}, additionalProps ? additionalProps.style : null),\n    onClick: onClick\n  }), flattenColumns.map(function (column, colIndex) {\n    var render = column.render,\n        dataIndex = column.dataIndex,\n        columnClassName = column.className;\n    var key = columnsKey[colIndex];\n    var fixedInfo = fixedInfoList[colIndex]; // ============= Used for nest expandable =============\n\n    var appendCellNode;\n\n    if (colIndex === (expandIconColumnIndex || 0) && nestExpandable) {\n      appendCellNode = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        style: {\n          paddingLeft: \"\".concat(indentSize * indent, \"px\")\n        },\n        className: \"\".concat(prefixCls, \"-row-indent indent-level-\").concat(indent)\n      }), expandIcon({\n        prefixCls: prefixCls,\n        expanded: expanded,\n        expandable: hasNestChildren,\n        record: record,\n        onExpand: onTriggerExpand\n      }));\n    }\n\n    var additionalCellProps;\n\n    if (column.onCell) {\n      additionalCellProps = column.onCell(record, index);\n    }\n\n    return React.createElement(_Cell.default, Object.assign({\n      className: columnClassName,\n      ellipsis: column.ellipsis,\n      align: column.align,\n      component: cellComponent,\n      prefixCls: prefixCls,\n      key: key,\n      record: record,\n      index: index,\n      dataIndex: dataIndex,\n      render: render\n    }, fixedInfo, {\n      appendNode: appendCellNode,\n      additionalProps: additionalCellProps\n    }));\n  })); // ======================== Expand Row =========================\n\n  var expandRowNode;\n\n  if (rowSupportExpand && (expandRended || expanded)) {\n    var expandContent = expandedRowRender(record, index, indent + 1, expanded);\n    var computedExpandedRowClassName = expandedRowClassName && expandedRowClassName(record, index, indent);\n    expandRowNode = React.createElement(_ExpandedRow.default, {\n      expanded: expanded,\n      className: (0, _classnames.default)(\"\".concat(prefixCls, \"-expanded-row\"), \"\".concat(prefixCls, \"-expanded-row-level-\").concat(indent + 1), computedExpandedRowClassName),\n      prefixCls: prefixCls,\n      fixHeader: fixHeader,\n      fixColumn: fixColumn,\n      component: RowComponent,\n      componentWidth: componentWidth,\n      cellComponent: cellComponent,\n      colSpan: flattenColumns.length\n    }, expandContent);\n  } // ========================= Nest Row ==========================\n\n\n  var nestRowNode;\n\n  if (hasNestChildren && expanded) {\n    nestRowNode = (record[childrenColumnName] || []).map(function (subRecord, subIndex) {\n      var subKey = getRowKey(subRecord, subIndex);\n      return React.createElement(BodyRow, Object.assign({}, props, {\n        key: subKey,\n        record: subRecord,\n        recordKey: subKey,\n        index: subIndex,\n        indent: indent + 1\n      }));\n    });\n  }\n\n  return React.createElement(React.Fragment, null, baseRowNode, expandRowNode, nestRowNode);\n}\n\nBodyRow.displayName = 'BodyRow';\nvar _default = BodyRow;\nexports.default = _default;","map":{"version":3,"sources":["/Users/gurdipsingh/git/polling-app-client/node_modules/rc-table/lib/Body/BodyRow.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","exports","value","default","React","_interopRequireWildcard","require","_classnames","_interopRequireDefault","_Cell","_TableContext","_BodyContext","_valueUtil","_fixUtil","_ExpandedRow","__esModule","_getRequireWildcardCache","WeakMap","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","toString","_arr","_n","_d","_e","undefined","_i","_s","next","done","err","Array","isArray","BodyRow","props","className","style","stickyOffsets","record","index","rowKey","getRowKey","rowExpandable","onRow","_props$indent","indent","RowComponent","rowComponent","cellComponent","childrenColumnName","_React$useContext","useContext","prefixCls","_React$useContext2","fixHeader","fixColumn","componentWidth","flattenColumns","expandableType","expandRowByClick","onTriggerExpand","rowClassName","expandedRowClassName","indentSize","expandIcon","expandedRowRender","expandIconColumnIndex","_React$useState","useState","_React$useState2","expandRended","setExpandRended","expanded","expandedKeys","recordKey","useEffect","fixedInfoList","map","column","colIndex","getCellFixedInfo","rowSupportExpand","nestExpandable","hasNestChildren","mergedExpandable","additionalProps","onClick","event","_additionalProps","_len","args","_key","concat","computeRowClassName","columnsKey","getColumnsKey","baseRowNode","createElement","assign","render","dataIndex","columnClassName","fixedInfo","appendCellNode","Fragment","paddingLeft","expandable","onExpand","additionalCellProps","onCell","ellipsis","align","component","appendNode","expandRowNode","expandContent","computedExpandedRowClassName","colSpan","nestRowNode","subRecord","subIndex","subKey","displayName","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _Cell = _interopRequireDefault(require(\"../Cell\"));\n\nvar _TableContext = _interopRequireDefault(require(\"../context/TableContext\"));\n\nvar _BodyContext = _interopRequireDefault(require(\"../context/BodyContext\"));\n\nvar _valueUtil = require(\"../utils/valueUtil\");\n\nvar _fixUtil = require(\"../utils/fixUtil\");\n\nvar _ExpandedRow = _interopRequireDefault(require(\"./ExpandedRow\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction BodyRow(props) {\n  var className = props.className,\n      style = props.style,\n      stickyOffsets = props.stickyOffsets,\n      record = props.record,\n      index = props.index,\n      rowKey = props.rowKey,\n      getRowKey = props.getRowKey,\n      rowExpandable = props.rowExpandable,\n      onRow = props.onRow,\n      _props$indent = props.indent,\n      indent = _props$indent === void 0 ? 0 : _props$indent,\n      RowComponent = props.rowComponent,\n      cellComponent = props.cellComponent,\n      childrenColumnName = props.childrenColumnName;\n\n  var _React$useContext = React.useContext(_TableContext.default),\n      prefixCls = _React$useContext.prefixCls;\n\n  var _React$useContext2 = React.useContext(_BodyContext.default),\n      fixHeader = _React$useContext2.fixHeader,\n      fixColumn = _React$useContext2.fixColumn,\n      componentWidth = _React$useContext2.componentWidth,\n      flattenColumns = _React$useContext2.flattenColumns,\n      expandableType = _React$useContext2.expandableType,\n      expandRowByClick = _React$useContext2.expandRowByClick,\n      onTriggerExpand = _React$useContext2.onTriggerExpand,\n      rowClassName = _React$useContext2.rowClassName,\n      expandedRowClassName = _React$useContext2.expandedRowClassName,\n      indentSize = _React$useContext2.indentSize,\n      expandIcon = _React$useContext2.expandIcon,\n      expandedRowRender = _React$useContext2.expandedRowRender,\n      expandIconColumnIndex = _React$useContext2.expandIconColumnIndex;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expandRended = _React$useState2[0],\n      setExpandRended = _React$useState2[1];\n\n  var expanded = props.expandedKeys.has(props.recordKey);\n  React.useEffect(function () {\n    if (expanded) {\n      setExpandRended(true);\n    }\n  }, [expanded]); // Move to Body to enhance performance\n\n  var fixedInfoList = flattenColumns.map(function (column, colIndex) {\n    return (0, _fixUtil.getCellFixedInfo)(colIndex, colIndex, flattenColumns, stickyOffsets);\n  });\n  var rowSupportExpand = expandableType === 'row' && (!rowExpandable || rowExpandable(record)); // Only when row is not expandable and `children` exist in record\n\n  var nestExpandable = expandableType === 'nest';\n  var hasNestChildren = childrenColumnName in record && record[childrenColumnName];\n  var mergedExpandable = rowSupportExpand || nestExpandable; // =========================== onRow ===========================\n\n  var additionalProps;\n\n  if (onRow) {\n    additionalProps = onRow(record, index);\n  }\n\n  var onClick = function onClick(event) {\n    if (expandRowByClick && mergedExpandable) {\n      onTriggerExpand(record, event);\n    }\n\n    if (additionalProps && additionalProps.onClick) {\n      var _additionalProps;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      (_additionalProps = additionalProps).onClick.apply(_additionalProps, [event].concat(args));\n    }\n  }; // ======================== Base tr row ========================\n\n\n  var computeRowClassName;\n\n  if (typeof rowClassName === 'string') {\n    computeRowClassName = rowClassName;\n  } else if (typeof rowClassName === 'function') {\n    computeRowClassName = rowClassName(record, index, indent);\n  }\n\n  var columnsKey = (0, _valueUtil.getColumnsKey)(flattenColumns);\n  var baseRowNode = React.createElement(RowComponent, Object.assign({}, additionalProps, {\n    \"data-row-key\": rowKey,\n    className: (0, _classnames.default)(className, \"\".concat(prefixCls, \"-row\"), \"\".concat(prefixCls, \"-row-level-\").concat(indent), computeRowClassName, additionalProps && additionalProps.className),\n    style: _objectSpread({}, style, {}, additionalProps ? additionalProps.style : null),\n    onClick: onClick\n  }), flattenColumns.map(function (column, colIndex) {\n    var render = column.render,\n        dataIndex = column.dataIndex,\n        columnClassName = column.className;\n    var key = columnsKey[colIndex];\n    var fixedInfo = fixedInfoList[colIndex]; // ============= Used for nest expandable =============\n\n    var appendCellNode;\n\n    if (colIndex === (expandIconColumnIndex || 0) && nestExpandable) {\n      appendCellNode = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        style: {\n          paddingLeft: \"\".concat(indentSize * indent, \"px\")\n        },\n        className: \"\".concat(prefixCls, \"-row-indent indent-level-\").concat(indent)\n      }), expandIcon({\n        prefixCls: prefixCls,\n        expanded: expanded,\n        expandable: hasNestChildren,\n        record: record,\n        onExpand: onTriggerExpand\n      }));\n    }\n\n    var additionalCellProps;\n\n    if (column.onCell) {\n      additionalCellProps = column.onCell(record, index);\n    }\n\n    return React.createElement(_Cell.default, Object.assign({\n      className: columnClassName,\n      ellipsis: column.ellipsis,\n      align: column.align,\n      component: cellComponent,\n      prefixCls: prefixCls,\n      key: key,\n      record: record,\n      index: index,\n      dataIndex: dataIndex,\n      render: render\n    }, fixedInfo, {\n      appendNode: appendCellNode,\n      additionalProps: additionalCellProps\n    }));\n  })); // ======================== Expand Row =========================\n\n  var expandRowNode;\n\n  if (rowSupportExpand && (expandRended || expanded)) {\n    var expandContent = expandedRowRender(record, index, indent + 1, expanded);\n    var computedExpandedRowClassName = expandedRowClassName && expandedRowClassName(record, index, indent);\n    expandRowNode = React.createElement(_ExpandedRow.default, {\n      expanded: expanded,\n      className: (0, _classnames.default)(\"\".concat(prefixCls, \"-expanded-row\"), \"\".concat(prefixCls, \"-expanded-row-level-\").concat(indent + 1), computedExpandedRowClassName),\n      prefixCls: prefixCls,\n      fixHeader: fixHeader,\n      fixColumn: fixColumn,\n      component: RowComponent,\n      componentWidth: componentWidth,\n      cellComponent: cellComponent,\n      colSpan: flattenColumns.length\n    }, expandContent);\n  } // ========================= Nest Row ==========================\n\n\n  var nestRowNode;\n\n  if (hasNestChildren && expanded) {\n    nestRowNode = (record[childrenColumnName] || []).map(function (subRecord, subIndex) {\n      var subKey = getRowKey(subRecord, subIndex);\n      return React.createElement(BodyRow, Object.assign({}, props, {\n        key: subKey,\n        record: subRecord,\n        recordKey: subKey,\n        index: subIndex,\n        indent: indent + 1\n      }));\n    });\n  }\n\n  return React.createElement(React.Fragment, null, baseRowNode, expandRowNode, nestRowNode);\n}\n\nBodyRow.displayName = 'BodyRow';\nvar _default = BodyRow;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}