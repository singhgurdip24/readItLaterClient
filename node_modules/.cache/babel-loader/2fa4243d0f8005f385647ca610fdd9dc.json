{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/gurdipsingh/git/polling-app-client/src/user/login/Login.js\";\nimport React, { Component } from 'react';\nimport { login } from '../../util/APIUtils';\nimport './Login.css';\nimport { Link } from 'react-router-dom';\nimport { ACCESS_TOKEN } from '../../constants';\nconst FormItem = _Form.Item;\n\nclass Login extends Component {\n  render() {\n    const AntWrappedLoginForm = _Form.create()(LoginForm);\n\n    return React.createElement(\"div\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"login-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(AntWrappedLoginForm, {\n      onLogin: this.props.onLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const loginRequest = Object.assign({}, values);\n        login(loginRequest).then(response => {\n          localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n          this.props.onLogin();\n        }).catch(error => {\n          if (error.status === 401) {\n            _notification.error({\n              message: 'Polling App',\n              description: 'Your Username or Password is incorrect. Please try again!'\n            });\n          } else {\n            _notification.error({\n              message: 'Polling App',\n              description: error.message || 'Sorry! Something went wrong. Please try again!'\n            });\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return React.createElement(_Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, getFieldDecorator('usernameOrEmail', {\n      rules: [{\n        required: true,\n        message: 'Please input your username or email!'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }),\n      size: \"large\",\n      name: \"usernameOrEmail\",\n      placeholder: \"Username or Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }),\n      size: \"large\",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      size: \"large\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Login\"), \"Or \", React.createElement(Link, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"register now!\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/gurdipsingh/git/polling-app-client/src/user/login/Login.js"],"names":["React","Component","login","Link","ACCESS_TOKEN","FormItem","Item","Login","render","AntWrappedLoginForm","create","LoginForm","props","onLogin","constructor","handleSubmit","bind","event","preventDefault","form","validateFields","err","values","loginRequest","Object","assign","then","response","localStorage","setItem","accessToken","catch","error","status","message","description","getFieldDecorator","rules","required"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { login } from '../../util/APIUtils';\nimport './Login.css';\nimport { Link } from 'react-router-dom';\nimport { ACCESS_TOKEN } from '../../constants';\n\nimport { Form, Input, Button, Icon, notification } from 'antd';\nconst FormItem = Form.Item;\n\nclass Login extends Component {\n    render() {\n        const AntWrappedLoginForm = Form.create()(LoginForm)\n        return (\n            <div className=\"login-container\">\n                <h1 className=\"page-title\">Login</h1>\n                <div className=\"login-content\">\n                    <AntWrappedLoginForm onLogin={this.props.onLogin} />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();   \n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const loginRequest = Object.assign({}, values);\n                login(loginRequest)\n                .then(response => {\n                    localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n                    this.props.onLogin();\n                }).catch(error => {\n                    if(error.status === 401) {\n                        notification.error({\n                            message: 'Polling App',\n                            description: 'Your Username or Password is incorrect. Please try again!'\n                        });                    \n                    } else {\n                        notification.error({\n                            message: 'Polling App',\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\n                        });                                            \n                    }\n                });\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <FormItem>\n                    {getFieldDecorator('usernameOrEmail', {\n                        rules: [{ required: true, message: 'Please input your username or email!' }],\n                    })(\n                    <Input \n                        prefix={<Icon type=\"user\" />}\n                        size=\"large\"\n                        name=\"usernameOrEmail\" \n                        placeholder=\"Username or Email\" />    \n                    )}\n                </FormItem>\n                <FormItem>\n                {getFieldDecorator('password', {\n                    rules: [{ required: true, message: 'Please input your Password!' }],\n                })(\n                    <Input \n                        prefix={<Icon type=\"lock\" />}\n                        size=\"large\"\n                        name=\"password\" \n                        type=\"password\" \n                        placeholder=\"Password\"  />                        \n                )}\n                </FormItem>\n                <FormItem>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\" className=\"login-form-button\">Login</Button>\n                    Or <Link to=\"/signup\">register now!</Link>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}