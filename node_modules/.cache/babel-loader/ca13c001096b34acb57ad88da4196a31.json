{"ast":null,"code":"import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/icon/style\";import _Icon from\"antd/es/icon\";import\"antd/es/notification/style\";import _notification from\"antd/es/notification\";import _classCallCheck from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{getAllPolls,getUserCreatedPolls,getUserVotedPolls}from'../util/APIUtils';import Poll from'./Poll';import{castVote}from'../util/APIUtils';import LoadingIndicator from'../common/LoadingIndicator';import{POLL_LIST_SIZE}from'../constants';import{withRouter}from'react-router-dom';import'./PollList.css';var PollList=/*#__PURE__*/function(_Component){_inherits(PollList,_Component);function PollList(props){var _this;_classCallCheck(this,PollList);_this=_possibleConstructorReturn(this,_getPrototypeOf(PollList).call(this,props));_this.state={polls:[],page:0,size:10,totalElements:0,totalPages:0,last:true,currentVotes:[],isLoading:false};_this.loadPollList=_this.loadPollList.bind(_assertThisInitialized(_this));_this.handleLoadMore=_this.handleLoadMore.bind(_assertThisInitialized(_this));return _this;}_createClass(PollList,[{key:\"loadPollList\",value:function loadPollList(){var _this2=this;var page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:POLL_LIST_SIZE;var promise;if(this.props.username){if(this.props.type==='USER_CREATED_POLLS'){promise=getUserCreatedPolls(this.props.username,page,size);}else if(this.props.type==='USER_VOTED_POLLS'){promise=getUserVotedPolls(this.props.username,page,size);}}else{promise=getAllPolls(page,size);}if(!promise){return;}this.setState({isLoading:true});promise.then(function(response){var polls=_this2.state.polls.slice();var currentVotes=_this2.state.currentVotes.slice();_this2.setState({polls:polls.concat(response.content),page:response.page,size:response.size,totalElements:response.totalElements,totalPages:response.totalPages,last:response.last,currentVotes:currentVotes.concat(Array(response.content.length).fill(null)),isLoading:false});}).catch(function(error){_this2.setState({isLoading:false});});}},{key:\"componentDidMount\",value:function componentDidMount(){this.loadPollList();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(nextProps){if(this.props.isAuthenticated!==nextProps.isAuthenticated){// Reset State\nthis.setState({polls:[],page:0,size:10,totalElements:0,totalPages:0,last:true,currentVotes:[],isLoading:false});this.loadPollList();}}},{key:\"handleLoadMore\",value:function handleLoadMore(){this.loadPollList(this.state.page+1);}},{key:\"handleVoteChange\",value:function handleVoteChange(event,pollIndex){var currentVotes=this.state.currentVotes.slice();currentVotes[pollIndex]=event.target.value;this.setState({currentVotes:currentVotes});}},{key:\"handleVoteSubmit\",value:function handleVoteSubmit(event,pollIndex){var _this3=this;event.preventDefault();if(!this.props.isAuthenticated){this.props.history.push(\"/login\");_notification.info({message:'Polling App',description:\"Please login to vote.\"});return;}var poll=this.state.polls[pollIndex];var selectedChoice=this.state.currentVotes[pollIndex];var voteData={pollId:poll.id,choiceId:selectedChoice};castVote(voteData).then(function(response){var polls=_this3.state.polls.slice();polls[pollIndex]=response;_this3.setState({polls:polls});}).catch(function(error){if(error.status===401){_this3.props.handleLogout('/login','error','You have been logged out. Please login to vote');}else{_notification.error({message:'Polling App',description:error.message||'Sorry! Something went wrong. Please try again!'});}});}},{key:\"render\",value:function render(){var _this4=this;var pollViews=[];this.state.polls.forEach(function(poll,pollIndex){pollViews.push(React.createElement(Poll,{key:poll.id,poll:poll,currentVote:_this4.state.currentVotes[pollIndex],handleVoteChange:function handleVoteChange(event){return _this4.handleVoteChange(event,pollIndex);},handleVoteSubmit:function handleVoteSubmit(event){return _this4.handleVoteSubmit(event,pollIndex);}}));});return React.createElement(\"div\",{className:\"polls-container\"},pollViews,!this.state.isLoading&&this.state.polls.length===0?React.createElement(\"div\",{className:\"no-polls-found\"},React.createElement(\"span\",null,\"No Polls Found.\")):null,!this.state.isLoading&&!this.state.last?React.createElement(\"div\",{className:\"load-more-polls\"},React.createElement(_Button,{type:\"dashed\",onClick:this.handleLoadMore,disabled:this.state.isLoading},React.createElement(_Icon,{type:\"plus\"}),\" Load more\")):null,this.state.isLoading?React.createElement(LoadingIndicator,null):null);}}]);return PollList;}(Component);export default withRouter(PollList);","map":{"version":3,"sources":["/Users/gurdipsingh/git/polling-app-client/src/poll/PollList.js"],"names":["React","Component","getAllPolls","getUserCreatedPolls","getUserVotedPolls","Poll","castVote","LoadingIndicator","POLL_LIST_SIZE","withRouter","PollList","props","state","polls","page","size","totalElements","totalPages","last","currentVotes","isLoading","loadPollList","bind","handleLoadMore","promise","username","type","setState","then","response","slice","concat","content","Array","length","fill","catch","error","nextProps","isAuthenticated","event","pollIndex","target","value","preventDefault","history","push","info","message","description","poll","selectedChoice","voteData","pollId","id","choiceId","status","handleLogout","pollViews","forEach","handleVoteChange","handleVoteSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { getAllPolls, getUserCreatedPolls, getUserVotedPolls } from '../util/APIUtils';\nimport Poll from './Poll';\nimport { castVote } from '../util/APIUtils';\nimport LoadingIndicator  from '../common/LoadingIndicator';\nimport { Button, Icon, notification } from 'antd';\nimport { POLL_LIST_SIZE } from '../constants';\nimport { withRouter } from 'react-router-dom';\nimport './PollList.css';\n\nclass PollList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            polls: [],\n            page: 0,\n            size: 10,\n            totalElements: 0,\n            totalPages: 0,\n            last: true,\n            currentVotes: [],\n            isLoading: false\n        };\n        this.loadPollList = this.loadPollList.bind(this);\n        this.handleLoadMore = this.handleLoadMore.bind(this);\n    }\n\n    loadPollList(page = 0, size = POLL_LIST_SIZE) {\n        let promise;\n        if(this.props.username) {\n            if(this.props.type === 'USER_CREATED_POLLS') {\n                promise = getUserCreatedPolls(this.props.username, page, size);\n            } else if (this.props.type === 'USER_VOTED_POLLS') {\n                promise = getUserVotedPolls(this.props.username, page, size);                               \n            }\n        } else {\n            promise = getAllPolls(page, size);\n        }\n\n        if(!promise) {\n            return;\n        }\n\n        this.setState({\n            isLoading: true\n        });\n\n        promise            \n        .then(response => {\n            const polls = this.state.polls.slice();\n            const currentVotes = this.state.currentVotes.slice();\n\n            this.setState({\n                polls: polls.concat(response.content),\n                page: response.page,\n                size: response.size,\n                totalElements: response.totalElements,\n                totalPages: response.totalPages,\n                last: response.last,\n                currentVotes: currentVotes.concat(Array(response.content.length).fill(null)),\n                isLoading: false\n            })\n        }).catch(error => {\n            this.setState({\n                isLoading: false\n            })\n        });  \n        \n    }\n\n    componentDidMount() {\n        this.loadPollList();\n    }\n\n    componentDidUpdate(nextProps) {\n        if(this.props.isAuthenticated !== nextProps.isAuthenticated) {\n            // Reset State\n            this.setState({\n                polls: [],\n                page: 0,\n                size: 10,\n                totalElements: 0,\n                totalPages: 0,\n                last: true,\n                currentVotes: [],\n                isLoading: false\n            });    \n            this.loadPollList();\n        }\n    }\n\n    handleLoadMore() {\n        this.loadPollList(this.state.page + 1);\n    }\n\n    handleVoteChange(event, pollIndex) {\n        const currentVotes = this.state.currentVotes.slice();\n        currentVotes[pollIndex] = event.target.value;\n\n        this.setState({\n            currentVotes: currentVotes\n        });\n    }\n\n\n    handleVoteSubmit(event, pollIndex) {\n        event.preventDefault();\n        if(!this.props.isAuthenticated) {\n            this.props.history.push(\"/login\");\n            notification.info({\n                message: 'Polling App',\n                description: \"Please login to vote.\",          \n            });\n            return;\n        }\n\n        const poll = this.state.polls[pollIndex];\n        const selectedChoice = this.state.currentVotes[pollIndex];\n\n        const voteData = {\n            pollId: poll.id,\n            choiceId: selectedChoice\n        };\n\n        castVote(voteData)\n        .then(response => {\n            const polls = this.state.polls.slice();\n            polls[pollIndex] = response;\n            this.setState({\n                polls: polls\n            });        \n        }).catch(error => {\n            if(error.status === 401) {\n                this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');    \n            } else {\n                notification.error({\n                    message: 'Polling App',\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\n                });                \n            }\n        });\n    }\n\n    render() {\n        const pollViews = [];\n        this.state.polls.forEach((poll, pollIndex) => {\n            pollViews.push(<Poll \n                key={poll.id} \n                poll={poll}\n                currentVote={this.state.currentVotes[pollIndex]} \n                handleVoteChange={(event) => this.handleVoteChange(event, pollIndex)}\n                handleVoteSubmit={(event) => this.handleVoteSubmit(event, pollIndex)} />)            \n        });\n\n        return (\n            <div className=\"polls-container\">\n                {pollViews}\n                {\n                    !this.state.isLoading && this.state.polls.length === 0 ? (\n                        <div className=\"no-polls-found\">\n                            <span>No Polls Found.</span>\n                        </div>    \n                    ): null\n                }  \n                {\n                    !this.state.isLoading && !this.state.last ? (\n                        <div className=\"load-more-polls\"> \n                            <Button type=\"dashed\" onClick={this.handleLoadMore} disabled={this.state.isLoading}>\n                                <Icon type=\"plus\" /> Load more\n                            </Button>\n                        </div>): null\n                }              \n                {\n                    this.state.isLoading ? \n                    <LoadingIndicator />: null                     \n                }\n            </div>\n        );\n    }\n}\n\nexport default withRouter(PollList);"]},"metadata":{},"sourceType":"module"}