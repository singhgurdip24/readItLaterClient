{"ast":null,"code":"var _jsxFileName = \"/Users/gurdipsingh/git/polling-app-client/src/poll/NewPoll.js\";\nimport React, { Component } from 'react';\nimport { createPoll } from '../util/APIUtils';\nimport { MAX_CHOICES, POLL_QUESTION_MAX_LENGTH, POLL_CHOICE_MAX_LENGTH } from '../constants';\nimport './NewPoll.css';\nimport { Form, Input, Button, Icon, Select, Col, notification } from 'antd';\nconst Option = Select.Option;\nconst FormItem = Form.Item;\nconst {\n  TextArea\n} = Input;\n\nclass NewPoll extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateQuestion = questionText => {\n      if (questionText.length === 0) {\n        return {\n          validateStatus: 'error',\n          errorMsg: 'Please enter your question!'\n        };\n      } else if (questionText.length > POLL_QUESTION_MAX_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Question is too long (Maximum ${POLL_QUESTION_MAX_LENGTH} characters allowed)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.validateChoice = choiceText => {\n      if (choiceText.length === 0) {\n        return {\n          validateStatus: 'error',\n          errorMsg: 'Please enter a choice!'\n        };\n      } else if (choiceText.length > POLL_CHOICE_MAX_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Choice is too long (Maximum ${POLL_CHOICE_MAX_LENGTH} characters allowed)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.state = {\n      question: {\n        text: ''\n      },\n      choices: [{\n        text: ''\n      }, {\n        text: ''\n      }],\n      pollLength: {\n        days: 1,\n        hours: 0\n      }\n    };\n    this.addChoice = this.addChoice.bind(this);\n    this.removeChoice = this.removeChoice.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleQuestionChange = this.handleQuestionChange.bind(this);\n    this.handleChoiceChange = this.handleChoiceChange.bind(this);\n    this.handlePollDaysChange = this.handlePollDaysChange.bind(this);\n    this.handlePollHoursChange = this.handlePollHoursChange.bind(this);\n    this.isFormInvalid = this.isFormInvalid.bind(this);\n  }\n\n  addChoice(event) {\n    const choices = this.state.choices.slice();\n    this.setState({\n      choices: choices.concat([{\n        text: ''\n      }])\n    });\n  }\n\n  removeChoice(choiceNumber) {\n    const choices = this.state.choices.slice();\n    this.setState({\n      choices: [...choices.slice(0, choiceNumber), ...choices.slice(choiceNumber + 1)]\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const pollData = {\n      question: this.state.question.text,\n      choices: this.state.choices.map(choice => {\n        return {\n          text: choice.text\n        };\n      }),\n      pollLength: this.state.pollLength\n    };\n    createPoll(pollData).then(response => {\n      this.props.history.push(\"/\");\n    }).catch(error => {\n      if (error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'You have been logged out. Please login create poll.');\n      } else {\n        notification.error({\n          message: 'Polling App',\n          description: error.message || 'Sorry! Something went wrong. Please try again!'\n        });\n      }\n    });\n  }\n\n  handleQuestionChange(event) {\n    const value = event.target.value;\n    this.setState({\n      question: {\n        text: value,\n        ...this.validateQuestion(value)\n      }\n    });\n  }\n\n  handleChoiceChange(event, index) {\n    const choices = this.state.choices.slice();\n    const value = event.target.value;\n    choices[index] = {\n      text: value,\n      ...this.validateChoice(value)\n    };\n    this.setState({\n      choices: choices\n    });\n  }\n\n  handlePollDaysChange(value) {\n    const pollLength = Object.assign(this.state.pollLength, {\n      days: value\n    });\n    this.setState({\n      pollLength: pollLength\n    });\n  }\n\n  handlePollHoursChange(value) {\n    const pollLength = Object.assign(this.state.pollLength, {\n      hours: value\n    });\n    this.setState({\n      pollLength: pollLength\n    });\n  }\n\n  isFormInvalid() {\n    if (this.state.question.validateStatus !== 'success') {\n      return true;\n    }\n\n    for (let i = 0; i < this.state.choices.length; i++) {\n      const choice = this.state.choices[i];\n\n      if (choice.validateStatus !== 'success') {\n        return true;\n      }\n    }\n  }\n\n  render() {\n    const choiceViews = [];\n    this.state.choices.forEach((choice, index) => {\n      choiceViews.push(React.createElement(PollChoice, {\n        key: index,\n        choice: choice,\n        choiceNumber: index,\n        removeChoice: this.removeChoice,\n        handleChoiceChange: this.handleChoiceChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"new-poll-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Create Poll\"), React.createElement(\"div\", {\n      className: \"new-poll-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"create-poll-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      validateStatus: this.state.question.validateStatus,\n      help: this.state.question.errorMsg,\n      className: \"poll-form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      placeholder: \"Enter your question\",\n      style: {\n        fontSize: '16px'\n      },\n      autosize: {\n        minRows: 3,\n        maxRows: 6\n      },\n      name: \"question\",\n      value: this.state.question.text,\n      onChange: this.handleQuestionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), choiceViews, React.createElement(FormItem, {\n      className: \"poll-form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"dashed\",\n      onClick: this.addChoice,\n      disabled: this.state.choices.length === MAX_CHOICES,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), \" Add a choice\")), React.createElement(FormItem, {\n      className: \"poll-form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Poll length:\"), React.createElement(Col, {\n      xs: 24,\n      sm: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        marginRight: '18px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Select, {\n      name: \"days\",\n      defaultValue: \"1\",\n      onChange: this.handlePollDaysChange,\n      value: this.state.pollLength.days,\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, Array.from(Array(8).keys()).map(i => React.createElement(Option, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, i))), \" \\xA0Days\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Select, {\n      name: \"hours\",\n      defaultValue: \"0\",\n      onChange: this.handlePollHoursChange,\n      value: this.state.pollLength.hours,\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, Array.from(Array(24).keys()).map(i => React.createElement(Option, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, i))), \" \\xA0Hours\"))), React.createElement(FormItem, {\n      className: \"poll-form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      size: \"large\",\n      disabled: this.isFormInvalid(),\n      className: \"create-poll-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Create Poll\")))));\n  }\n\n}\n\nfunction PollChoice(props) {\n  return React.createElement(FormItem, {\n    validateStatus: props.choice.validateStatus,\n    help: props.choice.errorMsg,\n    className: \"poll-form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: 'Choice ' + (props.choiceNumber + 1),\n    size: \"large\",\n    value: props.choice.text,\n    className: props.choiceNumber > 1 ? \"optional-choice\" : null,\n    onChange: event => props.handleChoiceChange(event, props.choiceNumber),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }), props.choiceNumber > 1 ? React.createElement(Icon, {\n    className: \"dynamic-delete-button\",\n    type: \"close\",\n    disabled: props.choiceNumber <= 1,\n    onClick: () => props.removeChoice(props.choiceNumber),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }) : null);\n}\n\nexport default NewPoll;","map":{"version":3,"sources":["/Users/gurdipsingh/git/polling-app-client/src/poll/NewPoll.js"],"names":["React","Component","createPoll","MAX_CHOICES","POLL_QUESTION_MAX_LENGTH","POLL_CHOICE_MAX_LENGTH","Form","Input","Button","Icon","Select","Col","notification","Option","FormItem","Item","TextArea","NewPoll","constructor","props","validateQuestion","questionText","length","validateStatus","errorMsg","validateChoice","choiceText","state","question","text","choices","pollLength","days","hours","addChoice","bind","removeChoice","handleSubmit","handleQuestionChange","handleChoiceChange","handlePollDaysChange","handlePollHoursChange","isFormInvalid","event","slice","setState","concat","choiceNumber","preventDefault","pollData","map","choice","then","response","history","push","catch","error","status","handleLogout","message","description","value","target","index","Object","assign","i","render","choiceViews","forEach","fontSize","minRows","maxRows","marginRight","width","Array","from","keys","PollChoice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { createPoll } from '../util/APIUtils';\nimport { MAX_CHOICES, POLL_QUESTION_MAX_LENGTH, POLL_CHOICE_MAX_LENGTH } from '../constants';\nimport './NewPoll.css';  \nimport { Form, Input, Button, Icon, Select, Col, notification } from 'antd';\nconst Option = Select.Option;\nconst FormItem = Form.Item;\nconst { TextArea } = Input\n\nclass NewPoll extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            question: {\n                text: ''\n            },\n            choices: [{\n                text: ''\n            }, {\n                text: ''\n            }],\n            pollLength: {\n                days: 1,\n                hours: 0\n            }\n        };\n        this.addChoice = this.addChoice.bind(this);\n        this.removeChoice = this.removeChoice.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleQuestionChange = this.handleQuestionChange.bind(this);\n        this.handleChoiceChange = this.handleChoiceChange.bind(this);\n        this.handlePollDaysChange = this.handlePollDaysChange.bind(this);\n        this.handlePollHoursChange = this.handlePollHoursChange.bind(this);\n        this.isFormInvalid = this.isFormInvalid.bind(this);\n    }\n\n    addChoice(event) {\n        const choices = this.state.choices.slice();        \n        this.setState({\n            choices: choices.concat([{\n                text: ''\n            }])\n        });\n    }\n\n    removeChoice(choiceNumber) {\n        const choices = this.state.choices.slice();\n        this.setState({\n            choices: [...choices.slice(0, choiceNumber), ...choices.slice(choiceNumber+1)]\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const pollData = {\n            question: this.state.question.text,\n            choices: this.state.choices.map(choice => {\n                return {text: choice.text} \n            }),\n            pollLength: this.state.pollLength\n        };\n\n        createPoll(pollData)\n        .then(response => {\n            this.props.history.push(\"/\");\n        }).catch(error => {\n            if(error.status === 401) {\n                this.props.handleLogout('/login', 'error', 'You have been logged out. Please login create poll.');    \n            } else {\n                notification.error({\n                    message: 'Polling App',\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\n                });              \n            }\n        });\n    }\n\n    validateQuestion = (questionText) => {\n        if(questionText.length === 0) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Please enter your question!'\n            }\n        } else if (questionText.length > POLL_QUESTION_MAX_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Question is too long (Maximum ${POLL_QUESTION_MAX_LENGTH} characters allowed)`\n            }    \n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null\n            }\n        }\n    }\n\n    handleQuestionChange(event) {\n        const value = event.target.value;\n        this.setState({\n            question: {\n                text: value,\n                ...this.validateQuestion(value)\n            }\n        });\n    }\n\n    validateChoice = (choiceText) => {\n        if(choiceText.length === 0) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Please enter a choice!'\n            }\n        } else if (choiceText.length > POLL_CHOICE_MAX_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Choice is too long (Maximum ${POLL_CHOICE_MAX_LENGTH} characters allowed)`\n            }    \n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null\n            }\n        }\n    }\n\n    handleChoiceChange(event, index) {\n        const choices = this.state.choices.slice();\n        const value = event.target.value;\n\n        choices[index] = {\n            text: value,\n            ...this.validateChoice(value)\n        }\n\n        this.setState({\n            choices: choices\n        });\n    }\n\n\n    handlePollDaysChange(value) {\n        const pollLength = Object.assign(this.state.pollLength, {days: value});\n        this.setState({\n            pollLength: pollLength\n        });\n    }\n\n    handlePollHoursChange(value) {\n        const pollLength = Object.assign(this.state.pollLength, {hours: value});\n        this.setState({\n            pollLength: pollLength\n        });\n    }\n\n    isFormInvalid() {\n        if(this.state.question.validateStatus !== 'success') {\n            return true;\n        }\n    \n        for(let i = 0; i < this.state.choices.length; i++) {\n            const choice = this.state.choices[i];            \n            if(choice.validateStatus !== 'success') {\n                return true;\n            }\n        }\n    }\n\n    render() {\n        const choiceViews = [];\n        this.state.choices.forEach((choice, index) => {\n            choiceViews.push(<PollChoice key={index} choice={choice} choiceNumber={index} removeChoice={this.removeChoice} handleChoiceChange={this.handleChoiceChange}/>);\n        });\n\n        return (\n            <div className=\"new-poll-container\">\n                <h1 className=\"page-title\">Create Poll</h1>\n                <div className=\"new-poll-content\">\n                    <Form onSubmit={this.handleSubmit} className=\"create-poll-form\">\n                        <FormItem validateStatus={this.state.question.validateStatus}\n                            help={this.state.question.errorMsg} className=\"poll-form-row\">\n                        <TextArea \n                            placeholder=\"Enter your question\"\n                            style = {{ fontSize: '16px' }} \n                            autosize={{ minRows: 3, maxRows: 6 }} \n                            name = \"question\"\n                            value = {this.state.question.text}\n                            onChange = {this.handleQuestionChange} />\n                        </FormItem>\n                        {choiceViews}\n                        <FormItem className=\"poll-form-row\">\n                            <Button type=\"dashed\" onClick={this.addChoice} disabled={this.state.choices.length === MAX_CHOICES}>\n                                <Icon type=\"plus\" /> Add a choice\n                            </Button>\n                        </FormItem>\n                        <FormItem className=\"poll-form-row\">\n                            <Col xs={24} sm={4}>\n                                Poll length: \n                            </Col>\n                            <Col xs={24} sm={20}>    \n                                <span style = {{ marginRight: '18px' }}>\n                                    <Select \n                                        name=\"days\"\n                                        defaultValue=\"1\" \n                                        onChange={this.handlePollDaysChange}\n                                        value={this.state.pollLength.days}\n                                        style={{ width: 60 }} >\n                                        {\n                                            Array.from(Array(8).keys()).map(i => \n                                                <Option key={i}>{i}</Option>                                        \n                                            )\n                                        }\n                                    </Select> &nbsp;Days\n                                </span>\n                                <span>\n                                    <Select \n                                        name=\"hours\"\n                                        defaultValue=\"0\" \n                                        onChange={this.handlePollHoursChange}\n                                        value={this.state.pollLength.hours}\n                                        style={{ width: 60 }} >\n                                        {\n                                            Array.from(Array(24).keys()).map(i => \n                                                <Option key={i}>{i}</Option>                                        \n                                            )\n                                        }\n                                    </Select> &nbsp;Hours\n                                </span>\n                            </Col>\n                        </FormItem>\n                        <FormItem className=\"poll-form-row\">\n                            <Button type=\"primary\" \n                                htmlType=\"submit\" \n                                size=\"large\" \n                                disabled={this.isFormInvalid()}\n                                className=\"create-poll-form-button\">Create Poll</Button>\n                        </FormItem>\n                    </Form>\n                </div>    \n            </div>\n        );\n    }\n}\n\nfunction PollChoice(props) {\n    return (\n        <FormItem validateStatus={props.choice.validateStatus}\n        help={props.choice.errorMsg} className=\"poll-form-row\">\n            <Input \n                placeholder = {'Choice ' + (props.choiceNumber + 1)}\n                size=\"large\"\n                value={props.choice.text} \n                className={ props.choiceNumber > 1 ? \"optional-choice\": null}\n                onChange={(event) => props.handleChoiceChange(event, props.choiceNumber)} />\n\n            {\n                props.choiceNumber > 1 ? (\n                <Icon\n                    className=\"dynamic-delete-button\"\n                    type=\"close\"\n                    disabled={props.choiceNumber <= 1}\n                    onClick={() => props.removeChoice(props.choiceNumber)}\n                /> ): null\n            }    \n        </FormItem>\n    );\n}\n\n\nexport default NewPoll;"]},"metadata":{},"sourceType":"module"}