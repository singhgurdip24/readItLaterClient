{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _FilterFilled = _interopRequireDefault(require(\"@ant-design/icons/FilterFilled\"));\n\nvar _menu = _interopRequireDefault(require(\"../../../menu\"));\n\nvar _checkbox = _interopRequireDefault(require(\"../../../checkbox\"));\n\nvar _radio = _interopRequireDefault(require(\"../../../radio\"));\n\nvar _dropdown = _interopRequireDefault(require(\"../../../dropdown\"));\n\nvar _FilterWrapper = _interopRequireDefault(require(\"./FilterWrapper\"));\n\nvar _useSyncState3 = _interopRequireDefault(require(\"../useSyncState\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar SubMenu = _menu[\"default\"].SubMenu,\n    MenuItem = _menu[\"default\"].Item;\n\nfunction hasSubMenu(filters) {\n  return filters.some(function (_ref) {\n    var children = _ref.children;\n    return children;\n  });\n}\n\nfunction renderFilterItems(filters, prefixCls, filteredKeys, multiple) {\n  return filters.map(function (filter, index) {\n    if (filter.children) {\n      return React.createElement(SubMenu, {\n        key: filter.value || index,\n        title: filter.text,\n        popupClassName: \"\".concat(prefixCls, \"-dropdown-submenu\")\n      }, renderFilterItems(filter.children, prefixCls, filteredKeys, multiple));\n    }\n\n    var Component = multiple ? _checkbox[\"default\"] : _radio[\"default\"];\n    return React.createElement(MenuItem, {\n      key: filter.value !== undefined ? filter.value : index\n    }, React.createElement(Component, {\n      checked: filteredKeys.includes(String(filter.value))\n    }), React.createElement(\"span\", null, filter.text));\n  });\n}\n\nfunction FilterDropdown(props) {\n  var prefixCls = props.prefixCls,\n      column = props.column,\n      dropdownPrefixCls = props.dropdownPrefixCls,\n      columnKey = props.columnKey,\n      filterMultiple = props.filterMultiple,\n      filterState = props.filterState,\n      triggerFilter = props.triggerFilter,\n      locale = props.locale,\n      children = props.children,\n      getPopupContainer = props.getPopupContainer;\n  var filterDropdownVisible = column.filterDropdownVisible,\n      onFilterDropdownVisibleChange = column.onFilterDropdownVisibleChange;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var filtered = !!(filterState && (filterState.filteredKeys || filterState.forceFiltered));\n\n  var triggerVisible = function triggerVisible(newVisible) {\n    setVisible(newVisible);\n\n    if (onFilterDropdownVisibleChange) {\n      onFilterDropdownVisibleChange(newVisible);\n    }\n  };\n\n  var mergedVisible = typeof filterDropdownVisible === 'boolean' ? filterDropdownVisible : visible; // ===================== Select Keys =====================\n\n  var propFilteredKeys = filterState && filterState.filteredKeys;\n\n  var _useSyncState = (0, _useSyncState3[\"default\"])(propFilteredKeys || []),\n      _useSyncState2 = _slicedToArray(_useSyncState, 2),\n      getFilteredKeysSync = _useSyncState2[0],\n      setFilteredKeysSync = _useSyncState2[1];\n\n  var onSelectKeys = function onSelectKeys(_ref2) {\n    var selectedKeys = _ref2.selectedKeys;\n    setFilteredKeysSync(selectedKeys);\n  };\n\n  React.useEffect(function () {\n    onSelectKeys({\n      selectedKeys: propFilteredKeys || []\n    });\n  }, [propFilteredKeys]); // ====================== Open Keys ======================\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      openKeys = _React$useState4[0],\n      setOpenKeys = _React$useState4[1];\n\n  var openRef = React.useRef();\n\n  var onOpenChange = function onOpenChange(keys) {\n    openRef.current = window.setTimeout(function () {\n      setOpenKeys(keys);\n    });\n  };\n\n  var onMenuClick = function onMenuClick() {\n    window.clearTimeout(openRef.current);\n  };\n\n  React.useEffect(function () {\n    return function () {\n      window.clearTimeout(openRef.current);\n    };\n  }, []); // ======================= Submit ========================\n\n  var internalTriggerFilter = function internalTriggerFilter(keys) {\n    triggerVisible(false);\n    var mergedKeys = keys && keys.length ? keys : null;\n\n    if (mergedKeys === null && (!filterState || !filterState.filteredKeys)) {\n      return null;\n    }\n\n    triggerFilter({\n      column: column,\n      key: columnKey,\n      filteredKeys: mergedKeys\n    });\n  };\n\n  var onConfirm = function onConfirm() {\n    internalTriggerFilter(getFilteredKeysSync());\n  };\n\n  var onReset = function onReset() {\n    internalTriggerFilter([]);\n  };\n\n  var onVisibleChange = function onVisibleChange(newVisible) {\n    triggerVisible(newVisible); // Default will filter when closed\n\n    if (!newVisible && !column.filterDropdown) {\n      onConfirm();\n    }\n  }; // ======================== Style ========================\n\n\n  var dropdownMenuClass = (0, _classnames[\"default\"])(_defineProperty({}, \"\".concat(dropdownPrefixCls, \"-menu-without-submenu\"), !hasSubMenu(column.filters || [])));\n  var dropdownContent;\n\n  if (typeof column.filterDropdown === 'function') {\n    dropdownContent = column.filterDropdown({\n      prefixCls: \"\".concat(dropdownPrefixCls, \"-custom\"),\n      setSelectedKeys: function setSelectedKeys(selectedKeys) {\n        return onSelectKeys({\n          selectedKeys: selectedKeys\n        });\n      },\n      selectedKeys: getFilteredKeysSync(),\n      confirm: onConfirm,\n      clearFilters: onReset,\n      filters: column.filters,\n      visible: mergedVisible\n    });\n  } else if (column.filterDropdown) {\n    dropdownContent = column.filterDropdown;\n  } else {\n    dropdownContent = React.createElement(React.Fragment, null, React.createElement(_menu[\"default\"], {\n      multiple: filterMultiple,\n      prefixCls: \"\".concat(dropdownPrefixCls, \"-menu\"),\n      className: dropdownMenuClass,\n      onClick: onMenuClick,\n      onSelect: onSelectKeys,\n      onDeselect: onSelectKeys,\n      selectedKeys: getFilteredKeysSync() || [],\n      getPopupContainer: getPopupContainer,\n      openKeys: openKeys,\n      onOpenChange: onOpenChange\n    }, renderFilterItems(column.filters, prefixCls, getFilteredKeysSync(), filterMultiple)), React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-dropdown-btns\")\n    }, React.createElement(\"a\", {\n      className: \"\".concat(prefixCls, \"-dropdown-link confirm\"),\n      onClick: onConfirm\n    }, locale.filterConfirm), React.createElement(\"a\", {\n      className: \"\".concat(prefixCls, \"-dropdown-link clear\"),\n      onClick: onReset\n    }, locale.filterReset)));\n  }\n\n  var menu = React.createElement(_FilterWrapper[\"default\"], {\n    className: \"\".concat(prefixCls, \"-dropdown\")\n  }, dropdownContent);\n  var filterIcon;\n\n  if (typeof column.filterIcon === 'function') {\n    filterIcon = column.filterIcon(filtered);\n  } else if (column.filterIcon) {\n    filterIcon = column.filterIcon;\n  } else {\n    filterIcon = React.createElement(_FilterFilled[\"default\"], null);\n  }\n\n  return React.createElement(\"div\", {\n    className: (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-column\"))\n  }, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-column-title\")\n  }, children), React.createElement(\"span\", {\n    className: (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-trigger-container\"), _defineProperty({}, \"\".concat(prefixCls, \"-trigger-container-open\"), mergedVisible)),\n    onClick: function onClick(e) {\n      e.stopPropagation();\n    }\n  }, React.createElement(_dropdown[\"default\"], {\n    overlay: menu,\n    trigger: ['click'],\n    visible: mergedVisible,\n    onVisibleChange: onVisibleChange,\n    getPopupContainer: getPopupContainer,\n    placement: \"bottomRight\"\n  }, React.createElement(\"span\", {\n    role: \"button\",\n    tabIndex: -1,\n    className: (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-trigger\"), {\n      active: filtered\n    })\n  }, filterIcon))));\n}\n\nvar _default = FilterDropdown;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["table/hooks/useFilter/FilterDropdown.jsx"],"names":["SubMenu","Item","MenuItem","Menu","children","filter","renderFilterItems","Component","multiple","Checkbox","Radio","index","filteredKeys","String","prefixCls","column","dropdownPrefixCls","columnKey","filterMultiple","filterState","triggerFilter","locale","getPopupContainer","props","filterDropdownVisible","onFilterDropdownVisibleChange","visible","setVisible","React","filtered","triggerVisible","mergedVisible","propFilteredKeys","getFilteredKeysSync","setFilteredKeysSync","onSelectKeys","selectedKeys","openKeys","setOpenKeys","openRef","onOpenChange","onMenuClick","window","internalTriggerFilter","mergedKeys","keys","key","onConfirm","onReset","onVisibleChange","dropdownMenuClass","hasSubMenu","dropdownContent","setSelectedKeys","confirm","clearFilters","filters","menu","filterIcon","e","active","FilterDropdown"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport FilterFilled from '@ant-design/icons/FilterFilled';\nimport Menu from '../../../menu';\nimport Checkbox from '../../../checkbox';\nimport Radio from '../../../radio';\nimport Dropdown from '../../../dropdown';\nimport FilterDropdownMenuWrapper from './FilterWrapper';\nimport useSyncState from '../useSyncState';\nconst { SubMenu, Item: MenuItem } = Menu;\nfunction hasSubMenu(filters) {\n    return filters.some(({ children }) => children);\n}\nfunction renderFilterItems(filters, prefixCls, filteredKeys, multiple) {\n    return filters.map((filter, index) => {\n        if (filter.children) {\n            return (<SubMenu key={filter.value || index} title={filter.text} popupClassName={`${prefixCls}-dropdown-submenu`}>\n          {renderFilterItems(filter.children, prefixCls, filteredKeys, multiple)}\n        </SubMenu>);\n        }\n        const Component = multiple ? Checkbox : Radio;\n        return (<MenuItem key={filter.value !== undefined ? filter.value : index}>\n        <Component checked={filteredKeys.includes(String(filter.value))}/>\n        <span>{filter.text}</span>\n      </MenuItem>);\n    });\n}\nfunction FilterDropdown(props) {\n    const { prefixCls, column, dropdownPrefixCls, columnKey, filterMultiple, filterState, triggerFilter, locale, children, getPopupContainer, } = props;\n    const { filterDropdownVisible, onFilterDropdownVisibleChange } = column;\n    const [visible, setVisible] = React.useState(false);\n    const filtered = !!(filterState &&\n        (filterState.filteredKeys || filterState.forceFiltered));\n    const triggerVisible = (newVisible) => {\n        setVisible(newVisible);\n        if (onFilterDropdownVisibleChange) {\n            onFilterDropdownVisibleChange(newVisible);\n        }\n    };\n    const mergedVisible = typeof filterDropdownVisible === 'boolean' ? filterDropdownVisible : visible;\n    // ===================== Select Keys =====================\n    const propFilteredKeys = filterState && filterState.filteredKeys;\n    const [getFilteredKeysSync, setFilteredKeysSync] = useSyncState(propFilteredKeys || []);\n    const onSelectKeys = ({ selectedKeys }) => {\n        setFilteredKeysSync(selectedKeys);\n    };\n    React.useEffect(() => {\n        onSelectKeys({ selectedKeys: propFilteredKeys || [] });\n    }, [propFilteredKeys]);\n    // ====================== Open Keys ======================\n    const [openKeys, setOpenKeys] = React.useState([]);\n    const openRef = React.useRef();\n    const onOpenChange = (keys) => {\n        openRef.current = window.setTimeout(() => {\n            setOpenKeys(keys);\n        });\n    };\n    const onMenuClick = () => {\n        window.clearTimeout(openRef.current);\n    };\n    React.useEffect(() => {\n        return () => {\n            window.clearTimeout(openRef.current);\n        };\n    }, []);\n    // ======================= Submit ========================\n    const internalTriggerFilter = (keys) => {\n        triggerVisible(false);\n        const mergedKeys = keys && keys.length ? keys : null;\n        if (mergedKeys === null && (!filterState || !filterState.filteredKeys)) {\n            return null;\n        }\n        triggerFilter({\n            column,\n            key: columnKey,\n            filteredKeys: mergedKeys,\n        });\n    };\n    const onConfirm = () => {\n        internalTriggerFilter(getFilteredKeysSync());\n    };\n    const onReset = () => {\n        internalTriggerFilter([]);\n    };\n    const onVisibleChange = (newVisible) => {\n        triggerVisible(newVisible);\n        // Default will filter when closed\n        if (!newVisible && !column.filterDropdown) {\n            onConfirm();\n        }\n    };\n    // ======================== Style ========================\n    const dropdownMenuClass = classNames({\n        [`${dropdownPrefixCls}-menu-without-submenu`]: !hasSubMenu(column.filters || []),\n    });\n    let dropdownContent;\n    if (typeof column.filterDropdown === 'function') {\n        dropdownContent = column.filterDropdown({\n            prefixCls: `${dropdownPrefixCls}-custom`,\n            setSelectedKeys: (selectedKeys) => onSelectKeys({ selectedKeys }),\n            selectedKeys: getFilteredKeysSync(),\n            confirm: onConfirm,\n            clearFilters: onReset,\n            filters: column.filters,\n            visible: mergedVisible,\n        });\n    }\n    else if (column.filterDropdown) {\n        dropdownContent = column.filterDropdown;\n    }\n    else {\n        dropdownContent = (<>\n        <Menu multiple={filterMultiple} prefixCls={`${dropdownPrefixCls}-menu`} className={dropdownMenuClass} onClick={onMenuClick} onSelect={onSelectKeys} onDeselect={onSelectKeys} selectedKeys={(getFilteredKeysSync() || [])} getPopupContainer={getPopupContainer} openKeys={openKeys} onOpenChange={onOpenChange}>\n          {renderFilterItems(column.filters, prefixCls, getFilteredKeysSync(), filterMultiple)}\n        </Menu>\n        <div className={`${prefixCls}-dropdown-btns`}>\n          <a className={`${prefixCls}-dropdown-link confirm`} onClick={onConfirm}>\n            {locale.filterConfirm}\n          </a>\n          <a className={`${prefixCls}-dropdown-link clear`} onClick={onReset}>\n            {locale.filterReset}\n          </a>\n        </div>\n      </>);\n    }\n    const menu = (<FilterDropdownMenuWrapper className={`${prefixCls}-dropdown`}>\n      {dropdownContent}\n    </FilterDropdownMenuWrapper>);\n    let filterIcon;\n    if (typeof column.filterIcon === 'function') {\n        filterIcon = column.filterIcon(filtered);\n    }\n    else if (column.filterIcon) {\n        filterIcon = column.filterIcon;\n    }\n    else {\n        filterIcon = <FilterFilled />;\n    }\n    return (<div className={classNames(`${prefixCls}-column`)}>\n      <span className={`${prefixCls}-column-title`}>{children}</span>\n\n      <span className={classNames(`${prefixCls}-trigger-container`, {\n        [`${prefixCls}-trigger-container-open`]: mergedVisible,\n    })} onClick={e => {\n        e.stopPropagation();\n    }}>\n        <Dropdown overlay={menu} trigger={['click']} visible={mergedVisible} onVisibleChange={onVisibleChange} getPopupContainer={getPopupContainer} placement=\"bottomRight\">\n          <span role=\"button\" tabIndex={-1} className={classNames(`${prefixCls}-trigger`, {\n        active: filtered,\n    })}>\n            {filterIcon}\n          </span>\n        </Dropdown>\n      </span>\n    </div>);\n}\nexport default FilterDropdown;\n"]},"metadata":{},"sourceType":"script"}