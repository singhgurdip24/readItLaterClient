{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _rcAnimate = _interopRequireDefault(require(\"rc-animate\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _LoadingOutlined = _interopRequireDefault(require(\"@ant-design/icons/LoadingOutlined\"));\n\nvar _PaperClipOutlined = _interopRequireDefault(require(\"@ant-design/icons/PaperClipOutlined\"));\n\nvar _PictureTwoTone = _interopRequireDefault(require(\"@ant-design/icons/PictureTwoTone\"));\n\nvar _FileTwoTone = _interopRequireDefault(require(\"@ant-design/icons/FileTwoTone\"));\n\nvar _EyeOutlined = _interopRequireDefault(require(\"@ant-design/icons/EyeOutlined\"));\n\nvar _DeleteOutlined = _interopRequireDefault(require(\"@ant-design/icons/DeleteOutlined\"));\n\nvar _DownloadOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownloadOutlined\"));\n\nvar _utils = require(\"./utils\");\n\nvar _tooltip = _interopRequireDefault(require(\"../tooltip\"));\n\nvar _progress = _interopRequireDefault(require(\"../progress\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar UploadList = /*#__PURE__*/function (_React$Component) {\n  _inherits(UploadList, _React$Component);\n\n  function UploadList() {\n    var _this;\n\n    _classCallCheck(this, UploadList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadList).apply(this, arguments));\n\n    _this.handlePreview = function (file, e) {\n      var onPreview = _this.props.onPreview;\n\n      if (!onPreview) {\n        return;\n      }\n\n      e.preventDefault();\n      return onPreview(file);\n    };\n\n    _this.handleDownload = function (file) {\n      var onDownload = _this.props.onDownload;\n\n      if (typeof onDownload === 'function') {\n        onDownload(file);\n      } else if (file.url) {\n        window.open(file.url);\n      }\n    };\n\n    _this.handleClose = function (file) {\n      var onRemove = _this.props.onRemove;\n\n      if (onRemove) {\n        onRemove(file);\n      }\n    };\n\n    _this.handleIconRender = function (file) {\n      var _this$props = _this.props,\n          listType = _this$props.listType,\n          locale = _this$props.locale,\n          iconRender = _this$props.iconRender;\n\n      if (iconRender) {\n        return iconRender(file, listType);\n      }\n\n      var isLoading = file.status === 'uploading';\n      var fileIcon = (0, _utils.isImageUrl)(file) ? React.createElement(_PictureTwoTone[\"default\"], null) : React.createElement(_FileTwoTone[\"default\"], null);\n      var icon = isLoading ? React.createElement(_LoadingOutlined[\"default\"], null) : React.createElement(_PaperClipOutlined[\"default\"], null);\n\n      if (listType === 'picture') {\n        icon = isLoading ? React.createElement(_LoadingOutlined[\"default\"], null) : fileIcon;\n      } else if (listType === 'picture-card') {\n        icon = isLoading ? locale.uploading : fileIcon;\n      }\n\n      return icon;\n    };\n\n    _this.handleActionIconRender = function (customIcon, callback, title) {\n      if (React.isValidElement(customIcon)) {\n        return React.cloneElement(customIcon, _extends(_extends({}, customIcon.props), {\n          title: title,\n          onClick: function onClick(e) {\n            callback();\n\n            if (customIcon.props.onClick) {\n              customIcon.props.onClick(e);\n            }\n          }\n        }));\n      }\n\n      return React.createElement(\"span\", {\n        title: title,\n        onClick: callback\n      }, customIcon);\n    };\n\n    _this.renderUploadList = function (_ref) {\n      var _classNames6;\n\n      var getPrefixCls = _ref.getPrefixCls,\n          direction = _ref.direction;\n      var _this$props2 = _this.props,\n          customizePrefixCls = _this$props2.prefixCls,\n          _this$props2$items = _this$props2.items,\n          items = _this$props2$items === void 0 ? [] : _this$props2$items,\n          listType = _this$props2.listType,\n          showPreviewIcon = _this$props2.showPreviewIcon,\n          showRemoveIcon = _this$props2.showRemoveIcon,\n          showDownloadIcon = _this$props2.showDownloadIcon,\n          customRemoveIcon = _this$props2.removeIcon,\n          customDownloadIcon = _this$props2.downloadIcon,\n          locale = _this$props2.locale,\n          progressAttr = _this$props2.progressAttr;\n      var prefixCls = getPrefixCls('upload', customizePrefixCls);\n      var list = items.map(function (file) {\n        var _classNames3, _classNames4;\n\n        var progress;\n\n        var iconNode = _this.handleIconRender(file);\n\n        var icon = React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-text-icon\")\n        }, iconNode);\n\n        if (listType === 'picture' || listType === 'picture-card') {\n          if (file.status === 'uploading' || !file.thumbUrl && !file.url) {\n            var _classNames;\n\n            var uploadingClassName = (0, _classnames[\"default\"])((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-list-item-thumbnail\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-list-item-file\"), file.status !== 'uploading'), _classNames));\n            icon = React.createElement(\"div\", {\n              className: uploadingClassName\n            }, iconNode);\n          } else {\n            var _classNames2;\n\n            var thumbnail = (0, _utils.isImageUrl)(file) ? React.createElement(\"img\", {\n              src: file.thumbUrl || file.url,\n              alt: file.name,\n              className: \"\".concat(prefixCls, \"-list-item-image\")\n            }) : iconNode;\n            var aClassName = (0, _classnames[\"default\"])((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-list-item-thumbnail\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-list-item-file\"), !(0, _utils.isImageUrl)(file)), _classNames2));\n            icon = React.createElement(\"a\", {\n              className: aClassName,\n              onClick: function onClick(e) {\n                return _this.handlePreview(file, e);\n              },\n              href: file.url || file.thumbUrl,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }, thumbnail);\n          }\n        }\n\n        if (file.status === 'uploading') {\n          // show loading icon if upload progress listener is disabled\n          var loadingProgress = 'percent' in file ? React.createElement(_progress[\"default\"], _extends({\n            type: \"line\"\n          }, progressAttr, {\n            percent: file.percent\n          })) : null;\n          progress = React.createElement(\"div\", {\n            className: \"\".concat(prefixCls, \"-list-item-progress\"),\n            key: \"progress\"\n          }, loadingProgress);\n        }\n\n        var infoUploadingClass = (0, _classnames[\"default\"])((_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefixCls, \"-list-item\"), true), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-list-item-\").concat(file.status), true), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-list-item-list-type-\").concat(listType), true), _classNames3));\n        var linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n        var removeIcon = showRemoveIcon ? customRemoveIcon && _this.handleActionIconRender(customRemoveIcon, function () {\n          return _this.handleClose(file);\n        }, locale.removeFile) || React.createElement(_DeleteOutlined[\"default\"], {\n          title: locale.removeFile,\n          onClick: function onClick() {\n            return _this.handleClose(file);\n          }\n        }) : null;\n        var downloadIcon = showDownloadIcon && file.status === 'done' ? customDownloadIcon && _this.handleActionIconRender(customDownloadIcon, function () {\n          return _this.handleDownload(file);\n        }, locale.downloadFile) || React.createElement(_DownloadOutlined[\"default\"], {\n          title: locale.downloadFile,\n          onClick: function onClick() {\n            return _this.handleDownload(file);\n          }\n        }) : null;\n        var downloadOrDelete = listType !== 'picture-card' && React.createElement(\"span\", {\n          key: \"download-delete\",\n          className: \"\".concat(prefixCls, \"-list-item-card-actions \").concat(listType === 'picture' ? 'picture' : '')\n        }, downloadIcon && React.createElement(\"a\", {\n          title: locale.downloadFile\n        }, downloadIcon), removeIcon && React.createElement(\"a\", {\n          title: locale.removeFile\n        }, removeIcon));\n        var listItemNameClass = (0, _classnames[\"default\"])((_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefixCls, \"-list-item-name\"), true), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-list-item-name-icon-count-\").concat([downloadIcon, removeIcon].filter(function (x) {\n          return x;\n        }).length), true), _classNames4));\n        var preview = file.url ? [React.createElement(\"a\", _extends({\n          key: \"view\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: listItemNameClass,\n          title: file.name\n        }, linkProps, {\n          href: file.url,\n          onClick: function onClick(e) {\n            return _this.handlePreview(file, e);\n          }\n        }), file.name), downloadOrDelete] : [React.createElement(\"span\", {\n          key: \"view\",\n          className: listItemNameClass,\n          onClick: function onClick(e) {\n            return _this.handlePreview(file, e);\n          },\n          title: file.name\n        }, file.name), downloadOrDelete];\n        var style = {\n          pointerEvents: 'none',\n          opacity: 0.5\n        };\n        var previewIcon = showPreviewIcon ? React.createElement(\"a\", {\n          href: file.url || file.thumbUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          style: file.url || file.thumbUrl ? undefined : style,\n          onClick: function onClick(e) {\n            return _this.handlePreview(file, e);\n          },\n          title: locale.previewFile\n        }, React.createElement(_EyeOutlined[\"default\"], null)) : null;\n        var actions = listType === 'picture-card' && file.status !== 'uploading' && React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-list-item-actions\")\n        }, previewIcon, file.status === 'done' && downloadIcon, removeIcon);\n        var message;\n\n        if (file.response && typeof file.response === 'string') {\n          message = file.response;\n        } else {\n          message = file.error && file.error.statusText || locale.uploadError;\n        }\n\n        var iconAndPreview = React.createElement(\"span\", null, icon, preview);\n        var dom = React.createElement(\"div\", {\n          className: infoUploadingClass\n        }, React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-list-item-info\")\n        }, iconAndPreview), actions, React.createElement(_rcAnimate[\"default\"], {\n          transitionName: \"fade\",\n          component: \"\"\n        }, progress));\n        var listContainerNameClass = (0, _classnames[\"default\"])(_defineProperty({}, \"\".concat(prefixCls, \"-list-picture-card-container\"), listType === 'picture-card'));\n        return React.createElement(\"div\", {\n          key: file.uid,\n          className: listContainerNameClass\n        }, file.status === 'error' ? React.createElement(_tooltip[\"default\"], {\n          title: message\n        }, dom) : React.createElement(\"span\", null, dom));\n      });\n      var listClassNames = (0, _classnames[\"default\"])((_classNames6 = {}, _defineProperty(_classNames6, \"\".concat(prefixCls, \"-list\"), true), _defineProperty(_classNames6, \"\".concat(prefixCls, \"-list-\").concat(listType), true), _defineProperty(_classNames6, \"\".concat(prefixCls, \"-list-rtl\"), direction === 'rtl'), _classNames6));\n      var animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n      return React.createElement(_rcAnimate[\"default\"], {\n        transitionName: \"\".concat(prefixCls, \"-\").concat(animationDirection),\n        component: \"div\",\n        className: listClassNames\n      }, list);\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          listType = _this$props3.listType,\n          items = _this$props3.items,\n          previewFile = _this$props3.previewFile;\n\n      if (listType !== 'picture' && listType !== 'picture-card') {\n        return;\n      }\n\n      (items || []).forEach(function (file) {\n        if (typeof document === 'undefined' || typeof window === 'undefined' || !window.FileReader || !window.File || !(file.originFileObj instanceof File || file.originFileObj instanceof Blob) || file.thumbUrl !== undefined) {\n          return;\n        }\n\n        file.thumbUrl = '';\n\n        if (previewFile) {\n          previewFile(file.originFileObj).then(function (previewDataUrl) {\n            // Need append '' to avoid dead loop\n            file.thumbUrl = previewDataUrl || '';\n\n            _this2.forceUpdate();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_configProvider.ConfigConsumer, null, this.renderUploadList);\n    }\n  }]);\n\n  return UploadList;\n}(React.Component);\n\nexports[\"default\"] = UploadList;\nUploadList.defaultProps = {\n  listType: 'text',\n  progressAttr: {\n    strokeWidth: 2,\n    showInfo: false\n  },\n  showRemoveIcon: true,\n  showDownloadIcon: false,\n  showPreviewIcon: true,\n  previewFile: _utils.previewImage\n};","map":{"version":3,"sources":["upload/UploadList.jsx"],"names":["UploadList","React","Component","onPreview","e","onDownload","file","window","onRemove","listType","locale","iconRender","isLoading","fileIcon","icon","customIcon","title","onClick","callback","getPrefixCls","direction","customizePrefixCls","items","showPreviewIcon","showRemoveIcon","showDownloadIcon","customRemoveIcon","customDownloadIcon","progressAttr","prefixCls","list","iconNode","uploadingClassName","thumbnail","aClassName","loadingProgress","percent","progress","infoUploadingClass","linkProps","JSON","removeIcon","downloadIcon","downloadOrDelete","downloadFile","removeFile","listItemNameClass","preview","name","style","pointerEvents","opacity","previewIcon","previewFile","actions","message","iconAndPreview","dom","listContainerNameClass","listClassNames","animationDirection","previewDataUrl","strokeWidth","showInfo","previewImage"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\nimport PaperClipOutlined from '@ant-design/icons/PaperClipOutlined';\nimport PictureTwoTone from '@ant-design/icons/PictureTwoTone';\nimport FileTwoTone from '@ant-design/icons/FileTwoTone';\nimport EyeOutlined from '@ant-design/icons/EyeOutlined';\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined';\nimport DownloadOutlined from '@ant-design/icons/DownloadOutlined';\nimport { previewImage, isImageUrl } from './utils';\nimport Tooltip from '../tooltip';\nimport Progress from '../progress';\nimport { ConfigConsumer } from '../config-provider';\nexport default class UploadList extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handlePreview = (file, e) => {\n            const { onPreview } = this.props;\n            if (!onPreview) {\n                return;\n            }\n            e.preventDefault();\n            return onPreview(file);\n        };\n        this.handleDownload = (file) => {\n            const { onDownload } = this.props;\n            if (typeof onDownload === 'function') {\n                onDownload(file);\n            }\n            else if (file.url) {\n                window.open(file.url);\n            }\n        };\n        this.handleClose = (file) => {\n            const { onRemove } = this.props;\n            if (onRemove) {\n                onRemove(file);\n            }\n        };\n        this.handleIconRender = (file) => {\n            const { listType, locale, iconRender } = this.props;\n            if (iconRender) {\n                return iconRender(file, listType);\n            }\n            const isLoading = file.status === 'uploading';\n            const fileIcon = isImageUrl(file) ? <PictureTwoTone /> : <FileTwoTone />;\n            let icon = isLoading ? <LoadingOutlined /> : <PaperClipOutlined />;\n            if (listType === 'picture') {\n                icon = isLoading ? <LoadingOutlined /> : fileIcon;\n            }\n            else if (listType === 'picture-card') {\n                icon = isLoading ? locale.uploading : fileIcon;\n            }\n            return icon;\n        };\n        this.handleActionIconRender = (customIcon, callback, title) => {\n            if (React.isValidElement(customIcon)) {\n                return React.cloneElement(customIcon, Object.assign(Object.assign({}, customIcon.props), { title, onClick: (e) => {\n                        callback();\n                        if (customIcon.props.onClick) {\n                            customIcon.props.onClick(e);\n                        }\n                    } }));\n            }\n            return (<span title={title} onClick={callback}>\n        {customIcon}\n      </span>);\n        };\n        this.renderUploadList = ({ getPrefixCls, direction }) => {\n            const { prefixCls: customizePrefixCls, items = [], listType, showPreviewIcon, showRemoveIcon, showDownloadIcon, removeIcon: customRemoveIcon, downloadIcon: customDownloadIcon, locale, progressAttr, } = this.props;\n            const prefixCls = getPrefixCls('upload', customizePrefixCls);\n            const list = items.map(file => {\n                let progress;\n                const iconNode = this.handleIconRender(file);\n                let icon = <div className={`${prefixCls}-text-icon`}>{iconNode}</div>;\n                if (listType === 'picture' || listType === 'picture-card') {\n                    if (file.status === 'uploading' || (!file.thumbUrl && !file.url)) {\n                        const uploadingClassName = classNames({\n                            [`${prefixCls}-list-item-thumbnail`]: true,\n                            [`${prefixCls}-list-item-file`]: file.status !== 'uploading',\n                        });\n                        icon = <div className={uploadingClassName}>{iconNode}</div>;\n                    }\n                    else {\n                        const thumbnail = isImageUrl(file) ? (<img src={file.thumbUrl || file.url} alt={file.name} className={`${prefixCls}-list-item-image`}/>) : (iconNode);\n                        const aClassName = classNames({\n                            [`${prefixCls}-list-item-thumbnail`]: true,\n                            [`${prefixCls}-list-item-file`]: !isImageUrl(file),\n                        });\n                        icon = (<a className={aClassName} onClick={e => this.handlePreview(file, e)} href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              {thumbnail}\n            </a>);\n                    }\n                }\n                if (file.status === 'uploading') {\n                    // show loading icon if upload progress listener is disabled\n                    const loadingProgress = 'percent' in file ? (<Progress type=\"line\" {...progressAttr} percent={file.percent}/>) : null;\n                    progress = (<div className={`${prefixCls}-list-item-progress`} key=\"progress\">\n            {loadingProgress}\n          </div>);\n                }\n                const infoUploadingClass = classNames({\n                    [`${prefixCls}-list-item`]: true,\n                    [`${prefixCls}-list-item-${file.status}`]: true,\n                    [`${prefixCls}-list-item-list-type-${listType}`]: true,\n                });\n                const linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n                const removeIcon = showRemoveIcon\n                    ? (customRemoveIcon &&\n                        this.handleActionIconRender(customRemoveIcon, () => this.handleClose(file), locale.removeFile)) || (<DeleteOutlined title={locale.removeFile} onClick={() => this.handleClose(file)}/>)\n                    : null;\n                const downloadIcon = showDownloadIcon && file.status === 'done'\n                    ? (customDownloadIcon &&\n                        this.handleActionIconRender(customDownloadIcon, () => this.handleDownload(file), locale.downloadFile)) || (<DownloadOutlined title={locale.downloadFile} onClick={() => this.handleDownload(file)}/>)\n                    : null;\n                const downloadOrDelete = listType !== 'picture-card' && (<span key=\"download-delete\" className={`${prefixCls}-list-item-card-actions ${listType === 'picture' ? 'picture' : ''}`}>\n          {downloadIcon && <a title={locale.downloadFile}>{downloadIcon}</a>}\n          {removeIcon && <a title={locale.removeFile}>{removeIcon}</a>}\n        </span>);\n                const listItemNameClass = classNames({\n                    [`${prefixCls}-list-item-name`]: true,\n                    [`${prefixCls}-list-item-name-icon-count-${[downloadIcon, removeIcon].filter(x => x).length}`]: true,\n                });\n                const preview = file.url\n                    ? [\n                        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\" className={listItemNameClass} title={file.name} {...linkProps} href={file.url} onClick={e => this.handlePreview(file, e)}>\n              {file.name}\n            </a>,\n                        downloadOrDelete,\n                    ]\n                    : [\n                        <span key=\"view\" className={listItemNameClass} onClick={e => this.handlePreview(file, e)} title={file.name}>\n              {file.name}\n            </span>,\n                        downloadOrDelete,\n                    ];\n                const style = {\n                    pointerEvents: 'none',\n                    opacity: 0.5,\n                };\n                const previewIcon = showPreviewIcon ? (<a href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={file.url || file.thumbUrl ? undefined : style} onClick={e => this.handlePreview(file, e)} title={locale.previewFile}>\n          <EyeOutlined />\n        </a>) : null;\n                const actions = listType === 'picture-card' && file.status !== 'uploading' && (<span className={`${prefixCls}-list-item-actions`}>\n          {previewIcon}\n          {file.status === 'done' && downloadIcon}\n          {removeIcon}\n        </span>);\n                let message;\n                if (file.response && typeof file.response === 'string') {\n                    message = file.response;\n                }\n                else {\n                    message = (file.error && file.error.statusText) || locale.uploadError;\n                }\n                const iconAndPreview = (<span>\n          {icon}\n          {preview}\n        </span>);\n                const dom = (<div className={infoUploadingClass}>\n          <div className={`${prefixCls}-list-item-info`}>{iconAndPreview}</div>\n          {actions}\n          <Animate transitionName=\"fade\" component=\"\">\n            {progress}\n          </Animate>\n        </div>);\n                const listContainerNameClass = classNames({\n                    [`${prefixCls}-list-picture-card-container`]: listType === 'picture-card',\n                });\n                return (<div key={file.uid} className={listContainerNameClass}>\n          {file.status === 'error' ? <Tooltip title={message}>{dom}</Tooltip> : <span>{dom}</span>}\n        </div>);\n            });\n            const listClassNames = classNames({\n                [`${prefixCls}-list`]: true,\n                [`${prefixCls}-list-${listType}`]: true,\n                [`${prefixCls}-list-rtl`]: direction === 'rtl',\n            });\n            const animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n            return (<Animate transitionName={`${prefixCls}-${animationDirection}`} component=\"div\" className={listClassNames}>\n        {list}\n      </Animate>);\n        };\n    }\n    componentDidUpdate() {\n        const { listType, items, previewFile } = this.props;\n        if (listType !== 'picture' && listType !== 'picture-card') {\n            return;\n        }\n        (items || []).forEach(file => {\n            if (typeof document === 'undefined' ||\n                typeof window === 'undefined' ||\n                !window.FileReader ||\n                !window.File ||\n                !(file.originFileObj instanceof File || file.originFileObj instanceof Blob) ||\n                file.thumbUrl !== undefined) {\n                return;\n            }\n            file.thumbUrl = '';\n            if (previewFile) {\n                previewFile(file.originFileObj).then((previewDataUrl) => {\n                    // Need append '' to avoid dead loop\n                    file.thumbUrl = previewDataUrl || '';\n                    this.forceUpdate();\n                });\n            }\n        });\n    }\n    render() {\n        return <ConfigConsumer>{this.renderUploadList}</ConfigConsumer>;\n    }\n}\nUploadList.defaultProps = {\n    listType: 'text',\n    progressAttr: {\n        strokeWidth: 2,\n        showInfo: false,\n    },\n    showRemoveIcon: true,\n    showDownloadIcon: false,\n    showPreviewIcon: true,\n    previewFile: previewImage,\n};\n"]},"metadata":{},"sourceType":"script"}