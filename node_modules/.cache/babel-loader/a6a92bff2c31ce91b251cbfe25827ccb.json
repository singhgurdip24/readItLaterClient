{"ast":null,"code":"import\"antd/es/avatar/style\";import _Avatar from\"antd/es/avatar\";import _classCallCheck from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/gurdipsingh/git/polling-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import\"antd/es/tabs/style\";import _Tabs from\"antd/es/tabs\";import React,{Component}from'react';import PollList from'../../poll/PollList';import{getUserProfile}from'../../util/APIUtils';import{getAvatarColor}from'../../util/Colors';import{formatDate}from'../../util/Helpers';import LoadingIndicator from'../../common/LoadingIndicator';import'./Profile.css';import NotFound from'../../common/NotFound';import ServerError from'../../common/ServerError';var TabPane=_Tabs.TabPane;var Profile=/*#__PURE__*/function(_Component){_inherits(Profile,_Component);function Profile(props){var _this;_classCallCheck(this,Profile);_this=_possibleConstructorReturn(this,_getPrototypeOf(Profile).call(this,props));_this.state={user:null,isLoading:false};_this.loadUserProfile=_this.loadUserProfile.bind(_assertThisInitialized(_this));return _this;}_createClass(Profile,[{key:\"loadUserProfile\",value:function loadUserProfile(username){var _this2=this;this.setState({isLoading:true});getUserProfile(username).then(function(response){_this2.setState({user:response,isLoading:false});}).catch(function(error){if(error.status===404){_this2.setState({notFound:true,isLoading:false});}else{_this2.setState({serverError:true,isLoading:false});}});}},{key:\"componentDidMount\",value:function componentDidMount(){var username=this.props.match.params.username;this.loadUserProfile(username);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(nextProps){if(this.props.match.params.username!==nextProps.match.params.username){this.loadUserProfile(nextProps.match.params.username);}}},{key:\"render\",value:function render(){if(this.state.isLoading){return React.createElement(LoadingIndicator,null);}if(this.state.notFound){return React.createElement(NotFound,null);}if(this.state.serverError){return React.createElement(ServerError,null);}var tabBarStyle={textAlign:'center'};return React.createElement(\"div\",{className:\"profile\"},this.state.user?React.createElement(\"div\",{className:\"user-profile\"},React.createElement(\"div\",{className:\"user-details\"},React.createElement(\"div\",{className:\"user-avatar\"},React.createElement(_Avatar,{className:\"user-avatar-circle\",style:{backgroundColor:getAvatarColor(this.state.user.name)}},this.state.user.name[0].toUpperCase())),React.createElement(\"div\",{className:\"user-summary\"},React.createElement(\"div\",{className:\"full-name\"},this.state.user.name),React.createElement(\"div\",{className:\"username\"},\"@\",this.state.user.username),React.createElement(\"div\",{className:\"user-joined\"},\"Joined \",formatDate(this.state.user.joinedAt)))),React.createElement(\"div\",{className:\"user-poll-details\"},React.createElement(_Tabs,{defaultActiveKey:\"1\",animated:false,tabBarStyle:tabBarStyle,size:\"large\",className:\"profile-tabs\"},React.createElement(TabPane,{tab:\"\".concat(this.state.user.pollCount,\" Polls\"),key:\"1\"},React.createElement(PollList,{username:this.props.match.params.username,type:\"USER_CREATED_POLLS\"})),React.createElement(TabPane,{tab:\"\".concat(this.state.user.voteCount,\" Votes\"),key:\"2\"},React.createElement(PollList,{username:this.props.match.params.username,type:\"USER_VOTED_POLLS\"}))))):null);}}]);return Profile;}(Component);export default Profile;","map":{"version":3,"sources":["/Users/gurdipsingh/git/polling-app-client/src/user/profile/Profile.js"],"names":["React","Component","PollList","getUserProfile","getAvatarColor","formatDate","LoadingIndicator","NotFound","ServerError","TabPane","Profile","props","state","user","isLoading","loadUserProfile","bind","username","setState","then","response","catch","error","status","notFound","serverError","match","params","nextProps","tabBarStyle","textAlign","backgroundColor","name","toUpperCase","joinedAt","pollCount","voteCount"],"mappings":"0lCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,OAASC,cAAT,KAA+B,qBAA/B,CAEA,OAASC,cAAT,KAA+B,mBAA/B,CACA,OAASC,UAAT,KAA2B,oBAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA8B,+BAA9B,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CAEA,GAAMC,CAAAA,OAAO,CAAG,MAAKA,OAArB,C,GAEMC,CAAAA,O,iEACF,iBAAYC,KAAZ,CAAmB,yCACf,yEAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACTC,IAAI,CAAE,IADG,CAETC,SAAS,CAAE,KAFF,CAAb,CAIA,MAAKC,eAAL,CAAuB,MAAKA,eAAL,CAAqBC,IAArB,+BAAvB,CANe,aAOlB,C,4EAEeC,Q,CAAU,iBACtB,KAAKC,QAAL,CAAc,CACVJ,SAAS,CAAE,IADD,CAAd,EAIAX,cAAc,CAACc,QAAD,CAAd,CACCE,IADD,CACM,SAAAC,QAAQ,CAAI,CACd,MAAI,CAACF,QAAL,CAAc,CACVL,IAAI,CAAEO,QADI,CAEVN,SAAS,CAAE,KAFD,CAAd,EAIH,CAND,EAMGO,KANH,CAMS,SAAAC,KAAK,CAAI,CACd,GAAGA,KAAK,CAACC,MAAN,GAAiB,GAApB,CAAyB,CACrB,MAAI,CAACL,QAAL,CAAc,CACVM,QAAQ,CAAE,IADA,CAEVV,SAAS,CAAE,KAFD,CAAd,EAIH,CALD,IAKO,CACH,MAAI,CAACI,QAAL,CAAc,CACVO,WAAW,CAAE,IADH,CAEVX,SAAS,CAAE,KAFD,CAAd,EAIH,CACJ,CAlBD,EAmBH,C,6DAEmB,CAChB,GAAMG,CAAAA,QAAQ,CAAG,KAAKN,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBV,QAAzC,CACA,KAAKF,eAAL,CAAqBE,QAArB,EACH,C,8DAEkBW,S,CAAW,CAC1B,GAAG,KAAKjB,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBV,QAAxB,GAAqCW,SAAS,CAACF,KAAV,CAAgBC,MAAhB,CAAuBV,QAA/D,CAAyE,CACrE,KAAKF,eAAL,CAAqBa,SAAS,CAACF,KAAV,CAAgBC,MAAhB,CAAuBV,QAA5C,EACH,CACJ,C,uCAEQ,CACL,GAAG,KAAKL,KAAL,CAAWE,SAAd,CAAyB,CACrB,MAAO,qBAAC,gBAAD,MAAP,CACH,CAED,GAAG,KAAKF,KAAL,CAAWY,QAAd,CAAwB,CACpB,MAAO,qBAAC,QAAD,MAAP,CACH,CAED,GAAG,KAAKZ,KAAL,CAAWa,WAAd,CAA2B,CACvB,MAAO,qBAAC,WAAD,MAAP,CACH,CAED,GAAMI,CAAAA,WAAW,CAAG,CAChBC,SAAS,CAAE,QADK,CAApB,CAIA,MACI,4BAAK,SAAS,CAAC,SAAf,EAEQ,KAAKlB,KAAL,CAAWC,IAAX,CACI,2BAAK,SAAS,CAAC,cAAf,EACI,2BAAK,SAAS,CAAC,cAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EACI,6BAAQ,SAAS,CAAC,oBAAlB,CAAuC,KAAK,CAAE,CAAEkB,eAAe,CAAE3B,cAAc,CAAC,KAAKQ,KAAL,CAAWC,IAAX,CAAgBmB,IAAjB,CAAjC,CAA9C,EACK,KAAKpB,KAAL,CAAWC,IAAX,CAAgBmB,IAAhB,CAAqB,CAArB,EAAwBC,WAAxB,EADL,CADJ,CADJ,CAMI,2BAAK,SAAS,CAAC,cAAf,EACI,2BAAK,SAAS,CAAC,WAAf,EAA4B,KAAKrB,KAAL,CAAWC,IAAX,CAAgBmB,IAA5C,CADJ,CAEI,2BAAK,SAAS,CAAC,UAAf,MAA4B,KAAKpB,KAAL,CAAWC,IAAX,CAAgBI,QAA5C,CAFJ,CAGI,2BAAK,SAAS,CAAC,aAAf,YACYZ,UAAU,CAAC,KAAKO,KAAL,CAAWC,IAAX,CAAgBqB,QAAjB,CADtB,CAHJ,CANJ,CADJ,CAeI,2BAAK,SAAS,CAAC,mBAAf,EACI,2BAAM,gBAAgB,CAAC,GAAvB,CACI,QAAQ,CAAE,KADd,CAEI,WAAW,CAAEL,WAFjB,CAGI,IAAI,CAAC,OAHT,CAII,SAAS,CAAC,cAJd,EAKI,oBAAC,OAAD,EAAS,GAAG,WAAK,KAAKjB,KAAL,CAAWC,IAAX,CAAgBsB,SAArB,UAAZ,CAAoD,GAAG,CAAC,GAAxD,EACI,oBAAC,QAAD,EAAU,QAAQ,CAAE,KAAKxB,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBV,QAA5C,CAAsD,IAAI,CAAC,oBAA3D,EADJ,CALJ,CAQI,oBAAC,OAAD,EAAS,GAAG,WAAK,KAAKL,KAAL,CAAWC,IAAX,CAAgBuB,SAArB,UAAZ,CAAqD,GAAG,CAAC,GAAzD,EACI,oBAAC,QAAD,EAAU,QAAQ,CAAE,KAAKzB,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBV,QAA5C,CAAsD,IAAI,CAAC,kBAA3D,EADJ,CARJ,CADJ,CAfJ,CADJ,CA+BG,IAjCX,CADJ,CAsCH,C,qBAtGiBhB,S,EAyGtB,cAAeS,CAAAA,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport PollList from '../../poll/PollList';\nimport { getUserProfile } from '../../util/APIUtils';\nimport { Avatar, Tabs } from 'antd';\nimport { getAvatarColor } from '../../util/Colors';\nimport { formatDate } from '../../util/Helpers';\nimport LoadingIndicator  from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\n\nconst TabPane = Tabs.TabPane;\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            isLoading: false\n        }\n        this.loadUserProfile = this.loadUserProfile.bind(this);\n    }\n\n    loadUserProfile(username) {\n        this.setState({\n            isLoading: true\n        });\n\n        getUserProfile(username)\n        .then(response => {\n            this.setState({\n                user: response,\n                isLoading: false\n            });\n        }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });        \n            }\n        });        \n    }\n      \n    componentDidMount() {\n        const username = this.props.match.params.username;\n        this.loadUserProfile(username);\n    }\n\n    componentDidUpdate(nextProps) {\n        if(this.props.match.params.username !== nextProps.match.params.username) {\n            this.loadUserProfile(nextProps.match.params.username);\n        }        \n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return <LoadingIndicator />;\n        }\n\n        if(this.state.notFound) {\n            return <NotFound />;\n        }\n\n        if(this.state.serverError) {\n            return <ServerError />;\n        }\n\n        const tabBarStyle = {\n            textAlign: 'center'\n        };\n\n        return (\n            <div className=\"profile\">\n                { \n                    this.state.user ? (\n                        <div className=\"user-profile\">\n                            <div className=\"user-details\">\n                                <div className=\"user-avatar\">\n                                    <Avatar className=\"user-avatar-circle\" style={{ backgroundColor: getAvatarColor(this.state.user.name)}}>\n                                        {this.state.user.name[0].toUpperCase()}\n                                    </Avatar>\n                                </div>\n                                <div className=\"user-summary\">\n                                    <div className=\"full-name\">{this.state.user.name}</div>\n                                    <div className=\"username\">@{this.state.user.username}</div>\n                                    <div className=\"user-joined\">\n                                        Joined {formatDate(this.state.user.joinedAt)}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"user-poll-details\">    \n                                <Tabs defaultActiveKey=\"1\" \n                                    animated={false}\n                                    tabBarStyle={tabBarStyle}\n                                    size=\"large\"\n                                    className=\"profile-tabs\">\n                                    <TabPane tab={`${this.state.user.pollCount} Polls`} key=\"1\">\n                                        <PollList username={this.props.match.params.username} type=\"USER_CREATED_POLLS\" />\n                                    </TabPane>\n                                    <TabPane tab={`${this.state.user.voteCount} Votes`}  key=\"2\">\n                                        <PollList username={this.props.match.params.username} type=\"USER_VOTED_POLLS\" />\n                                    </TabPane>\n                                </Tabs>\n                            </div>  \n                        </div>  \n                    ): null               \n                }\n            </div>\n        );\n    }\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}